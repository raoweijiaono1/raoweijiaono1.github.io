<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python基础(5)</title>
      <link href="/2019/10/23/2019-10-14-python-ji-chu-5/"/>
      <url>/2019/10/23/2019-10-14-python-ji-chu-5/</url>
      
        <content type="html"><![CDATA[<h2 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h2><p>函数名的定义：1.推荐使用英文，可以使用拼音，不可以使用汉字；2.可以使用数字，但是不能以数字开头；3.不可以使用特殊字符，除了下划线_；4.函数名严格区分大小写；5.函数命名要有意义；6.函数名不能和系统保留关键字冲突；7.函数名尽量不要和系统已存在的内建函数同名，以免覆盖内建函数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将输出10行10列的星星作为一个整体</span></span><br><span class="line">def mystar():<span class="comment">#新的代码组  函数</span></span><br><span class="line">  j = 0</span><br><span class="line">  <span class="keyword">while</span> j &lt; 3:</span><br><span class="line">    <span class="comment"># 输出一行星星</span></span><br><span class="line">    i = 0</span><br><span class="line">    <span class="keyword">while</span> i &lt; 10:</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">'*'</span>, end=<span class="string">''</span>)</span><br><span class="line">      i += 1</span><br><span class="line">     <span class="comment"># 输出一个换行</span></span><br><span class="line">     <span class="built_in">print</span>()</span><br><span class="line"><span class="comment"># 变量自增</span></span><br><span class="line">j += 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#在输出1个10行10列的星星</span></span><br><span class="line">mystar()</span><br></pre></td></tr></table></figure><h2 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h2><ul><li>普通参数</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#带有参数的函数</span></span><br><span class="line">def printnum(maxnum):</span><br><span class="line">  var = 0</span><br><span class="line">  <span class="keyword">while</span> var &lt;= maxnum:</span><br><span class="line">      <span class="built_in">print</span>(var)</span><br><span class="line">      var += 1</span><br><span class="line"><span class="comment">#输出0-10的数字</span></span><br><span class="line"><span class="comment">#printnum(10)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#形参：在定义函数的括号中声明的变量名就是形参，形式上的参数</span></span><br><span class="line"><span class="comment">#实参：在调用函数的括号中传入的就是实参，实际上的参数</span></span><br><span class="line"><span class="comment">#注意：实参将值传递给形参的过程，本质上就是变量赋值操作</span></span><br></pre></td></tr></table></figure><ul><li>默认值参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buyPC</span><span class="params">(cpu = <span class="string">'I5'</span>,memory = <span class="string">'4G'</span>,videocard = <span class="string">'970'</span>)</span>:</span></span><br><span class="line">  print(<span class="string">'CPU是'</span>+ cpu)</span><br><span class="line">  print(<span class="string">'内存是'</span>+ memory)</span><br><span class="line">  print(<span class="string">'显卡是'</span> + videocard)</span><br><span class="line"></span><br><span class="line"><span class="comment">#调用函数  传入实参 -&gt; 使用的是实参值</span></span><br><span class="line"><span class="comment">#buyPC('I7-7700K','16G','1080ti')</span></span><br><span class="line"><span class="comment">#调用函数  不传入实参 -&gt; 使用的是形参的默认值</span></span><br><span class="line"><span class="comment">#buyPC()</span></span><br><span class="line"><span class="comment">#调用函数  传入一个实参</span></span><br><span class="line"><span class="comment">#buyPC('I5','16G')</span></span><br></pre></td></tr></table></figure><ul><li>关键字参数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">creatPerson</span><span class="params">(mz,xl,yf,wq,xz)</span>:</span></span><br><span class="line">  print(<span class="string">'头上戴着'</span>+ mz )</span><br><span class="line">  print(<span class="string">'脖子上挂着'</span> + xl)</span><br><span class="line">  print(<span class="string">'身上穿着'</span> + yf)</span><br><span class="line">  print(<span class="string">'手上拿着'</span> + wq)</span><br><span class="line">  print(<span class="string">'脚上穿着'</span> + xz)</span><br><span class="line"><span class="comment">#调用函数（使用关键字参数）</span></span><br><span class="line">creatPerson(xl = <span class="string">'钻石项链'</span>, wq = <span class="string">'金丝大环刀'</span>, yf = <span class="string">'锁子甲'</span>,xz = <span class="string">'草鞋'</span>,mz = <span class="string">'三级头'</span>)</span><br></pre></td></tr></table></figure><ul><li>收集参数</li></ul><p>在普通形参之前添加一个”*“，就可以使得当前形参可以接受多个传入的实参.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getsum</span><span class="params">(*allnum)</span>:</span></span><br><span class="line">  <span class="comment">#声明一个累加和的变量</span></span><br><span class="line">  total = <span class="number">0</span></span><br><span class="line">  <span class="comment">#计算所有数值的和</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> allnum:</span><br><span class="line">      total = total + i</span><br><span class="line">  <span class="comment">#打印求和结果</span></span><br><span class="line">  print(total)</span><br><span class="line"><span class="comment">#调用函数</span></span><br><span class="line">getsum(<span class="number">2</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getarg</span><span class="params">(a,b,c,*d)</span>:</span></span><br><span class="line">  print(a,b,c)</span><br><span class="line">  print(d)</span><br><span class="line"><span class="comment">#调用函数</span></span><br><span class="line">getarg(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">  <span class="comment">#1.收集参数仅仅接受没有形参接受的普通实参</span></span><br><span class="line">  <span class="comment">#2.收集参数只可以接受普通实参，不可以接受关键字参数（关键字实参）</span></span><br></pre></td></tr></table></figure><ul><li>关键字收集参数</li></ul><p>在普通的形参之前添加两个”**“,既可以是的当前形参可以接受多个传入的关键字实参.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">showinfo</span><span class="params">(xh,**person)</span>:</span></span><br><span class="line">  <span class="comment">#打印person接受的结果</span></span><br><span class="line">  print(person)</span><br><span class="line">  print(<span class="string">'参与大会的人员有'</span> , person.keys())</span><br><span class="line">  print(<span class="string">'他们的体重分别是'</span>,person.values())</span><br><span class="line"></span><br><span class="line"><span class="comment">#调用函数</span></span><br><span class="line">showinfo(ml = <span class="number">90</span>,xm = <span class="number">120</span> ,xh = <span class="number">98</span> ,xg = <span class="number">145</span>)<span class="comment">#关键字参数</span></span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line"><span class="comment">#1.关键字收集参数仅仅接收没有形参接收的关键字参数</span></span><br><span class="line"><span class="comment">#2.关键字收集参数只可以接收关键字实参，不可以接收不同实参</span></span><br></pre></td></tr></table></figure><ul><li>多种参数混合</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">testargs</span><span class="params">(name,sex,age,*size,**goodfriends)</span>:</span></span><br><span class="line">  <span class="comment">#使用普通参数</span></span><br><span class="line">  print(name,sex,age)</span><br><span class="line">  <span class="comment">#使用收集参数</span></span><br><span class="line">  print(size)</span><br><span class="line">  <span class="comment">#使用关键字收集参数</span></span><br><span class="line">  print(goodfriends)</span><br><span class="line"><span class="comment">#调用函数</span></span><br><span class="line">testargs(<span class="string">'小明'</span>,<span class="string">'男'</span>,<span class="number">18</span>,<span class="number">178</span>,<span class="number">125</span>,<span class="number">35</span>,gf1 = <span class="string">'小刚'</span>,gf2 = <span class="string">'小欧'</span>,gf3 = <span class="string">'小红'</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>实参:普通实参在前，关键字参数在后</span><br><span class="line"><span class="number">2.</span>形参:关键字收集参数一定在最后出现,收集参数推荐在普通参数之后使用,推荐顺序：普通形参,收集参数,关键字收集参数。</span><br></pre></td></tr></table></figure><h2 id="return"><a href="#return" class="headerlink" title="return"></a>return</h2><ul><li>返回值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义一个计算两个数值的和的函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getsum</span><span class="params">(no1,no2)</span>:</span></span><br><span class="line">  result = no1 + no2</span><br><span class="line">  <span class="comment">#print(result)</span></span><br><span class="line">  <span class="comment">#返回值语句</span></span><br><span class="line">  <span class="keyword">return</span> result</span><br><span class="line">  </span><br><span class="line">str = getsum()</span><br></pre></td></tr></table></figure><ul><li>终止函数执行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看return语句的另外一个作用</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">  print(<span class="string">'************'</span>)</span><br><span class="line">  <span class="comment">#添加return语句</span></span><br><span class="line">  <span class="keyword">return</span></span><br><span class="line">  print(<span class="string">'############'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#调用函数</span></span><br><span class="line">test()</span><br></pre></td></tr></table></figure><h2 id="函数文档"><a href="#函数文档" class="headerlink" title="函数文档"></a>函数文档</h2><p>查看函数的文档:</p><pre><code>1.使用help函数(推荐使用)  help(id)  help(print)  help(type)2.函数名.__doc__  print(id.__doc__)  print(print.__doc__)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自定函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getsum</span><span class="params">(no1,no2)</span>:</span></span><br><span class="line">  <span class="string">'''</span></span><br><span class="line"><span class="string">  :功能:  计算两个数值的和</span></span><br><span class="line"><span class="string">  :参数1  no1: Number类型</span></span><br><span class="line"><span class="string">  :参数2  no2: Number类型</span></span><br><span class="line"><span class="string">  :返回值 : 两个数值的和 Number</span></span><br><span class="line"><span class="string">  '''</span></span><br><span class="line">  result = no1 + no2</span><br><span class="line">  <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看自定义函数的文档</span></span><br><span class="line">help(getsum)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python基础(4)</title>
      <link href="/2019/10/23/2019-10-13-python-ji-chu-4/"/>
      <url>/2019/10/23/2019-10-13-python-ji-chu-4/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h2 id="单行语句和代码组"><a href="#单行语句和代码组" class="headerlink" title="单行语句和代码组"></a>单行语句和代码组</h2><ul><li>单行语句</li></ul><p>dweffef</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var = <span class="string">'单行语句'</span></span><br><span class="line">print(var)</span><br></pre></td></tr></table></figure><ul><li>代码组</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mycode</span><span class="params">()</span>:</span></span><br><span class="line">  print(<span class="string">'单行代码'</span>)</span><br><span class="line">  print(<span class="string">'单行代码'</span>)</span><br><span class="line">  print(<span class="string">'单行代码'</span>)</span><br><span class="line">  print(<span class="string">'单行代码'</span>)</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mycode2</span>:</span></span><br><span class="line">  var1 = <span class="number">1</span></span><br><span class="line">  var2 = <span class="number">2</span></span><br><span class="line">在代码组中要使用缩进表示在代码组中，本行不空格表示不在代码组。</span><br></pre></td></tr></table></figure><h2 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h2><ul><li>单项分支</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">55</span> &gt; <span class="number">133</span>:</span><br><span class="line">  print(<span class="string">'这个比较运算是正确的'</span>)</span><br><span class="line">  print(<span class="string">'这个比较运算是正确的'</span>)</span><br><span class="line">  print(<span class="string">'这个比较运算是正确的'</span>)</span><br><span class="line">  print(<span class="string">'这个比较运算是正确的'</span>)</span><br><span class="line">  print(<span class="string">'这个比较运算是正确的'</span>)</span><br><span class="line"></span><br><span class="line">当条件表达式结果为真，则执行代码组中的内容，如果为假则不执行代码组中的内容。</span><br></pre></td></tr></table></figure><ul><li>双项分支</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">55</span> &gt; <span class="number">144</span>:</span><br><span class="line">  print(<span class="string">'比较运算结果是正确的'</span>)</span><br><span class="line">  print(<span class="string">'比较运算结果是正确的'</span>)</span><br><span class="line">  print(<span class="string">'比较运算结果是正确的'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  print(<span class="string">'这个比较运算是错误的'</span>)</span><br><span class="line">  print(<span class="string">'这个比较运算是错误的'</span>)</span><br><span class="line">  print(<span class="string">'这个比较运算是错误的'</span>)</span><br><span class="line"></span><br><span class="line">当条件表达式结果为真，则执行<span class="keyword">if</span>后面代码组内容，如果为假而是执行<span class="keyword">else</span>后面代码组的内容</span><br><span class="line">真区间：当条件表达式结果为真执行的区域就是真区间 也叫做<span class="keyword">if</span>区间</span><br><span class="line">假区间：当条件表达式结果为假的时候执行的区间就是假区间，也叫做<span class="keyword">else</span>区间</span><br></pre></td></tr></table></figure><ul><li>多项分支</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">week = <span class="number">8</span></span><br><span class="line"><span class="keyword">if</span> week == <span class="number">1</span>:<span class="comment">#检测是否是周一</span></span><br><span class="line">  print(<span class="string">'今天是周一，我们吃西红柿炒番茄'</span>)</span><br><span class="line"><span class="keyword">elif</span> week == <span class="number">2</span>:<span class="comment">#检测是否是周二</span></span><br><span class="line">  print(<span class="string">'今天是周二，我们吃马铃薯炖土豆'</span>)</span><br><span class="line"><span class="keyword">elif</span> week == <span class="number">3</span>:<span class="comment">#检测是否是周三</span></span><br><span class="line">  print(<span class="string">'今天是周三，我们吃大米煮小米'</span>)</span><br><span class="line"><span class="keyword">elif</span> week == <span class="number">4</span>:<span class="comment">#检测是否是周四</span></span><br><span class="line">  print(<span class="string">'今天是周四，我们吃老母鸡炖老公鸡'</span>)</span><br><span class="line"><span class="keyword">elif</span> week == <span class="number">5</span>:<span class="comment">#检测是否是周五</span></span><br><span class="line">  print(<span class="string">'今天是周五，我们吃蒜苔炒肉'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  print(<span class="string">'今天是周末，不吃饭'</span>)</span><br><span class="line"></span><br><span class="line">多项分支无论有多少分支，只能执行其中一个分支，而且一旦执行某个分支，分支结构就结束</span><br></pre></td></tr></table></figure><ul><li>巢状分支</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">如，进入家中需要经过三个门：小区门   楼门    家门</span><br><span class="line">xiaoqu = <span class="literal">True</span> <span class="comment">#True 开 False关</span></span><br><span class="line">loumen = <span class="literal">True</span></span><br><span class="line">jiamen = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'走到了小区的门口'</span>)</span><br><span class="line"><span class="comment">#判断小区的门是否打开</span></span><br><span class="line"><span class="keyword">if</span> xiaoqu == <span class="literal">True</span>:<span class="comment">#检测小区门是否打开</span></span><br><span class="line">  <span class="comment">#开着</span></span><br><span class="line">  print(<span class="string">'小区门开着，走进小区，来到楼门前'</span>)</span><br><span class="line">  <span class="comment">#判断楼门是否打开</span></span><br><span class="line">  <span class="keyword">if</span> loumen == <span class="literal">True</span>:</span><br><span class="line">    <span class="comment">#开着</span></span><br><span class="line">    print(<span class="string">'楼门开着，走进大楼，来到家门口'</span>)</span><br><span class="line">    <span class="comment">#判断家门是否打开</span></span><br><span class="line">    <span class="keyword">if</span> jiamen == <span class="literal">True</span>:</span><br><span class="line">      print(<span class="string">'家门开着，家里有人，走进家中'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      print(<span class="string">'家门没开，掏出钥匙打开门，走进家中'</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="comment">#关着</span></span><br><span class="line">    print(<span class="string">'楼门关着，刷开打开楼门'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="comment">#关着</span></span><br><span class="line">  print(<span class="string">'小区门关着，保安大哥，开个门'</span>)</span><br></pre></td></tr></table></figure><h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><ul><li>带有变化条件的循环</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var = <span class="number">0</span><span class="comment"># （初始化变量）</span></span><br><span class="line"><span class="keyword">while</span> var &lt; <span class="number">10</span>:<span class="comment">#判断条件</span></span><br><span class="line">  print(<span class="string">'一个小苹果'</span>)<span class="comment">#循环代码</span></span><br><span class="line">  var += <span class="number">1</span><span class="comment">#变量自增或者自减</span></span><br></pre></td></tr></table></figure><ul><li>for in循环</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">此循环的终止条件是所有数据都被遍历</span><br><span class="line"><span class="comment">#for...in循环遍历字典</span></span><br><span class="line">fruit = &#123;<span class="string">'a'</span>:<span class="string">'苹果'</span>,<span class="string">'b'</span>:<span class="string">'榴莲'</span>,<span class="string">'c'</span>:<span class="string">'樱桃'</span>,<span class="string">'d'</span>:<span class="string">'水蜜桃'</span>,<span class="string">'e'</span>:<span class="string">'猕猴桃'</span>,<span class="string">'f'</span>:<span class="string">'西瓜'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#直接遍历字典 变量仅仅获取键（目录部分）</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> fruit:</span><br><span class="line">    print(i)</span><br><span class="line"><span class="comment">#专门遍历字典的值（数据）</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> fruit.values():</span><br><span class="line">    print(i)</span><br><span class="line"><span class="comment">#专门遍历字典的键（目录）</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> fruit.keys():</span><br><span class="line">    print(i)</span><br><span class="line"><span class="comment">#同时遍历字典的键和值</span></span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> fruit.items():</span><br><span class="line">    print(k,v)</span><br></pre></td></tr></table></figure><h2 id="else语句的应用"><a href="#else语句的应用" class="headerlink" title="else语句的应用"></a>else语句的应用</h2><ul><li>在while中应用else</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">10</span>:</span><br><span class="line">    print(<span class="string">'小明正在吃苹果'</span>)</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:<span class="comment">#else分支</span></span><br><span class="line">    print(<span class="string">'小明吃完苹果了！'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#else在循环的判断条件为False的情况下执行else语句</span></span><br></pre></td></tr></table></figure><ul><li>在for循环中使用else</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">food = [<span class="string">'鱼香肉丝'</span>,<span class="string">'青椒肉丝'</span>,<span class="string">'蚂蚁上树'</span>,<span class="string">'西红柿炒蛋'</span>,<span class="string">'乱棒打死猪八戒'</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> food:</span><br><span class="line">    print(i)</span><br><span class="line"><span class="keyword">else</span>:<span class="comment">#else分支</span></span><br><span class="line">    print(<span class="string">'所有饭菜都点完了！'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#else分支在for循环结束的时候执行else语句</span></span><br></pre></td></tr></table></figure><h2 id="其他的流程控制语句"><a href="#其他的流程控制语句" class="headerlink" title="其他的流程控制语句"></a>其他的流程控制语句</h2><ul><li>break语句</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#break语句主要应用于循环结构当中，作用终止循环。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#输出1-100的数字,遇到了44 就停止循环</span></span><br><span class="line">no = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> no &lt;= <span class="number">100</span>:</span><br><span class="line">    <span class="comment">#判断no是否是44</span></span><br><span class="line">    <span class="keyword">if</span> no == <span class="number">44</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(no)</span><br><span class="line">    no += <span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>continue语句</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">循环中使用<span class="keyword">continue</span>语句，作用是跳过本次循环，开始下一次循环</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出 1-100的数值,不要带有4的数值</span></span><br><span class="line">no = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> no &lt;= <span class="number">100</span>:</span><br><span class="line">    <span class="comment">#判断数值中是否有4</span></span><br><span class="line">    <span class="keyword">if</span> no % <span class="number">10</span> == <span class="number">4</span> <span class="keyword">or</span> <span class="number">40</span> &lt;= no &lt;=<span class="number">49</span>:<span class="comment">#都符合带有4的条件   【'4' in str(no)】</span></span><br><span class="line">        <span class="comment">#变量自增</span></span><br><span class="line">        no += <span class="number">1</span></span><br><span class="line">        <span class="keyword">continue</span><span class="comment">#执行了continue语句 立刻返回循环的开始位置</span></span><br><span class="line">    print(no)</span><br><span class="line">    no += <span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>pass语句</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pass 语句  占位符号  保证语法不出错</span></span><br><span class="line"><span class="keyword">if</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'*************'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python基础(3)</title>
      <link href="/2019/10/16/2019-10-13-python-ji-chu-3/"/>
      <url>/2019/10/16/2019-10-13-python-ji-chu-3/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h2 id="运算和运算符"><a href="#运算和运算符" class="headerlink" title="运算和运算符"></a>运算和运算符</h2><p>运算：一个或者一个以上的数据经过变化得到一个新值的过程。运算符：运算的符号就是运算符。</p><ul><li>算术运算</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># + 加法运算符</span><br><span class="line">result = 88 + 77</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"># - 减法运算</span><br><span class="line">result = 88 - 77</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"># * 乘法运算符</span><br><span class="line">result = 9 * 11</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"># / 除法运算符(浮点类型)</span><br><span class="line">result = 100 / 5</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"># ** 幂运算</span><br><span class="line">result = 5 ** 4#result = 5 * 5 * 5 * 5</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"># // 地板除运算符</span><br><span class="line">result = 47 // 10</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"># % 取余运算符</span><br><span class="line">result = 47 % 10</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">#python 没有自增和自减运算符号</span><br></pre></td></tr></table></figure><ul><li>比较运算</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#1. &gt;  大于运算符</span><br><span class="line">result = 77 &gt; 155</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">#2. &lt; 小于运算符</span><br><span class="line">result = 14 &lt; 19</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">#3. &gt;= 大于等于运算符</span><br><span class="line">result = 15 &gt;= 54</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">#4. &lt;= 小于等于运算</span><br><span class="line">result = 45 &lt;= 16</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">#5. == 等于运算符 (六大类型不相同就不等于)</span><br><span class="line">result = 55 == &apos;55&apos;</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">#6. !=  不等于运算符</span><br><span class="line">result = 55 != 55</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">#扩展：连续的比较运算</span><br><span class="line">result = 44 &lt; 55 &lt; 33 # -&gt; 44 &lt; 55 并且 55 &lt; 33</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><ul><li>赋值运算</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#1.普通赋值运算</span><br><span class="line">var = 250</span><br><span class="line">print(var)</span><br><span class="line"></span><br><span class="line">#2.加法赋值运算</span><br><span class="line">var = 50</span><br><span class="line">var += 10#var = var + 10</span><br><span class="line">print(var)</span><br><span class="line"></span><br><span class="line">#3.减法赋值运算</span><br><span class="line">var = 100</span><br><span class="line">var -= 88#var = var - 88</span><br><span class="line">print(var)</span><br><span class="line"></span><br><span class="line">#4.乘法赋值运算</span><br><span class="line">var = 25</span><br><span class="line">var *= 4#var = var * 4</span><br><span class="line">print(var)</span><br><span class="line"></span><br><span class="line">#5.除法赋值运算</span><br><span class="line">var = 99</span><br><span class="line">var /= 11#var = var / 11</span><br><span class="line">print(var)</span><br><span class="line"></span><br><span class="line">#6.取余赋值运算</span><br><span class="line">var = 26</span><br><span class="line">var %= 5#var = var % 5</span><br><span class="line">print(var)</span><br><span class="line"></span><br><span class="line">#7.取商赋值运算</span><br><span class="line">var = 33</span><br><span class="line">var //= 6#var = var // 6</span><br><span class="line">print(var)</span><br><span class="line"></span><br><span class="line">#8.幂赋值运算</span><br><span class="line">var = 5</span><br><span class="line">var **= 3#var = var ** 3</span><br><span class="line">print(var)</span><br></pre></td></tr></table></figure><ul><li>逻辑运算（布尔值之间的运算）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#1.逻辑与运算（二目运算）-》有假则假</span><br><span class="line">var1 = False</span><br><span class="line">var2 = False</span><br><span class="line">result = var1 and var2</span><br><span class="line">print(result)</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">True and True = True</span><br><span class="line">False and True = False</span><br><span class="line">True and False = False</span><br><span class="line">False and False = False</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line"></span><br><span class="line">#2.逻辑或运算 -》 有真则真</span><br><span class="line">var1 = False</span><br><span class="line">var2 = False</span><br><span class="line">result = var1 or var2</span><br><span class="line">print(result)</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">True or True = True</span><br><span class="line">False or True = True</span><br><span class="line">True or False = True</span><br><span class="line">False or False = False</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line"></span><br><span class="line">#3.逻辑非运算（单目运算）-》真变假假变真</span><br><span class="line">var = False</span><br><span class="line">result = not var</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">python不支持逻辑异或运算</span><br></pre></td></tr></table></figure><ul><li>位运算</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#1，按位与运算</span><br><span class="line">var1 = 25#11001</span><br><span class="line">var2 = 12#01100</span><br><span class="line">result = var1 &amp; var2</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">#2.按位或运算</span><br><span class="line">var1 = 25</span><br><span class="line">var2 = 12</span><br><span class="line">result = var1 | var2</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">#3.按位非运算</span><br><span class="line">var = 8 #1000</span><br><span class="line">result = ~var</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">#4.按位异或运算</span><br><span class="line">var1 = 25</span><br><span class="line">var2 = 12</span><br><span class="line">result = var1 ^ var2</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">#5.左移运算 相当于乘以2的运算</span><br><span class="line">var = 48</span><br><span class="line">result = var &lt;&lt; 2</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">#6.右移运算  相当于地板除2</span><br><span class="line">var = 36</span><br><span class="line">result = var &gt;&gt; 3</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><ul><li>身份运算(检测两个数据在内存中是否是同一个值）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#id标识  系统为数据分配的编号</span><br><span class="line">#is 检测是同一个</span><br><span class="line">var1 = &apos;daxigua&apos;</span><br><span class="line">var2 = &apos;daxigua&apos;</span><br><span class="line">result = var1 is var2</span><br><span class="line">print(result)</span><br><span class="line">#查看id标识</span><br><span class="line">print(id(var1),id(var2))</span><br><span class="line">#注意：3.7以上版本 整数浮点数和字符串只要值一样，id标识就一样</span><br><span class="line"></span><br><span class="line">#is not 检测是否不是同一个</span><br><span class="line">var1 = 99</span><br><span class="line">var2 = 98</span><br><span class="line">result =  var1 is not var2</span><br><span class="line">print(result)</span><br><span class="line">#查看id标识</span><br><span class="line">print(id(var1),id(var2))</span><br><span class="line"></span><br><span class="line">#其他数据类型  列表，元组，字典，集合 数据相同，id标识也不同</span><br><span class="line">var1 = [1,2,3]</span><br><span class="line">var2 = [1,2,3]</span><br><span class="line">result = var1 is var2</span><br><span class="line">print(result)</span><br><span class="line">#查看id标识</span><br><span class="line">print(id(var1),id(var2))</span><br><span class="line"></span><br><span class="line">#连续赋值的列表，元组，字典集合id标识相同</span><br><span class="line">var1 = var2 = [2,3]</span><br><span class="line">result = var1 is var2</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><ul><li>成员检测运算</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#成员检测运算</span><br><span class="line">#in 检测是否存在于容器中</span><br><span class="line">#列表</span><br><span class="line">#IT = [&apos;PHP&apos;,&apos;JAVA&apos;,&apos;PYTHON&apos;,&apos;C++&apos;,&apos;C#&apos;,&apos;C&apos;]</span><br><span class="line">#元组</span><br><span class="line">#IT = (&apos;PHP&apos;,&apos;JAVA&apos;,&apos;PYTHON&apos;,&apos;C++&apos;,&apos;C#&apos;,&apos;C&apos;)</span><br><span class="line">#集合</span><br><span class="line">#IT = &#123;&apos;PHP&apos;,&apos;JAVA&apos;,&apos;PYTHON&apos;,&apos;C++&apos;,&apos;C#&apos;,&apos;C&apos;&#125;</span><br><span class="line">#字符串</span><br><span class="line">#IT = &apos;PHPJAVAPYTHONC++C#C&apos;</span><br><span class="line">#字典（字典的成员运算仅仅进行键的检测）</span><br><span class="line">IT = &#123;&apos;a&apos;:&apos;PHP&apos;,&apos;b&apos;:&apos;JAVA&apos;,&apos;c&apos;:&apos;PYTHON&apos;,&apos;d&apos;:&apos;C++&apos;,&apos;e&apos;:&apos;C#&apos;,&apos;f&apos;:&apos;C&apos;&#125;</span><br><span class="line">result = &apos;a&apos; in IT</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">#not in 检测是否不再容器当中</span><br><span class="line">IT = &#123;&apos;PHP&apos;,&apos;JAVA&apos;,&apos;PYTHON&apos;,&apos;C++&apos;,&apos;C#&apos;,&apos;C&apos;&#125;</span><br><span class="line">result = &apos;lua&apos; not in IT</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python基础(2)</title>
      <link href="/2019/10/16/2019-10-12-python-ji-chu-2/"/>
      <url>/2019/10/16/2019-10-12-python-ji-chu-2/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><ul><li>自动类型转换</li></ul><p>程序自发的行为，在需要的情况下进行的操作，无法干预,自动类型转换多发生运算或者判断过程当中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#声明一个整数</span><br><span class="line">intvar = 99</span><br><span class="line">#声明一个浮点数</span><br><span class="line">floatvar = 5.56</span><br><span class="line"></span><br><span class="line">#加法运算(发生了自动类型转换！ 自动的操作)</span><br><span class="line">result = intvar + floatvar #intvar 转换成了浮点数 99 -&gt; 99.0</span><br><span class="line">print(result)</span><br><span class="line">print(type(result))</span><br><span class="line"></span><br><span class="line">#判断情况</span><br><span class="line">if -5:#整型转化为布尔值</span><br><span class="line">  print(&apos;python大法好&apos;)</span><br></pre></td></tr></table></figure><ul><li>强制数据类型转换</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1.int()    强制转换为整型  Int</span><br><span class="line"></span><br><span class="line">#var = 8.9</span><br><span class="line">#var = False</span><br><span class="line">#var = &apos;99&apos;</span><br><span class="line">#打印原有数据类型和值</span><br><span class="line">print(var,type(var))</span><br><span class="line">#强制转换操作</span><br><span class="line">newvar = int(var)</span><br><span class="line">#打印转换之后的数据类型和值</span><br><span class="line">print(newvar,type(newvar))</span><br><span class="line"></span><br><span class="line">1.整型不需要转换</span><br><span class="line">2.浮点型转换为整型，去掉小数部分</span><br><span class="line">3.布尔值转换为整型,True转换为1, False转换为0</span><br><span class="line">4.复数无法转换为整型</span><br><span class="line">5.字符串只有纯整数的字符串可以转换，其余都不行</span><br><span class="line">6.列表不能转换</span><br><span class="line">7.元组不能转换</span><br><span class="line">8.集合不能转换</span><br><span class="line">9.字典不能转换</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">2.float()  强制转换为浮点型 Float</span><br><span class="line"></span><br><span class="line">#var = 88</span><br><span class="line">#var = True</span><br><span class="line">#var = &apos;9.9&apos;</span><br><span class="line">#打印原有类型和值</span><br><span class="line">print(var,type(var))</span><br><span class="line">#强制转换过程</span><br><span class="line">newvar = float(var)</span><br><span class="line">#打印转换之后的类型和值</span><br><span class="line">print(newvar,type(newvar))</span><br><span class="line"></span><br><span class="line">1.整型转换为浮点型，添加.0即可</span><br><span class="line">2.浮点型无需转换</span><br><span class="line">3.布尔值转换为浮点型，True转换1.0,False转换为0.0</span><br><span class="line">4.复数无法转换为浮点型</span><br><span class="line">5.字符串只要是数值类型的字符串就可以转换</span><br><span class="line">6.列表不能转换</span><br><span class="line">7.元组不能转换</span><br><span class="line">8.集合不能转换</span><br><span class="line">9.字典不能转换</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">3.bool()   强制转换为布尔类型 Bool</span><br><span class="line"></span><br><span class="line">#var = 0</span><br><span class="line">#var = 0.0</span><br><span class="line">#var = False</span><br><span class="line">#var = 0 + 0j</span><br><span class="line">#var = &apos;&apos;</span><br><span class="line">#var = []</span><br><span class="line">#var = ()</span><br><span class="line">#var = set()</span><br><span class="line">#var = &#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;</span><br><span class="line">print(var,type(var))</span><br><span class="line">newvar = bool(var)</span><br><span class="line">print(newvar,type(newvar))</span><br><span class="line"></span><br><span class="line">(必须记忆转换为False情况)</span><br><span class="line">1.整型0</span><br><span class="line">2.浮点型0.0</span><br><span class="line">3.布尔值的False</span><br><span class="line">4.复数0j</span><br><span class="line">5.字符串的空字符串&apos;&apos;</span><br><span class="line">6.空列表[]</span><br><span class="line">7.空元组()</span><br><span class="line">8.空集合set()</span><br><span class="line">9.空字典&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">4.complex()    强制转换为复数   Complex</span><br><span class="line"></span><br><span class="line">#var = 88</span><br><span class="line">#var = 8.9</span><br><span class="line">#var = True</span><br><span class="line">#var = &apos;9.9&apos;</span><br><span class="line">print(var,type(var))</span><br><span class="line">newvar = complex(var)</span><br><span class="line">print(newvar,type(newvar))</span><br><span class="line"></span><br><span class="line">1.整型转换为复数后面+0j</span><br><span class="line">2.浮点型转换为复数后面+0j</span><br><span class="line">3.布尔值 True -&gt; 1+0j , False -&gt;0j</span><br><span class="line">4.复数无需转换</span><br><span class="line">5.字符串只有纯数值的字符串可以转换，后面+0j</span><br><span class="line">6.列表不能转换</span><br><span class="line">7.元组不能转换</span><br><span class="line">8.集合不能转换</span><br><span class="line">9.字典不能转换</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">5.str()    强制转换为字符串  Str</span><br><span class="line"></span><br><span class="line">#var = 19</span><br><span class="line">#var = 7.8</span><br><span class="line">#var = False</span><br><span class="line">#var = 9 + 2j</span><br><span class="line">#var = &apos;小飞机&apos;</span><br><span class="line">#var = [1,2,3,5,67]</span><br><span class="line">#var = (1,2,3,5,7) #-&gt; &apos;(1,2,3,5,7)&apos;</span><br><span class="line">#var = &#123;1,2,3,5,6&#125;</span><br><span class="line">#var = &#123;&apos;a&apos;:1,&apos;b&apos;:2&#125;</span><br><span class="line">print(var,type(var))</span><br><span class="line">newvar = str(var)</span><br><span class="line">print(newvar,type(newvar))</span><br><span class="line"></span><br><span class="line">1.所有数据转换为字符串都是变成字符格式的内容而已。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">6.list()   强制转换为列表   List</span><br><span class="line"></span><br><span class="line">#var = &apos;唧唧复唧唧，木兰当户织&apos;</span><br><span class="line">#var = (1,2,3,4,5,6,7,8,9)</span><br><span class="line">#var = &#123;1,2,3,5,6,8,9&#125;</span><br><span class="line">var = &#123;&apos;a&apos;:1,&apos;b&apos;:2,&apos;c&apos;:3&#125;</span><br><span class="line">print(var,type(var))</span><br><span class="line">newvar = list(var)</span><br><span class="line">print(newvar,type(newvar))</span><br><span class="line"></span><br><span class="line">1.整型不可以转换</span><br><span class="line">2.浮点型不可以转换</span><br><span class="line">3.布尔值不可转换</span><br><span class="line">4.复数不可以转换</span><br><span class="line">5.字符串转换为列表，每个字符变成列表中的每个值</span><br><span class="line">6.列表类型不需要转换</span><br><span class="line">7.元组转换为列表，类型改变，内容不变</span><br><span class="line">8.集合转换为列表，类型改变，内容不变，顺序随机</span><br><span class="line">9.字典转换为列表仅保留键，舍弃值</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">7.tuple()  强制转换为元组  Tuple</span><br><span class="line"></span><br><span class="line">#var = &apos;唧唧复唧唧，木兰当户织&apos;</span><br><span class="line">#var = [2,3,5,6,7]</span><br><span class="line">#var = &#123;1,2,3,5,6,8,9&#125;</span><br><span class="line">#var = &#123;&apos;a&apos;:1,&apos;b&apos;:2,&apos;c&apos;:3&#125;</span><br><span class="line">print(var,type(var))</span><br><span class="line">newvar = tuple(var)</span><br><span class="line">print(newvar,type(newvar))</span><br><span class="line"></span><br><span class="line">1.整型不可以转换</span><br><span class="line">2.浮点型不可以转换</span><br><span class="line">3.布尔值不可转换</span><br><span class="line">4.复数不可以转换</span><br><span class="line">5.字符串转换为元组，每个字符变成元组中的每个值</span><br><span class="line">6.列表转换为元组，内容和顺序不变，类型改变</span><br><span class="line">7.元组无需转换</span><br><span class="line">8.集合转换为元组，类型改变，内容不变，顺序随机</span><br><span class="line">9.字典转换为元组仅保留键，舍弃值</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">8.set()    强制转换为集合   Set</span><br><span class="line"></span><br><span class="line">#var = &apos;唧唧复唧唧，木兰当户织&apos;</span><br><span class="line">#var = [2,3,5,6,7,2,3,5,6,7]</span><br><span class="line">#var = (1,2,3,4,5,6,7,8,9,8,8,8,8)</span><br><span class="line">var = &#123;&apos;a&apos;:1,&apos;b&apos;:2,&apos;c&apos;:3&#125;</span><br><span class="line">print(var,type(var))</span><br><span class="line">newvar = set(var)</span><br><span class="line">print(newvar,type(newvar))</span><br><span class="line"></span><br><span class="line">1.整型不可以转换</span><br><span class="line">2.浮点型不可以转换</span><br><span class="line">3.布尔值不可转换</span><br><span class="line">4.复数不可以转换</span><br><span class="line">5.字符串转换为集合，去掉重复的数据，每个字符变成集合的每个值，顺序随机</span><br><span class="line">6.列表转换为集合，去掉重复的数据，剩下的值变成集合的值，顺序随机</span><br><span class="line">7.元组转换为集合，去掉重复的数据，剩下的值变成集合的值，顺序随机</span><br><span class="line">8.集合无需转换</span><br><span class="line">9.字典转换为集合，将字典的键变成集合的值，字典的值舍弃</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> 9.dict()   强制转换为字典   Dict</span><br><span class="line"></span><br><span class="line">#var = 9.9</span><br><span class="line">#var = &apos;唧唧复唧唧，木兰当户织&apos;</span><br><span class="line">var = [[&apos;A&apos;,1],[&apos;B&apos;,2],[&apos;C&apos;,3],[&apos;D&apos;,4]]#二级列表</span><br><span class="line">var = ((1,1.1),(2,2.2),(3,3.3))#二级元组</span><br><span class="line">var = &#123;(1,2),(3,4)&#125;#二级容器</span><br><span class="line">print(var,type(var))</span><br><span class="line">newvar = dict(var)</span><br><span class="line">print(newvar,type(newvar))</span><br><span class="line"></span><br><span class="line">1.整型不可以转换</span><br><span class="line">2.浮点型不可以转换</span><br><span class="line">3.布尔值不可转换</span><br><span class="line">4.复数不可以转换</span><br><span class="line">5.字符串不可以转换</span><br><span class="line">6.列表必须是二级列表，并且第二级只有2个数据的列表可以转换</span><br><span class="line">7.元组必须是二级元组，并且第二级只有2个数据的元组可以转换</span><br><span class="line">8.集合必须是二级容器，并且第二级只有2个数据的集合可以转换</span><br><span class="line">9.字典无需转换</span><br></pre></td></tr></table></figure><p>容器类数据：1.字符串、2.列表、3.元组、4.集合、5.字典。<br>只有容器类数据才能转换为容器类数据,字符串除外。</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python基础(1)</title>
      <link href="/2019/10/16/2019-10-12-python-ji-chu-1/"/>
      <url>/2019/10/16/2019-10-12-python-ji-chu-1/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li>变量命名规范</li></ul><p>1.变量名不可以使用中文，推荐使用英文，不行就用拼音<br>2.变量可以使用数字但是不能开头<br>3.变量名称不能使用特殊符号，可以使用下划线 _<br>4.变量名严格区分大小写！<br>5.变量名要有意义（规范）<br>6.变量名不能和保留关键字冲突</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#声明一个变量   变量名 = 数据</span><br><span class="line"></span><br><span class="line">hw = &apos;hello world&apos;</span><br><span class="line">#打印变量中的内容</span><br><span class="line">print(hw)</span><br><span class="line"></span><br><span class="line">#查看系统关键字</span><br><span class="line">import keyword</span><br><span class="line">print(keyword.kwlist)</span><br></pre></td></tr></table></figure><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>特征：注释只是用于说明的文字不会影响内容本身。<br>作用：1.用于添加说明文字，方便阅读代码。2.用于调试程序，排查错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">单行注释： #</span><br><span class="line">多行注释： &apos;&apos;&apos;内容&apos;&apos;&apos; 或者 &quot;&quot;&quot;内容&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>python有六大类标准数据类型：Number类型-数字类型、String类型-字符串类型、List类型-列表类型、Tuple类型-元组类型、Set类型-集合类型、Dict类型-字典类型。</p><ul><li>Number类型</li></ul><p>具有Int类型-整型、Float类型-浮点数、Bool类型-布尔型、Complex类型-复数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#Int类型   整型也就是整数  关键字 int 或者integer</span><br><span class="line"></span><br><span class="line">方式1：十进制声明   0~9</span><br><span class="line">intvar = 250</span><br><span class="line">#打印变量的值</span><br><span class="line">print(intvar)</span><br><span class="line">#打印变量的类型</span><br><span class="line">print(type(intvar))</span><br><span class="line"></span><br><span class="line">方式2：二进制声明  0~1</span><br><span class="line">intvar = 0b101011</span><br><span class="line">print(intvar)</span><br><span class="line">print(type(intvar))</span><br><span class="line"></span><br><span class="line">方式3：八进制声明  0~7</span><br><span class="line">intvar = 0o147</span><br><span class="line">print(intvar)</span><br><span class="line">print(type(intvar))</span><br><span class="line"></span><br><span class="line">方式4：十六进制声明 0~9A-F</span><br><span class="line">intvar = 0x12af</span><br><span class="line">print(intvar)</span><br><span class="line">print(type(intvar))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#Float类型  浮点型 就是小数  float或者real 或者double</span><br><span class="line"></span><br><span class="line">方法1：用小数声明</span><br><span class="line">floatvar = 3.141592653</span><br><span class="line">#打印变量的值</span><br><span class="line">print(floatvar)</span><br><span class="line">#打印变量的类型</span><br><span class="line">print(type(floatvar))</span><br><span class="line"></span><br><span class="line">方法2:科学计数声明</span><br><span class="line">floatvar = 25041e-2 # 25041 乘以10的-2次方</span><br><span class="line">print(floatvar)</span><br><span class="line">print(type(floatvar))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#Bool类型 布尔类型   只有两个值：True 和 False</span><br><span class="line">boolvar = True</span><br><span class="line">#打印变量的值</span><br><span class="line">print(boolvar)</span><br><span class="line">#打印变量的类型</span><br><span class="line">print(type(boolvar))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#Complex类型  复数类型  complex</span><br><span class="line">复数表示所有的数字，由实数和虚数两部分组成。实数：真实存在的数字就是实数；虚数：不存在的数字就是虚数。（假设一个数字的平方是-1，这个数就是虚数的单位j）。</span><br><span class="line"></span><br><span class="line">方法1：使用表达式</span><br><span class="line">comvar = 55 + 2j</span><br><span class="line">#打印变量的值</span><br><span class="line">print(comvar)</span><br><span class="line">#打印变量的类型</span><br><span class="line">print(type(comvar))</span><br><span class="line"></span><br><span class="line">方法2：使用特定功能</span><br><span class="line">comvar = complex(23,99)</span><br><span class="line">print(comvar)</span><br><span class="line">print(type(comvar))</span><br></pre></td></tr></table></figure><ul><li>String类型</li></ul><p>字符串的声明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#关键字 str 或者string</span><br><span class="line">方法1：单引号声明</span><br><span class="line">strvar = &apos;学编程就来兄弟连！&apos;</span><br><span class="line">#打印变量的值</span><br><span class="line">print(strvar)</span><br><span class="line">#打印变量的类型</span><br><span class="line">print(type(strvar))</span><br><span class="line"></span><br><span class="line">方法2：双引号声明</span><br><span class="line">strvar = &quot;肉体键盘摩擦，啪啪啪都是火花&quot;</span><br><span class="line">print(strvar)</span><br><span class="line">print(type(strvar))</span><br><span class="line"></span><br><span class="line">方法3：三引号声明字符串</span><br><span class="line">#strvar = &apos;&apos;&apos;兄弟连云课堂有你需要的！&apos;&apos;&apos;</span><br><span class="line">strvar = &quot;&quot;&quot;兄弟连云课堂有你需要的！&quot;&quot;&quot;</span><br><span class="line">print(strvar)</span><br><span class="line">print(type(strvar))</span><br><span class="line"></span><br><span class="line">#字符串声明方式的选择：</span><br><span class="line">#1.如果字符串中有双引号，这个时候推荐使用单引号声明，例如：HTML代码</span><br><span class="line">#2.如果字符串中有单引号，这个时候推荐使用双引号声明. 例如：PHP代码,python代码</span><br><span class="line">#3.如果字符串中存在单引号和双引号，这个时候推荐使用三引号. 例如：大文章</span><br></pre></td></tr></table></figure><p>转义字符：改变字符的意义和功能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#单引号中使用单引号</span><br><span class="line">xdl = &apos;让学习成为一种\&apos;习惯\&apos;！&apos;</span><br><span class="line">print(xdl)</span><br><span class="line"></span><br><span class="line">#了解转义字符</span><br><span class="line">#\n 换行</span><br><span class="line">shi = &apos;窗前明月光,\n疑是地上霜&apos;</span><br><span class="line">print(shi)</span><br><span class="line"></span><br><span class="line">#\r 回车（不是回车键） 回到当前行的开头</span><br><span class="line">shi = &apos;举头望明月，\r低头思故乡&apos;</span><br><span class="line">print(shi)</span><br><span class="line"></span><br><span class="line">#\’ 或者 \&apos;</span><br><span class="line">#\\ 表示一个单独的\而已</span><br><span class="line">shi = &apos;鹅鹅鹅，\\nothing曲项向天歌&apos;</span><br><span class="line">print(shi)</span><br><span class="line"></span><br><span class="line">#\t  表示缩进符号（就是tab键对应的字符）</span><br><span class="line">shi = &apos;白毛\t浮绿水，红掌拨清波&apos;</span><br><span class="line">print(shi)</span><br><span class="line"></span><br><span class="line">#\  续航符号</span><br><span class="line">ads = &apos;兄弟连是一家成了了好多好多年的IT培训机构，这里&apos; \</span><br><span class="line">    &apos;的老师很好看，这里的学生不捣乱&apos;</span><br><span class="line">print(ads)</span><br><span class="line"></span><br><span class="line">#元字符 ：以字符串定义的格式输出，不转义任何转义字符</span><br><span class="line">#strvar = R&apos;男人\t来自\&apos;火星\&apos;，\n女人来自\&quot;金星\&quot;&apos;</span><br><span class="line">strvar = r&apos;男人\t来自\&apos;火星\&apos;，\n女人来自\&quot;金星\&quot;&apos;</span><br><span class="line">print(strvar)</span><br></pre></td></tr></table></figure><ul><li>列表类型  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">List     一组数据的有序组合</span><br><span class="line">#            0      1       2      3     4</span><br><span class="line">listvar = [&apos;貂蝉&apos;,&apos;西施&apos;,&apos;杨玉环&apos;,&apos;王昭君&apos;,4]</span><br><span class="line">#           -5      -4     -3      -2   -1</span><br><span class="line">#打印变量的值</span><br><span class="line">print(listvar)</span><br><span class="line">#打印变量的类型</span><br><span class="line">print(type(listvar))</span><br><span class="line"></span><br><span class="line">#访问列表中某个数据</span><br><span class="line">print(listvar[2])</span><br><span class="line">print(listvar[-3])</span><br><span class="line"></span><br><span class="line">#修改列表中的某个数据</span><br><span class="line">listvar[2] = &apos;杨贵妃&apos;</span><br><span class="line">print(listvar)</span><br></pre></td></tr></table></figure><ul><li>元组类型  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Tuple 一组数据的有序组合 : 元组不可以修改</span><br><span class="line">#               0       1        2        3      4    5</span><br><span class="line">tuplevar = (&apos;西游记&apos;,&apos;红楼梦&apos;,&apos;三国演义&apos;,&apos;水浒传&apos;,3.15,True)</span><br><span class="line">#              -6       -5       -4       -3     -2   -1  </span><br><span class="line">print(tuplevar)</span><br><span class="line">print(type(tuplevar))</span><br><span class="line"></span><br><span class="line">#访问元组中的某个数据</span><br><span class="line">print(tuplevar[1])</span><br><span class="line">print(tuplevar[-5])</span><br><span class="line"></span><br><span class="line">#修改：修改会报错！</span><br><span class="line">#tuplevar[1] = &apos;青楼梦&apos;</span><br></pre></td></tr></table></figure><ul><li>集合类型   </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Set  一组[特定数据]的无序组合</span><br><span class="line">#集合中的数据不会重复,集合没有顺序！</span><br><span class="line"></span><br><span class="line">setvar = &#123;&apos;夏侯惇&apos;,&apos;大乔&apos;,&apos;曹操&apos;,&apos;大乔&apos;,&apos;关银屏&apos;,&apos;大乔&apos;,&apos;小乔&apos;&#125;</span><br><span class="line">print(setvar)</span><br><span class="line">print(type(setvar))</span><br></pre></td></tr></table></figure><ul><li>字典类型  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Dict   一组由键和值组成的数据</span><br><span class="line"></span><br><span class="line">dictvar = &#123;&apos;行者&apos;:&apos;武松&apos;,&apos;小旋风&apos;:&apos;柴进&apos;,&apos;智多星&apos;:&apos;吴用&apos;&#125;</span><br><span class="line">print(dictvar)</span><br><span class="line">print(type(dictvar))</span><br><span class="line"></span><br><span class="line">#访问字典中的某个数据</span><br><span class="line">print(dictvar[&apos;智多星&apos;])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongodb(2)</title>
      <link href="/2019/10/16/2019-10-11-mongodb-2/"/>
      <url>/2019/10/16/2019-10-11-mongodb-2/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="mongodb"><a href="#mongodb" class="headerlink" title="mongodb"></a>mongodb</h1><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><ul><li>Limit()方法</li></ul><p>接受一个数字参数，该参数指定从MongoDB中读取的记录条数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.col.find(&#123;&#125;,&#123;&quot;title&quot;:1,_id:0&#125;).limit(2)</span><br><span class="line">&#123; &quot;title&quot; : &quot;PHP 教程&quot; &#125;</span><br><span class="line">&#123; &quot;title&quot; : &quot;Java 教程&quot; &#125;</span><br></pre></td></tr></table></figure><ul><li>skip()方法</li></ul><p>跳过指定数量的数据，skip方法同样接受一个数字参数作为跳过的记录条数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.col.find(&#123;&#125;,&#123;&quot;title&quot;:1,_id:0&#125;).limit(1).skip(1)</span><br><span class="line">&#123; &quot;title&quot; : &quot;Java 教程&quot; &#125;</span><br></pre></td></tr></table></figure><ul><li>sort()方法</li></ul><p>使用sort()方法对数据进行排序，sort()方法可以通过参数指定排序的字段，并使用1和-1来指定排序的方式，其中1为升序排列，而-1是用于降序排列。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">db.COLLECTION_NAME.find().sort(&#123;KEY:1&#125;)</span><br><span class="line"></span><br><span class="line">db.col.find(&#123;&#125;,&#123;&quot;title&quot;:1,_id:0&#125;).sort(&#123;&quot;likes&quot;:-1&#125;)</span><br><span class="line">&#123; &quot;title&quot; : &quot;PHP 教程&quot; &#125;</span><br><span class="line">&#123; &quot;title&quot; : &quot;Java 教程&quot; &#125;</span><br><span class="line">&#123; &quot;title&quot; : &quot;MongoDB 教程&quot; &#125;</span><br></pre></td></tr></table></figure><ul><li>createIndex()方法</li></ul><p>使用createIndex()方法来创建索引。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">db.collection.createIndex(keys, options)</span><br><span class="line">语法中Key值为你要创建的索引字段，1为指定按升序创建索引，如果你想按降序来创建索引指定为-1即可。</span><br><span class="line">db.col.createIndex(&#123;&quot;title&quot;:1&#125;)</span><br><span class="line"></span><br><span class="line">createIndex()方法中你也可以设置使用多个字段创建索引（关系型数据库中称作复合索引）</span><br><span class="line">db.col.createIndex(&#123;&quot;title&quot;:1,&quot;description&quot;:-1&#125;)</span><br></pre></td></tr></table></figure><ul><li>aggregate()方法</li></ul><p>使用aggregate()方法来聚合，主要用于处理数据(诸如统计平均值,求和等)，并返回计算后的数据结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$sum  计算总和。 db.mycol.aggregate([&#123;$group : &#123;_id : &quot;$by_user&quot;, num_tutorial : &#123;$sum : &quot;$likes&quot;&#125;&#125;&#125;])</span><br><span class="line">$avg  计算平均值 db.mycol.aggregate([&#123;$group : &#123;_id : &quot;$by_user&quot;, num_tutorial : &#123;$avg : &quot;$likes&quot;&#125;&#125;&#125;])</span><br><span class="line">$min  获取集合中所有文档对应值得最小值。 db.mycol.aggregate([&#123;$group : &#123;_id : &quot;$by_user&quot;, num_tutorial : &#123;$min : &quot;$likes&quot;&#125;&#125;&#125;])</span><br><span class="line">$max  获取集合中所有文档对应值得最大值。 db.mycol.aggregate([&#123;$group : &#123;_id : &quot;$by_user&quot;, num_tutorial : &#123;$max : &quot;$likes&quot;&#125;&#125;&#125;])</span><br><span class="line">$first  根据资源文档的排序获取第一个文档数据。 db.mycol.aggregate([&#123;$group : &#123;_id : &quot;$by_user&quot;, first_url : &#123;$first : &quot;$url&quot;&#125;&#125;&#125;])</span><br><span class="line">$last 根据资源文档的排序获取最后一个文档数据 db.mycol.aggregate([&#123;$group : &#123;_id : &quot;$by_user&quot;, last_url : &#123;$last : &quot;$url&quot;&#125;&#125;&#125;])</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> db.mycol.aggregate([&#123;$group : &#123;_id : &quot;$by_user&quot;, num_tutorial : &#123;$sum : 1&#125;&#125;&#125;])</span><br><span class="line"> &#123;</span><br><span class="line">   &quot;result&quot; : [</span><br><span class="line">     &#123;</span><br><span class="line">        &quot;_id&quot; : &quot;runoob.com&quot;,</span><br><span class="line">        &quot;num_tutorial&quot; : 2</span><br><span class="line">     &#125;,</span><br><span class="line">     &#123;</span><br><span class="line">        &quot;_id&quot; : &quot;Neo4j&quot;,</span><br><span class="line">        &quot;num_tutorial&quot; : 1</span><br><span class="line">     &#125;</span><br><span class="line">   ],</span><br><span class="line">   &quot;ok&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$project：修改输入文档的结构。可以用来重命名、增加或删除域，也可以用于创建计算结果以及嵌套文档。</span><br><span class="line">$match：用于过滤数据，只输出符合条件的文档。$match使用MongoDB的标准查询操作。</span><br><span class="line">$limit：用来限制MongoDB聚合管道返回的文档数。</span><br><span class="line">$skip：在聚合管道中跳过指定数量的文档，并返回余下的文档。</span><br><span class="line">$unwind：将文档中的某一个数组类型字段拆分成多条，每条包含数组中的一个值。</span><br><span class="line">$group：将集合中的文档分组，可用于统计结果。</span><br><span class="line">$sort：将输入文档排序后输出。</span><br><span class="line">$geoNear：输出接近某一地理位置的有序文档。</span><br><span class="line"></span><br><span class="line">$match实例</span><br><span class="line">db.articles.aggregate( [</span><br><span class="line">  &#123; $match : &#123; score : &#123; $gt : 70, $lte : 90 &#125; &#125; &#125;,</span><br><span class="line">  &#123; $group: &#123; _id: null, count: &#123; $sum: 1 &#125; &#125; &#125;</span><br><span class="line">] );</span><br><span class="line">$match用于获取分数大于70小于或等于90记录，然后将符合条件的记录送到下一阶段$group管道操作符进行处理。</span><br><span class="line"></span><br><span class="line">$skip实例</span><br><span class="line">db.article.aggregate(</span><br><span class="line">  &#123; $skip : 5 &#125;</span><br><span class="line">);</span><br><span class="line">经过$skip管道操作符处理后，前五个文档被&quot;过滤&quot;掉。</span><br></pre></td></tr></table></figure><h2 id="备份与恢复"><a href="#备份与恢复" class="headerlink" title="备份与恢复"></a>备份与恢复</h2><ul><li>备份</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mongodump -h dbhost -d dbname -o dbdirectory</span><br><span class="line"></span><br><span class="line">-h：MongDB所在服务器地址，例如：127.0.0.1，当然也可以指定端口号：127.0.0.1:27017</span><br><span class="line">-d：需要备份的数据库实例，例如：test</span><br><span class="line">-o：备份的数据存放位置，例如：c:\data\dump，当然该目录需要提前建立，在备份完成后，系统自动在dump目录下建立一个test目录，这个目录里面存放该数据库实例的备份数据。</span><br><span class="line"></span><br><span class="line">db.getMongo() 查看端口号</span><br></pre></td></tr></table></figure><ul><li>恢复</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mongorestore -h &lt;hostname&gt;&lt;:port&gt; -d dbname &lt;path&gt;</span><br><span class="line"></span><br><span class="line">--host &lt;:port&gt;, -h &lt;:port&gt;：MongoDB所在服务器地址，默认为： localhost:27017</span><br><span class="line">--db , -d ：需要恢复的数据库实例，例如：test，当然这个名称也可以和备份时候的不一样，比如test2</span><br><span class="line">--drop：恢复的时候，先删除当前数据，然后恢复备份的数据。就是说，恢复后，备份后添加修改的数据都会被删除，慎用哦！</span><br><span class="line">&lt;path&gt;：mongorestore 最后的一个参数，设置备份数据所在位置，例如：c:\data\dump\test。</span><br><span class="line">--dir：指定备份的目录</span><br><span class="line">你不能同时指定&lt;path&gt;和--dir选项。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mongodb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongodb nosql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongodb(1)</title>
      <link href="/2019/10/16/2019-10-11-mongodb-1/"/>
      <url>/2019/10/16/2019-10-11-mongodb-1/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="mongodb"><a href="#mongodb" class="headerlink" title="mongodb"></a>mongodb</h1><h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><ul><li>查看所有数据库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show dbs</span><br></pre></td></tr></table></figure><ul><li>创建数据库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use 库名</span><br><span class="line">含义为如果数据库不存在，则创建数据库，否则切换到指定数据库。</span><br></pre></td></tr></table></figure><ul><li>显示当前库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db</span><br></pre></td></tr></table></figure><ul><li>删除当前库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.dropDatabase()</span><br></pre></td></tr></table></figure><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><ul><li>创建集合</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(name, options)</span><br><span class="line"></span><br><span class="line">name: 要创建的集合名称；options: 可选参数, 指定有关内存大小及索引的选项。</span><br><span class="line"></span><br><span class="line">capped      布尔 （可选）如果为true，则创建有着固定大小的集合，当达到最大值时，它会自动覆盖最早的文档。此时，必须指定size参数。</span><br><span class="line">autoIndexId 布尔 （可选）如为true，自动在_id字段创建索引。默认为false。</span><br><span class="line">size      数值 （可选）为固定集合指定一个最大值，以千字节计（KB）。如果capped为true，也需要指定该字段。</span><br><span class="line">max      数值 （可选）指定固定集合中包含文档的最大数量。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">创建固定集合mycol，整个集合空间大小6142800KB, 文档最大个数为10000个。</span><br><span class="line">db.createCollection(&quot;mycol&quot;, &#123;capped:true, autoIndexId:true, size:6142800, max:10000&#125;)</span><br></pre></td></tr></table></figure><ul><li>删除集合</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.集合名.drop()</span><br><span class="line">如果成功删除选定集合，则drop()方法返回true，否则返回false</span><br></pre></td></tr></table></figure><ul><li>显示所有集合</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show collections</span><br></pre></td></tr></table></figure><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li>插入文档</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">db.集合名.insert(document)</span><br><span class="line"></span><br><span class="line">db.col.insert(&#123;title: &apos;MongoDB 教程&apos;, </span><br><span class="line">  description: &apos;MongoDB 是一个 Nosql 数据库&apos;,</span><br><span class="line">  by: &apos;菜鸟教程&apos;,</span><br><span class="line">  url: &apos;http://www.runoob.com&apos;,</span><br><span class="line">  tags: [&apos;mongodb&apos;, &apos;database&apos;, &apos;NoSQL&apos;],</span><br><span class="line">  likes: 100</span><br><span class="line">&#125;)</span><br><span class="line">如果集合col不存在，则插入文档时自动创建集合。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">document=(&#123;title: &apos;MongoDB 教程&apos;, </span><br><span class="line">  description: &apos;MongoDB 是一个 Nosql 数据库&apos;,</span><br><span class="line">  by: &apos;菜鸟教程&apos;,</span><br><span class="line">  url: &apos;http://www.runoob.com&apos;,</span><br><span class="line">  tags: [&apos;mongodb&apos;, &apos;database&apos;, &apos;NoSQL&apos;],</span><br><span class="line">  likes: 100</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">db.col.insert(document)</span><br></pre></td></tr></table></figure><ul><li>更新文档</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">db.collection.update(</span><br><span class="line">  &lt;query&gt;,</span><br><span class="line">  &lt;update&gt;,</span><br><span class="line">  &#123;</span><br><span class="line">    upsert: &lt;boolean&gt;,</span><br><span class="line">    multi: &lt;boolean&gt;,</span><br><span class="line">    writeConcern: &lt;document&gt;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">query : update的查询条件，类似sql update查询内where后面的。</span><br><span class="line">update : update的对象和一些更新的操作符（如$,$inc...）等，也可以理解为sql update查询内set后面的</span><br><span class="line">upsert : 可选，这个参数的意思是，如果不存在update的记录，是否插入objNew,true为插入，默认是false，不插入。</span><br><span class="line">multi : 可选，mongodb默认是false,只更新找到的第一条记录，如果这个参数为true,就把按条件查出来多条记录全部更新。</span><br><span class="line">writeConcern :可选，抛出异常的级别。</span><br><span class="line"></span><br><span class="line">db.col.update(&#123;&apos;title&apos;:&apos;MongoDB 教程&apos;&#125;,&#123;$set:&#123;&apos;title&apos;:&apos;MongoDB&apos;&#125;&#125;,&#123;multi:true&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">save() 方法通过传入的文档来替换已有文档。</span><br><span class="line"></span><br><span class="line">db.collection.save(</span><br><span class="line">  &lt;document&gt;,</span><br><span class="line">  &#123;</span><br><span class="line">    writeConcern: &lt;document&gt;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">以下实例中我们替换了_id为56064f89ade2f21f36b03136的文档数据：</span><br><span class="line">db.col.save(&#123;</span><br><span class="line">  &quot;_id&quot; : ObjectId(&quot;5d9d34ed5ff1cc98126fd190&quot;),</span><br><span class="line">  &quot;title&quot; : &quot;MongoDB&quot;,</span><br><span class="line">  &quot;description&quot; : &quot;MongoDB 是一个 Nosql 数据库&quot;,</span><br><span class="line">  &quot;by&quot; : &quot;Runoob&quot;,</span><br><span class="line">  &quot;url&quot; : &quot;http://www.runoob.com&quot;,</span><br><span class="line">  &quot;tags&quot; : [</span><br><span class="line">          &quot;mongodb&quot;,</span><br><span class="line">          &quot;NoSQL&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;likes&quot; : 110</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>删除文档</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">db.collection.remove(</span><br><span class="line">  &lt;query&gt;,</span><br><span class="line">  &#123;</span><br><span class="line">    justOne: &lt;boolean&gt;,</span><br><span class="line">    writeConcern: &lt;document&gt;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">query:（可选）删除的文档的条件。</span><br><span class="line">justOne:（可选）如果设为true或1，则只删除一个文档，如果不设置该参数，或使用默认值false，则删除所有匹配条件的文档。</span><br><span class="line">writeConcern:（可选）抛出异常的级别。</span><br><span class="line"></span><br><span class="line">db.col.remove(&#123;&apos;title&apos;:&apos;MongoDB 教程&apos;&#125;)</span><br><span class="line">WriteResult(&#123; &quot;nRemoved&quot; : 2 &#125;)           # 删除了两条数据</span><br><span class="line"></span><br><span class="line">db.col.remove(&#123;&#125;)   删除所有数据</span><br></pre></td></tr></table></figure><ul><li>查找文档</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.collection.find(query, projection)</span><br><span class="line">query：可选，使用查询操作符指定查询条件</span><br><span class="line">projection：可选，使用投影操作符指定返回的键。查询时返回文档中所有键值，只需省略该参数即可（默认省略）。</span><br><span class="line"></span><br><span class="line">如果你需要以易读的方式来读取数据，可以使用pretty()方法，语法格式如下：</span><br><span class="line">db.col.find().pretty()</span><br><span class="line">pretty()方法以格式化的方式来显示所有文档。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">等于    &#123;&lt;key&gt;:&lt;value&gt;&#125;        db.col.find(&#123;&quot;by&quot;:&quot;菜鸟教程&quot;&#125;).pretty()    where by = &apos;菜鸟教程&apos;</span><br><span class="line">小于    &#123;&lt;key&gt;:&#123;$lt:&lt;value&gt;&#125;&#125;db.col.find(&#123;&quot;likes&quot;:&#123;$lt:50&#125;&#125;).pretty()where likes &lt; 50</span><br><span class="line">小于或等于&#123;&lt;key&gt;:&#123;$lte:&lt;value&gt;&#125;&#125;db.col.find(&#123;&quot;likes&quot;:&#123;$lte:50&#125;&#125;).pretty()where likes &lt;= 50</span><br><span class="line">大于    &#123;&lt;key&gt;:&#123;$gt:&lt;value&gt;&#125;&#125;db.col.find(&#123;&quot;likes&quot;:&#123;$gt:50&#125;&#125;).pretty()where likes &gt; 50</span><br><span class="line">大于或等于&#123;&lt;key&gt;:&#123;$gte:&lt;value&gt;&#125;&#125;db.col.find(&#123;&quot;likes&quot;:&#123;$gte:50&#125;&#125;).pretty()where likes &gt;= 50</span><br><span class="line">不等于    &#123;&lt;key&gt;:&#123;$ne:&lt;value&gt;&#125;&#125;db.col.find(&#123;&quot;likes&quot;:&#123;$ne:50&#125;&#125;).pretty()where likes != 50</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MongoDB的find()方法可以传入多个键(key)，每个键(key)以逗号隔开，即常规SQL的AND条件。</span><br><span class="line">语法格式如下：</span><br><span class="line">db.col.find(&#123;key1:value1, key2:value2&#125;).pretty()</span><br><span class="line">db.col.find(&#123;&quot;by&quot;:&quot;菜鸟教程&quot;, &quot;title&quot;:&quot;MongoDB 教程&quot;&#125;).pretty()</span><br><span class="line"></span><br><span class="line">or条件</span><br><span class="line">db.col.find(&#123;$or:[&#123;&quot;by&quot;:&quot;菜鸟教程&quot;&#125;,&#123;&quot;title&quot;: &quot;MongoDB 教程&quot;&#125;]&#125;).pretty()</span><br><span class="line"></span><br><span class="line">AND和OR联合使用，类似常规SQL语句为：&apos;where likes&gt;50 AND (by = &apos;菜鸟教程&apos; OR title = &apos;MongoDB 教程&apos;)&apos;</span><br><span class="line">db.col.find(&#123;&quot;likes&quot;: &#123;$gt:50&#125;, $or: [&#123;&quot;by&quot;: &quot;菜鸟教程&quot;&#125;,&#123;&quot;title&quot;: &quot;MongoDB 教程&quot;&#125;]&#125;).pretty()</span><br></pre></td></tr></table></figure><h2 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h2><ul><li>$type操作符</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.col.find(&#123;&quot;title&quot; : &#123;$type : 2&#125;&#125;)</span><br><span class="line">或</span><br><span class="line">db.col.find(&#123;&quot;title&quot; : &#123;$type : &apos;string&apos;&#125;&#125;)</span><br></pre></td></tr></table></figure><ul><li>$set操作符</li></ul><p>替换掉指定字段的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; $set: &#123; &lt;field1&gt;: &lt;value1&gt;, ... &#125; &#125;</span><br></pre></td></tr></table></figure><ul><li>$inc操作符</li></ul><p>可以对文档的某个值为数字型（只能为满足要求的数字）的键进行增减的操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5003b6135af21ff428dafbe6&quot;), &quot;uid&quot; : &quot;201203&quot;, &quot;type&quot; : &quot;1&quot;,&quot;size&quot; : 11 &#125;</span><br><span class="line">db.b.update(&#123;&quot;uid&quot; : &quot;201203&quot;&#125;,&#123;&quot;$inc&quot;:&#123;&quot;size&quot; : 2&#125;&#125;)</span><br><span class="line">db.b.find()</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5003b6135af21ff428dafbe6&quot;), &quot;uid&quot; : &quot;201203&quot;, &quot;type&quot; : &quot;1&quot;,&quot;size&quot; : 13 &#125;</span><br></pre></td></tr></table></figure><ul><li>$unset</li></ul><p>从字面就可以看出其意义，主要是用来删除键。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;_id&quot; : ObjectId(&quot;500216de81b954b6161a7d8f&quot;),</span><br><span class="line">  &quot;desc&quot; : &quot;hello world2!&quot;,</span><br><span class="line">  &quot;num&quot; : 40,</span><br><span class="line">  &quot;size&quot; : 10,</span><br><span class="line">  &quot;type&quot; : &quot;3&quot;,</span><br><span class="line">  &quot;uid&quot; : &quot;20120002&quot;</span><br><span class="line">&#125;</span><br><span class="line">db.a.update(&#123;&quot;uid&quot; : &quot;20120002&quot;,&quot;type&quot; : &quot;3&quot;&#125;,&#123;&quot;$unset&quot;:&#123;&quot;num&quot;:0&#125;&#125;)</span><br><span class="line">db.a.findOne(&#123;&quot;uid&quot; : &quot;20120002&quot;,&quot;type&quot; : &quot;3&quot;&#125;)</span><br><span class="line">&#123;</span><br><span class="line">  &quot;_id&quot; : ObjectId(&quot;500216de81b954b6161a7d8f&quot;),</span><br><span class="line">  &quot;desc&quot; : &quot;hello world2!&quot;,</span><br><span class="line">  &quot;size&quot; : 10,</span><br><span class="line">  &quot;type&quot; : &quot;3&quot;,</span><br><span class="line">  &quot;uid&quot; : &quot;20120002&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mongodb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongodb nosql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis</title>
      <link href="/2019/10/16/2019-10-10-redis/"/>
      <url>/2019/10/16/2019-10-10-redis/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h1><ul><li>keys命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DEL key             该命令用于在key存在时删除key。</span><br><span class="line">EXISTS key          检查给定key是否存在。</span><br><span class="line">RENAME key newkey   修改key的名称。</span><br><span class="line">TYPE key            返回key所储存的值的类型。</span><br></pre></td></tr></table></figure><ul><li>字符串(String)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SET key value      设置指定key的值。</span><br><span class="line">GET key            获取指定key的值。</span><br><span class="line">GETSET key value   将给定key的值设为value，并返回key的旧值(old value)。</span><br><span class="line">MGET key1 [key2..] 获取所有(一个或多个)给定key的值。</span><br><span class="line">MSET key value [key value ...]  同时设置一个或多个key-value对。</span><br><span class="line">INCR key             将key中储存的数字值增一。</span><br><span class="line">INCRBY key increment 将key所储存的值加上给定的增量值（increment）。 </span><br><span class="line">DECR key             将key中储存的数字值减一。</span><br><span class="line">DECRBY key decrement 将key所储存的值减去给定的减量值（decrement）。</span><br><span class="line">APPEND key value     如果key已经存在并且是一个字符串，APPEND命令将指定的value追加到该key原来值（value）的末尾。</span><br></pre></td></tr></table></figure><ul><li>哈希(Hash)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HEXISTS key field        查看哈希表key中，指定的字段是否存在。</span><br><span class="line">HSET key field value     将哈希表key中的字段field的值设为value。</span><br><span class="line">HMSET key field1 value1 [field2 value2 ] 同时将多个field-value(域-值)对设置到哈希表key中。  </span><br><span class="line">HGET key field           获取存储在哈希表中指定字段的值。</span><br><span class="line">HGETALL key              获取在哈希表中指定key的所有字段和值。</span><br><span class="line">HDEL key field1 [field2] 删除一个或多个哈希表字段。</span><br><span class="line">HLEN key                 获取哈希表中字段的数量。</span><br><span class="line">HVALS key                获取哈希表中所有值。</span><br></pre></td></tr></table></figure><ul><li>列表(List)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">LPUSH key value1 [value2]    将一个或多个值插入到列表头部。</span><br><span class="line">LPUSHX key value             将一个值插入到已存在的列表头部。</span><br><span class="line">RPUSH key value1 [value2]    在列表中添加一个或多个值。</span><br><span class="line">RPUSHX key value             为已存在的列表添加值。</span><br><span class="line">LRANGE key start stop        获取列表指定范围内的元素。</span><br><span class="line">LINSERT key BEFORE|AFTER pivot value  在列表的元素前或者后插入元素。</span><br><span class="line">LLEN key                     获取列表长度。</span><br><span class="line">LPOP key                     移出并获取列表的第一个元素。</span><br><span class="line">RPOP key                     移除列表的最后一个元素，返回值为移除的元素。</span><br><span class="line">LREM key count value         移除列表元素（count为数量）。</span><br></pre></td></tr></table></figure><ul><li>集合(Set)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">集合成员是唯一的，这就意味着集合中不能出现重复的数据。</span><br><span class="line"></span><br><span class="line">SADD key member1 [member2]    向集合添加一个或多个成员。</span><br><span class="line">SCARD key                     获取集合的成员数。</span><br><span class="line">SMEMBERS key                  返回集合中的所有成员。</span><br><span class="line">SDIFF key1 [key2]             返回给定key1集合里其它集合没有的成员。</span><br><span class="line">SDIFFSTORE destination key1 [key2]    返回给定key1集合里其它集合没有的成员并存储在destination中。</span><br><span class="line">SINTER key1 [key2]            返回给定所有集合的交集。</span><br><span class="line">SINTERSTORE destination key1 [key2]   返回给定所有集合的交集并存储在destination中。</span><br><span class="line">SUNION key1 [key2]            返回所有给定集合的并集。</span><br><span class="line">SUNIONSTORE destination key1 [key2]   返回所有给定集合的并集存储在destination集合中。</span><br><span class="line">SISMEMBER key member          判断member元素是否是集合key的成员</span><br><span class="line">SREM key member1 [member2]    移除集合中一个或多个成员。</span><br></pre></td></tr></table></figure><ul><li>有序集合(sorted set)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ZADD key score1 member1 [score2 member2] 向有序集合添加一个或多个成员，或者更新已存在成员的分数（序号）。</span><br><span class="line">ZCARD key                                获取有序集合的成员数。</span><br><span class="line">ZCOUNT key min max                       计算在有序集合中指定区间分数的成员数。</span><br><span class="line">ZINTERSTORE destination numkeys key [key ...] 计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合key中(numkeys为有序集的个数)。</span><br><span class="line">ZRANK key member                         返回有序集合中指定成员的索引。</span><br><span class="line">ZREM key member [member ...]             移除有序集合中的一个或多个成员。</span><br><span class="line">ZRANGE key start stop [WITHSCORES]       通过索引区间返回有序集合指定区间内的成员。</span><br><span class="line">下标参数start和stop都以0为底，也就是说，以0表示有序集第一个成员，以1表示有序集第二个成员，以此类推。</span><br><span class="line">你也可以使用负数下标，以-1表示最后一个成员，-2表示倒数第二个成员，以此类推。</span><br></pre></td></tr></table></figure><ul><li>发布订阅</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SUBSCRIBE redisChat</span><br><span class="line">重新开启个redis客户端，然后在同一个频道redisChat发布两次消息，订阅者就能接收到消息。</span><br><span class="line">PUBLISH redisChat &quot;Redis is a great caching technique&quot;</span><br></pre></td></tr></table></figure><ul><li>事务</li></ul><p>一个事务从开始到执行会经历以下三个阶段：开始事务、命令入队、执行事务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">MULTI         标记一个事务块的开始。</span><br><span class="line">DISCARD       取消事务，放弃执行事务块内的所有命令。</span><br><span class="line">EXEC          执行所有事务块内的命令。</span><br><span class="line">UNWATCH       取消WATCH命令对所有key的监视。</span><br><span class="line">WATCH key [key ...]   监视一个(或多个) key，如果在事务执行之前这个(或这些)key被其他命令所改动，那么事务将被打断。</span><br><span class="line"></span><br><span class="line">multi</span><br><span class="line"></span><br><span class="line">set a aaa</span><br><span class="line">set b bbb</span><br><span class="line">set c ccc</span><br><span class="line"></span><br><span class="line">exec</span><br></pre></td></tr></table></figure><ul><li>连接命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AUTH password    验证密码是否正确</span><br><span class="line">ECHO message     打印字符串</span><br><span class="line">PING             查看服务是否运行</span><br><span class="line">QUIT             关闭当前连接</span><br><span class="line">SELECT index     切换到指定的数据库</span><br></pre></td></tr></table></figure><ul><li>备份与恢复</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">redis 127.0.0.1:6379&gt; SAVE </span><br><span class="line">该命令将在redis安装目录中创建dump.rdb文件。</span><br><span class="line"></span><br><span class="line">将备份文件(dump.rdb)移动到redis安装目录并启动服务</span><br><span class="line">CONFIG GET dir</span><br><span class="line">&quot;dir&quot;</span><br><span class="line">&quot;/usr/local/redis/bin&quot;</span><br><span class="line"></span><br><span class="line">创建redis备份文件也可以使用命令 BGSAVE，该命令在后台执行。</span><br><span class="line">BGSAVE</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis nosql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oracle</title>
      <link href="/2019/10/16/2019-10-09-oracle/"/>
      <url>/2019/10/16/2019-10-09-oracle/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="oracle"><a href="#oracle" class="headerlink" title="oracle"></a>oracle</h1><ul><li>SQL SELECT TOP, LIMIT, ROWNUM子句</li></ul><p>MySQL 语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT column_name(s) FROM table_name LIMIT number;</span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line">SELECT * FROM Persons  LIMIT 5;</span><br></pre></td></tr></table></figure><p>Oracle 语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT column_name(s)</span><br><span class="line">FROM table_name</span><br><span class="line">WHERE ROWNUM &lt;= number;</span><br><span class="line">实例</span><br><span class="line">SELECT *</span><br><span class="line">FROM Persons</span><br><span class="line">WHERE ROWNUM &lt;=5;</span><br></pre></td></tr></table></figure><ul><li>IN操作符</li></ul><p>IN操作符允许您在WHERE子句中规定多个值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">选取name为&quot;Google&quot;或&quot;菜鸟教程&quot;的所有网站：</span><br><span class="line">SELECT * FROM Websites WHERE name IN (&apos;Google&apos;,&apos;菜鸟教程&apos;);</span><br></pre></td></tr></table></figure><ul><li>BETWEEN操作符</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">选取 alexa 介于 1 和 20 之间的所有网站:  </span><br><span class="line">SELECT * FROM Websites WHERE alexa BETWEEN 1 AND 20;</span><br></pre></td></tr></table></figure><ul><li>INSERT INTO SELECT 语句</li></ul><p>从一个表复制数据，然后把数据插入到一个已存在的表中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO Websites (name, country) SELECT app_name, country FROM apps;</span><br></pre></td></tr></table></figure><ul><li>约束</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">NOT NULL   - 指示某列不能存储 NULL 值。</span><br><span class="line">UNIQUE     - 保证某列的每行必须有唯一的值。</span><br><span class="line">PRIMARY KEY - NOTNULL和UNIQUE的结合。确保某列（或两个列多个列的结合）有唯一标识，有助于更容易更快速地找到表中的一个特定的记录。</span><br><span class="line">FOREIGN KEY - 保证一个表中的数据匹配另一个表中的值的参照完整性。</span><br><span class="line">CHECK         - 保证列中的值符合指定的条件。</span><br><span class="line">DEFAULT       - 规定没有给列赋值时的默认值</span><br></pre></td></tr></table></figure><p>简写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> CREATE TABLE table_name(</span><br><span class="line">column_name1 data_type(size) constraint_name,</span><br><span class="line">column_name2 data_type(size) constraint_name,</span><br><span class="line">column_name3 data_type(size) constraint_name,</span><br><span class="line">....</span><br><span class="line"> );</span><br><span class="line"></span><br><span class="line"> 如：</span><br><span class="line"> CREATE TABLE Persons(</span><br><span class="line">   Id_P int NOT NULL,</span><br><span class="line">   LastName varchar(255) NOT NULL,</span><br><span class="line">   FirstName varchar(255),</span><br><span class="line">   Address varchar(255),</span><br><span class="line">   City varchar(255) DEFAULT &apos;Sandnes&apos;,</span><br><span class="line">   PRIMARY KEY (Id_P)  //PRIMARY KEY约束</span><br><span class="line"> )；</span><br><span class="line"></span><br><span class="line"> CREATE TABLE Persons(</span><br><span class="line">   Id_P int NOT NULL PRIMARY KEY,   //PRIMARY KEY约束</span><br><span class="line">   LastName varchar(255) NOT NULL,</span><br><span class="line">   FirstName varchar(255),</span><br><span class="line">   Address varchar(255),</span><br><span class="line">   City varchar(255)</span><br><span class="line"> )；</span><br></pre></td></tr></table></figure><p>完整写法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> 列级约束：</span><br><span class="line"> CREATE TABLE 表名(</span><br><span class="line">column_name1 data_type(size) uq_表名_列名 unique,</span><br><span class="line">column_name2 data_type(size) nn_表名_列名 not null,</span><br><span class="line">column_name3 data_type(size) ck_表名_列名 check(条件),</span><br><span class="line">column_name4 data_type(size) pk_表名_列名 primary key,</span><br><span class="line">....</span><br><span class="line"> );</span><br><span class="line"></span><br><span class="line"> 表级约束：</span><br><span class="line">   CREATE TABLE 表名(</span><br><span class="line">column_name1 data_type(size), </span><br><span class="line">column_name2 data_type(size), </span><br><span class="line">column_name3 data_type(size), </span><br><span class="line">column_name4 data_type(size),</span><br><span class="line">constraint uq_表名_列名 unique(列名),</span><br><span class="line">constraint ck_表名_列名 check(条件),   条件是表中列的限制条件。</span><br><span class="line">constraint pk_表名_列名 primary key(列名),</span><br><span class="line">CONSTRAINT fk_表名_列名 FOREIGN KEY(P_Id) REFERENCES Persons(P_Id)</span><br><span class="line"> );</span><br><span class="line"></span><br><span class="line"> 先表后约束：</span><br><span class="line"> ALTER TABLE Persons MODIFY Age int NOT NULL;</span><br><span class="line"> ALTER TABLE Persons MODIFY City DEFAULT &apos;SANDNES&apos;；</span><br><span class="line"> ALTER TABLE Persons ADD CONSTRAINT uc_PersonID UNIQUE (P_Id,LastName);</span><br><span class="line"> ALTER TABLE Persons ADD CONSTRAINT pk_PersonID PRIMARY KEY (P_Id,LastName)；</span><br><span class="line"> ALTER TABLE Persons ADD CONSTRAINT chk_Person CHECK (P_Id&gt;0 AND City=&apos;Sandnes&apos;)；</span><br><span class="line"> ALTER TABLE Orders ADD CONSTRAINT fk_PerOrders FOREIGN KEY (P_Id) REFERENCES Persons(P_Id)；  </span><br><span class="line"></span><br><span class="line"> 删除约束：</span><br><span class="line"> ALTER TABLE Persons MODIFY Age int NULL;</span><br><span class="line"> ALTER TABLE Persons ALTER COLUMN City DROP DEFAULT；</span><br><span class="line"> ALTER TABLE Persons DROP CONSTRAINT uc_PersonID;</span><br><span class="line"> ALTER TABLE Persons DROP CONSTRAINT pk_PersonID；</span><br><span class="line"> ALTER TABLE Persons DROP CONSTRAINT chk_Person；</span><br><span class="line"> ALTER TABLE Orders DROP CONSTRAINT fk_PerOrders；</span><br></pre></td></tr></table></figure><ul><li>序列</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE SEQUENCE seq_person MINVALUE 1 START WITH 1 INCREMENT BY 1 CACHE 10</span><br><span class="line">上面的代码创建一个名为seq_person的sequence对象，它以1起始且以1递增。该对象缓存10个值以提高性能。cache规定了为了提高访问速度要存储多少个序列值。</span><br><span class="line"></span><br><span class="line">要在&quot;Persons&quot;表中插入新记录，我们必须使用 nextval 函数（该函数从 seq_person 序列中取回下一个值）：</span><br><span class="line">INSERT INTO Persons (ID,FirstName,LastName) VALUES (seq_person.nextval,&apos;Lars&apos;,&apos;Monsen&apos;)；</span><br></pre></td></tr></table></figure><ul><li>HAVING子句</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT Websites.name, Websites.url, SUM(access_log.count) AS nums FROM access_log</span><br><span class="line">INNER JOIN Websites ON access_log.site_id=Websites.id)</span><br><span class="line">GROUP BY Websites.name HAVING SUM(access_log.count) &gt; 200;</span><br></pre></td></tr></table></figure><ul><li>UCASE()函数</li></ul><p>此函数把字段的值转换为大写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT UCASE(name) AS site_title, url FROM Websites;</span><br></pre></td></tr></table></figure><ul><li>LCASE()函数</li></ul><p>此函数把字段的值转换为小写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT LCASE(name) AS site_title, url FROM Websites;</span><br></pre></td></tr></table></figure><ul><li>LEN()函数</li></ul><p>此函数返回文本字段中值的长度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT name, LENGTH(url) as LengthOfURL FROM Websites;</span><br></pre></td></tr></table></figure><ul><li>NOW()函数</li></ul><p>此函数返回当前系统的日期和时间。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT name, url, Now() AS date FROM Websites;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> oracle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql(2)</title>
      <link href="/2019/10/16/2019-10-08-mysql-2/"/>
      <url>/2019/10/16/2019-10-08-mysql-2/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h1><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>事务是必须满足4个条件（ACID）：原子性（Atomicity，或称不可分割性）、一致性（Consistency）、隔离性（Isolation，又称独立性）、持久性（Durability）。</p><p>原子性：一个事务（transaction）中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。<br>一致性：在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设规则，这包含资料的精确度、串联性以及后续数据库可以自发性地完成预定的工作。<br>隔离性：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。事务隔离分为不同级别，包括读未提交（Read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化（Serializable）。<br>持久性：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">用 BEGIN, ROLLBACK, COMMIT来实现</span><br><span class="line"></span><br><span class="line">begin;    # 开始事务</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"> </span><br><span class="line">insert into runoob_transaction_test values(7);</span><br><span class="line">Query OK, 1 rows affected (0.00 sec)</span><br><span class="line"> </span><br><span class="line">rollback;   # 回滚</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">commit; # 提交事务</span><br><span class="line"></span><br><span class="line">BEGIN 开始一个事务</span><br><span class="line">ROLLBACK 事务回滚</span><br><span class="line">COMMIT 事务确认</span><br></pre></td></tr></table></figure><h2 id="ALTER命令"><a href="#ALTER命令" class="headerlink" title="ALTER命令"></a>ALTER命令</h2><ul><li>删除，添加或修改表字段</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名  DROP column 列名;</span><br><span class="line"></span><br><span class="line">ALTER TABLE 表名  ADD 列名 数据类型;</span><br><span class="line"></span><br><span class="line">ALTER TABLE 表名  RENAME column 旧列名 to 新列名;</span><br><span class="line"></span><br><span class="line">ALTER TABLE 表名  MODIFY 列名 数据类型；</span><br></pre></td></tr></table></figure><ul><li>修改表名</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 旧表名 RENAME TO 新表名;</span><br></pre></td></tr></table></figure><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><ul><li>创建</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">CREATE INDEX 索引名称 ON 表名(列名(length));</span><br><span class="line">如果是CHAR，VARCHAR类型，length可以小于字段实际长度；如果是BLOB和TEXT类型，必须指定length。</span><br><span class="line"></span><br><span class="line">修改表结构(添加索引)</span><br><span class="line">ALTER table 表名 ADD INDEX i索引名称(列名)</span><br><span class="line"></span><br><span class="line">创建表的时候直接指定</span><br><span class="line">CREATE TABLE mytable(   </span><br><span class="line">  ID INT NOT NULL, </span><br><span class="line">  username VARCHAR(16) NOT NULL,   </span><br><span class="line">  INDEX [索引名] (列名(length)) </span><br><span class="line">);  </span><br><span class="line"></span><br><span class="line">删除索引的语法</span><br><span class="line">DROP INDEX [索引名] ON 表名;</span><br></pre></td></tr></table></figure><h2 id="临时表"><a href="#临时表" class="headerlink" title="临时表"></a>临时表</h2><p>MySQL临时表在我们需要保存一些临时数据时是非常有用的。临时表只在当前连接可见，当关闭连接时，Mysql会自动删除表并释放所有空间。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TEMPORARY TABLE SalesSummary (</span><br><span class="line">  product_name VARCHAR(50) NOT NULL,</span><br><span class="line">  total_sales DECIMAL(12,2) NOT NULL DEFAULT 0.00,</span><br><span class="line">  avg_unit_price DECIMAL(7,2) NOT NULL DEFAULT 0.00,</span><br><span class="line">  total_units_sold INT UNSIGNED NOT NULL DEFAULT 0</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE insect(</span><br><span class="line">  id INT UNSIGNED NOT NULL AUTO_INCREMENT,</span><br><span class="line">  PRIMARY KEY (id),</span><br><span class="line">  name VARCHAR(30) NOT NULL, # type of insect</span><br><span class="line">  date DATE NOT NULL, # date collected</span><br><span class="line">  origin VARCHAR(30) NOT NULL # where collected</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">一般情况下序列的开始值为1，但如果你需要指定一个开始值100，我们可以在建表时在)外增加</span><br><span class="line">auto_increment=100</span><br></pre></td></tr></table></figure><ul><li>读取不重复的数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT last_name, first_name FROM person_tbl;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql(1)</title>
      <link href="/2019/10/16/2019-10-08-mysql-1/"/>
      <url>/2019/10/16/2019-10-08-mysql-1/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h1><h2 id="启动及关闭mysql服务器"><a href="#启动及关闭mysql服务器" class="headerlink" title="启动及关闭mysql服务器"></a>启动及关闭mysql服务器</h2><ul><li>Windows系统下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">打开命令窗口(cmd)，进入MySQL安装目录的bin目录。</span><br><span class="line"></span><br><span class="line">启动：</span><br><span class="line">cd c:/mysql/bin   移动到mysql的bin目录下</span><br><span class="line">mysqld --console</span><br><span class="line"></span><br><span class="line">关闭：</span><br><span class="line">cd c:/mysql/bin</span><br><span class="line">mysqladmin -uroot shutdown</span><br></pre></td></tr></table></figure><ul><li>Linux 系统下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">首先，我们需要通过以下命令来检查MySQL服务器是否启动：</span><br><span class="line">ps -ef | grep mysqld</span><br><span class="line"></span><br><span class="line">如果MySql已经启动，以上命令将输出mysql进程列表，如果mysql未启动，你可以使用以下命令来启动mysql服务器:</span><br><span class="line">cd /usr/bin</span><br><span class="line">./mysqld_safe &amp;</span><br><span class="line"></span><br><span class="line">如果你想关闭目前运行的 MySQL 服务器, 你可以执行以下命令:</span><br><span class="line">cd /usr/bin</span><br><span class="line">./mysqladmin -u root -p shutdown</span><br><span class="line">Enter password: ******</span><br></pre></td></tr></table></figure><h2 id="管理MySQL的命令"><a href="#管理MySQL的命令" class="headerlink" title="管理MySQL的命令"></a>管理MySQL的命令</h2><ul><li>创建数据库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">进入mysql</span><br><span class="line">CREATE DATABASE 数据库名;</span><br><span class="line"></span><br><span class="line">在命令行直接创建</span><br><span class="line">mysqladmin -u root -p create RUNOOB</span><br><span class="line">root用户拥有最高权限，可以使用mysql mysqladmin命令来创建数据库。</span><br></pre></td></tr></table></figure><ul><li>SHOW DATABASES</li></ul><p>列出MySQL数据库管理系统的数据库列表。</p><ul><li>USE 数据库名</li></ul><p>选择要操作的Mysql数据库，使用该命令后所有Mysql命令都只针对该数据库。</p><ul><li>SHOW TABLES</li></ul><p>显示指定数据库的所有表，使用该命令前需要使用use命令来选择要操作的数据库。</p><ul><li>SHOW COLUMNS FROM 数据表</li></ul><p>显示数据表的属性，属性类型，主键信息，是否为NULL，默认值等其他信息。</p><ul><li>SHOW INDEX FROM 数据表</li></ul><p>显示数据表的详细索引信息，包括PRIMARY KEY（主键）。</p><ul><li>SHOW TABLE STATUS（FROM db_name）LIKE（LIKE ‘pattern’）\G</li></ul><p>该命令将输出Mysql数据库管理系统的性能及统计信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SHOW TABLE STATUS  FROM RUNOOB;   # 显示数据库 RUNOOB 中所有表的信息</span><br><span class="line">SHOW TABLE STATUS from RUNOOB LIKE &apos;runoob%&apos;;     # 表名以runoob开头的表的信息</span><br><span class="line">SHOW TABLE STATUS from RUNOOB LIKE &apos;runoob%&apos;\G;   # 加上 \G，查询结果按列打印</span><br></pre></td></tr></table></figure><ul><li>删除数据库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">进入mysql</span><br><span class="line">drop 命令删除数据库</span><br><span class="line">drop database &lt;数据库名&gt;;</span><br><span class="line"></span><br><span class="line">在命令行直接删除</span><br><span class="line">mysqladmin -u root -p drop RUNOOB</span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ul><li>字符串类型</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CHAR        0-255字节       定长字符串</span><br><span class="line">VARCHAR     0-65535字节     变长字符串</span><br><span class="line">BLOB        0-65535字节    二进制形式的长文本数据</span><br><span class="line">TEXT        0-65535字节    长文本数据</span><br></pre></td></tr></table></figure><ul><li>日期和时间类型</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DATE          3     1000-01-01/9999-12-31         YYYY-MM-DD    日期值</span><br><span class="line">TIME          3     &apos;-838:59:59&apos;/&apos;838:59:59&apos;      HH:MM:SS      时间值或持续时间</span><br><span class="line">YEAR          1     1901/2155                     YYYY          年份值</span><br><span class="line">DATETIME      8     1000-01-01 00:00:00/9999-12-31 23:59:59     YYYY-MM-DD HH:MM:SS   混合日期和时间值</span><br></pre></td></tr></table></figure><ul><li>数值类型</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INT或INTEGER   4字节  (-2147483648，2147483647) 大整数值</span><br><span class="line">BIGINT        8字节  (-9,223,372,036,854,775,808，9 223 372 036 854 775 807) 极大整数值</span><br><span class="line">FLOAT         4字节  (-3.402823466E+38，-1.175494351E-38)，0，(1.175494351E-38，3.402823466351E+38) 单精度浮点数值</span><br><span class="line">DOUBLE        8字节  (-1.7976931348623157E+308，-2.2250738585072014E-308)，0，(2.2250738585072014E-308，1.7976931348623157E+308) 双精度 浮点数值</span><br></pre></td></tr></table></figure><h2 id="DDL数据定义语言"><a href="#DDL数据定义语言" class="headerlink" title="DDL数据定义语言"></a>DDL数据定义语言</h2><ul><li>创建表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE runoob_tbl(</span><br><span class="line">  runoob_id INT NOT NULL AUTO_INCREMENT,</span><br><span class="line">  runoob_title VARCHAR(100) NOT NULL,</span><br><span class="line">  runoob_author VARCHAR(40) NOT NULL,</span><br><span class="line">  submission_date DATE,</span><br><span class="line">  PRIMARY KEY ( runoob_id )</span><br><span class="line">)ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure><ul><li>删除表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE runoob_tbl;</span><br></pre></td></tr></table></figure><h2 id="DML数据操作语言"><a href="#DML数据操作语言" class="headerlink" title="DML数据操作语言"></a>DML数据操作语言</h2><ul><li>插入数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO table_name (field1,field2,...fieldN） VALUES (value1,value2,...valueN);</span><br></pre></td></tr></table></figure><ul><li>查询数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT column_name,column_name FROM table_name；</span><br></pre></td></tr></table></figure><ul><li>更新数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE table_name SET field1=new-value1, field2=new-value2 [WHERE Clause]</span><br></pre></td></tr></table></figure><ul><li>删除数据</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM table_name [WHERE Clause]</span><br><span class="line">如果没有where则删除表中所有数据。</span><br></pre></td></tr></table></figure><ul><li>条件语句</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT field1, field2,...fieldN FROM table_name1, table_name2...[WHERE condition1 [AND [OR]] condition2.....</span><br><span class="line">可以使用一个或者多个表，表之间使用逗号, 分割，并使用WHERE语句来设定查询条件。</span><br><span class="line">可以使用AND或者OR指定一个或多个条件。</span><br><span class="line">WHERE子句也可以运用于SQL的DELETE或者UPDATE命令。</span><br><span class="line"></span><br><span class="line">SELECT * from runoob_tbl WHERE runoob_author=&apos;菜鸟教程&apos;;</span><br></pre></td></tr></table></figure><ul><li>LIKE子句</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from runoob_tbl  WHERE runoob_author LIKE &apos;%COM&apos;;</span><br><span class="line"></span><br><span class="line">%表示未知字符串，_表示单字母。</span><br></pre></td></tr></table></figure><ul><li>UNION操作符</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">SELECT expression1, expression2, ... expression_n FROM tables [WHERE conditions]</span><br><span class="line">UNION [ALL | DISTINCT]</span><br><span class="line">SELECT expression1, expression2, ... expression_n FROM tables [WHERE conditions];</span><br><span class="line"></span><br><span class="line">expression1, expression2, ... expression_n: 要检索的。</span><br><span class="line">tables: 要检索的数据表。</span><br><span class="line">WHERE conditions: 可选， 检索条件。</span><br><span class="line">DISTINCT: 可选，删除结果集中重复的数据。默认情况下UNION操作符已经删除了重复数据，所以DISTINCT修饰符对结果没啥影响。</span><br><span class="line">ALL: 可选，返回所有结果集，包含重复数据。</span><br></pre></td></tr></table></figure><ul><li>排序</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from runoob_tbl ORDER BY submission_date ASC;</span><br><span class="line">SELECT * from runoob_tbl ORDER BY submission_date DESC;</span><br><span class="line"></span><br><span class="line">使用ASC或DESC关键字来设置查询结果是按升序或降序排列。 默认情况下，它是按升序排列。</span><br><span class="line">可以添加WHERE...LIKE子句来设置条件。</span><br></pre></td></tr></table></figure><ul><li>分组</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT name, COUNT(*) FROM  employee_tbl GROUP BY name;</span><br><span class="line"></span><br><span class="line">在分组的列上我们可以使用COUNT, SUM, AVG,等函数。</span><br></pre></td></tr></table></figure><ul><li>连接</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">INNER JOIN（内连接,或等值连接）：获取两个表中字段匹配关系的记录。</span><br><span class="line">LEFT  JOIN（左连接）：获取左表所有记录，即使右表没有对应匹配的记录。</span><br><span class="line">RIGHT JOIN（右连接）： 与LEFT JOIN相反，用于获取右表所有记录，即使左表没有对应匹配的记录。</span><br><span class="line"></span><br><span class="line">SELECT a.runoob_id,a.runoob_author,b.runoob_count FROM runoob_tbl a INNER JOIN tcount_tbl b ON runoob_author = b.runoob_author;</span><br><span class="line"></span><br><span class="line">以runoob_tbl为左表，tcount_tbl为右表</span><br><span class="line">ELECT a.runoob_id,a.runoob_author,b.runoob_count FROM runoob_tbl a LEFT JOIN tcount_tbl b ON a.runoob_author = b.runoob_author;</span><br><span class="line"></span><br><span class="line">以runoob_tbl为左表，tcount_tbl为右表</span><br><span class="line">SELECT a.runoob_id,a.runoob_author,b.runoob_count FROM runoob_tbl a RIGHT JOIN tcount_tbl b ON a.runoob_author = b.runoob_author;</span><br></pre></td></tr></table></figure><ul><li>NULL 值处理</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">where里判断字符是否为空</span><br><span class="line">IS NULL: 当列的值是 NULL,此运算符返回 true。</span><br><span class="line">IS NOT NULL: 当列的值不为 NULL, 运算符返回 true。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ECMAScript6</title>
      <link href="/2019/10/16/2019-09-30-ecmascript6/"/>
      <url>/2019/10/16/2019-09-30-ecmascript6/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="ECMAScript6"><a href="#ECMAScript6" class="headerlink" title="ECMAScript6"></a>ECMAScript6</h1><ul><li>JavaScript-let</li></ul><p>let 语句允许您使用块作用域声明变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var x = 10;</span><br><span class="line">// Here x is 10</span><br><span class="line">&#123; </span><br><span class="line">  let x = 2;</span><br><span class="line">  // Here x is 2</span><br><span class="line">&#125;</span><br><span class="line">// Here x is 10</span><br></pre></td></tr></table></figure><ul><li>JavaScript-const</li></ul><p>const 语句允许您声明常量（具有常量值的 JavaScript 变量）。常量类似于let变量，但不能更改值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var x = 10;</span><br><span class="line">// Here x is 10</span><br><span class="line">&#123; </span><br><span class="line">  const x = 2;</span><br><span class="line">  // Here x is 2</span><br><span class="line">&#125;</span><br><span class="line">// Here x is 10</span><br></pre></td></tr></table></figure><ul><li>指数运算符</li></ul><p>取幂运算符（ ** ）将第一个操作数提升到第二个操作数的幂。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var x = 5;</span><br><span class="line">var z = x ** 2;          // 结果是 25</span><br></pre></td></tr></table></figure><ul><li>x ** y 的结果与 Math.pow(x,y) 相同：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var x = 5;</span><br><span class="line">var z = Math.pow(x,2);   // 结果是 25</span><br></pre></td></tr></table></figure><ul><li>默认参数值</li></ul><p>ES6允许函数参数具有默认值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function myFunction(x, y = 10) &#123;</span><br><span class="line">  // y is 10 if not passed or undefined</span><br><span class="line">  return x + y;</span><br><span class="line">&#125;</span><br><span class="line">myFunction(5); // 将返回 15</span><br></pre></td></tr></table></figure><ul><li>Array.find()</li></ul><p>find()方法返回通过测试函数的第一个数组元素的值。此例查找（返回）第一个大于 18 的元素（的值）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var numbers = [4, 9, 16, 25, 29];</span><br><span class="line">var first = numbers.find(myFunction);</span><br><span class="line"></span><br><span class="line">function myFunction(value, index, array) &#123;</span><br><span class="line">  return value &gt; 18;</span><br><span class="line">&#125;</span><br><span class="line">请注意此函数接受 3 个参数：</span><br><span class="line"></span><br><span class="line">项目值</span><br><span class="line">项目索引</span><br><span class="line">数组本身</span><br></pre></td></tr></table></figure><ul><li>Array.findIndex()</li></ul><p>findIndex() 方法返回通过测试函数的第一个数组元素的索引。此例确定大于18的第一个元素的索引：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var numbers = [4, 9, 16, 25, 29];</span><br><span class="line">var first = numbers.findIndex(myFunction);</span><br><span class="line"></span><br><span class="line">function myFunction(value, index, array) &#123;</span><br><span class="line">  return value &gt; 18;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>新的数字属性</li></ul><p>ES6将以下属性添加到Number对象：EPSILON、MIN_SAFE_INTEGER、MAX_SAFE_INTEGER</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var x = Number.EPSILON;</span><br><span class="line">var x = Number.MIN_SAFE_INTEGER;</span><br><span class="line">var x = Number.MAX_SAFE_INTEGER;</span><br></pre></td></tr></table></figure><ul><li>新的数字方法</li></ul><p>ES6为Number对象添加了2个新方法：Number.isInteger()、Number.isSafeInteger()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Number.isInteger() 方法</span><br><span class="line">如果参数是整数，则 Number.isInteger() 方法返回 true。</span><br><span class="line">Number.isInteger(10);        // 返回 true</span><br><span class="line">Number.isInteger(10.5);      // 返回 false</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Number.isSafeInteger() 方法</span><br><span class="line">安全整数是可以精确表示为双精度数的整数。</span><br><span class="line">如果参数是安全整数，则 Number.isSafeInteger() 方法返回 true。</span><br><span class="line">Number.isSafeInteger(10);    // 返回 true</span><br><span class="line">Number.isSafeInteger(12345678901234567890);  // 返回 false</span><br></pre></td></tr></table></figure><ul><li>新的全局方法</li></ul><p>ES6还增加了2个新的全局数字方法：isFinite()、isNaN()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">isFinite() 方法</span><br><span class="line">如果参数为 Infinity 或 NaN，则全局 isFinite() 方法返回 false。</span><br><span class="line">否则返回 true：</span><br><span class="line">isFinite(10/0);       // 返回 false</span><br><span class="line">isFinite(10/1);       // 返回 true</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">isNaN() 方法</span><br><span class="line">如果参数是 NaN，则全局 isNaN() 方法返回 true。否则返回 false：</span><br><span class="line">isNaN(&quot;Hello&quot;);       // 返回 true</span><br></pre></td></tr></table></figure><ul><li>箭头函数（Arrow Function）</li></ul><p>箭头函数允许使用简短的语法来编写函数表达式。您不需要function关键字、return关键字以及花括号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// ES5</span><br><span class="line">var x = function(x, y) &#123;</span><br><span class="line">   return x * y;</span><br><span class="line">&#125;</span><br><span class="line">// ES6</span><br><span class="line">const x = (x, y) =&gt; x * y;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ECMAScript6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ECMAScript6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建国70周年记录</title>
      <link href="/2019/10/16/2019-09-29-xin-de/"/>
      <url>/2019/10/16/2019-09-29-xin-de/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h1><p>  今天的分享，并没有任何关于技术上的东西，到今天为止，是伟大的祖国建立七十周年。我们也想看看先烈们是如何抛头颅、洒热血地，让我们铭记于心，于是我们观看了一些剪辑的建国大业的视频。</p><p>  建国大业主要简述了中共与国民党在抗战胜利后，对如何建国，如何安抚深受战争创伤的百姓采取了不一样的政策，双方利益分歧巨大，导致了内战的全面爆发。共产党人重视各民主党派的力量，选择了民主建国，成立联合政府，并以分田地的方式关注了劳苦大众的利益。而已蒋介石为首的国民党人却选择了无视共产党人与其他民主党派的存在，无视劳苦大众的利益，结果失败了。在影片，我们看到了蒋介石是如何快乐地宣布对共产党宣战，又是如何在毛主席的带领下取得了辽沈战役、淮海战役等战役的胜利之后，黯然地推倒台湾。</p><p>  那么共产党的胜利的原因呢？<br>  我觉得，共产党之所以得天下，一是因为得民心，二是因为得人才。从视频中看，“得民心者得天下”的必然性始终灌注在电影中，当时共产党并不比国民党强大多少，主要是人民对我党的不断支持，以及不少人才都倒向了共产党阵营，而另一方的国民党，内部不够团结，各怀鬼胎，显得组织十分混乱。　　</p><p>  在剪辑的视频中，毛泽东说二十年前，我们对国民党妥协，本以为能迎来和平解放，然而却迎来了截然相反的结果，于是我党吸取了教训，决定不再妥协。之后在两年的时间里，在我党的不断前进下，中国迎来了团结统一，再之后，经过我党的不懈努力下，新疆、西藏也迎来了和平解放。</p><p>  看了这些剪辑，我被深深的震撼了。三四十年代的中国，民族危机，内外战争不断，人民出于水深火热之中，在这个曾经一度辉煌耀眼的东方，那时却燃起的是熊熊的战火。在我党和人民的不断努力下，如今，我国已经成为世界第二大经济体，预计到本世纪中叶，我国将实现民族的伟大复兴，接下来就让我们一起见证吧！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ECMAScript5</title>
      <link href="/2019/10/16/2019-09-28-ecmascript-5/"/>
      <url>/2019/10/16/2019-09-28-ecmascript-5/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="ECMAScript5"><a href="#ECMAScript5" class="headerlink" title="ECMAScript5"></a>ECMAScript5</h1><ul><li>“use strict”指令</li></ul><p>“use strict”定义JavaScript代码应该以“严格模式”执行。例如，使用严格模式，不能使用未声明的变量。<br>您可以在所有程序中使用严格模式。它可以帮助您编写更清晰的代码，例如阻止您使用未声明的变量。<br>“use strict” 只是一个字符串表达式。旧浏览器如果不理解它们就不会抛出错误。</p><ul><li>String.trim()</li></ul><p>String.trim()删除字符串两端的空白字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var str = &quot;       Hello World!        &quot;;</span><br><span class="line">alert(str.trim());</span><br></pre></td></tr></table></figure><ul><li>Array.isArray()</li></ul><p>isArray()方法检查对象是否为数组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function myFunction() &#123;</span><br><span class="line">  var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</span><br><span class="line">  var x = document.getElementById(&quot;demo&quot;);</span><br><span class="line">  x.innerHTML = Array.isArray(fruits);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Array.forEach()</li></ul><p>forEach()方法为每个数组元素调用一次函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var txt = &quot;&quot;;</span><br><span class="line">var numbers = [45, 4, 9, 16, 25];</span><br><span class="line">numbers.forEach(myFunction);</span><br><span class="line"></span><br><span class="line">function myFunction(value)&#123;</span><br><span class="line">  txt = txt + value + &quot;&lt;br&gt;&quot;; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Array.map()</li></ul><p>这个例子给每个数组值乘以2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var numbers1 = [45, 4, 9, 16, 25];</span><br><span class="line">var numbers2 = numbers1.map(myFunction);</span><br><span class="line"></span><br><span class="line">function myFunction(value) &#123;</span><br><span class="line">  return value * 2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Array.filter()</li></ul><p>此例用值大于18的元素创建一个新数组：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var numbers = [45, 4, 9, 16, 25];</span><br><span class="line">var over18 = numbers.filter(myFunction);</span><br><span class="line">function myFunction(value) &#123;</span><br><span class="line">  return value &gt; 18;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Array.reduce()</li></ul><p>这个例子确定数组中所有数的总和：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var numbers1 = [45, 4, 9, 16, 25];</span><br><span class="line">var sum = numbers1.reduce(myFunction);</span><br><span class="line"></span><br><span class="line">function myFunction(total, value) &#123;</span><br><span class="line">  return total + value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Array.reduceRight()</li></ul><p>这个例子同样是确定数组中所有数的总和：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var numbers1 = [45, 4, 9, 16, 25];</span><br><span class="line">var sum = numbers1.reduceRight(myFunction);</span><br><span class="line"></span><br><span class="line">function myFunction(total, value) &#123;</span><br><span class="line">  return total + value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Array.every()</li></ul><p>这个例子检查是否所有值都超过18：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var numbers = [45, 4, 9, 16, 25];</span><br><span class="line">var allOver18 = numbers.every(myFunction);</span><br><span class="line"></span><br><span class="line">function myFunction(value) &#123;</span><br><span class="line">  return value &gt; 18;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Array.some()</li></ul><p>这个例子检查某些值是否超过18：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var numbers = [45, 4, 9, 16, 25];</span><br><span class="line">var allOver18 = numbers.some(myFunction);</span><br><span class="line"></span><br><span class="line">function myFunction(value) &#123;</span><br><span class="line">  return value &gt; 18;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Array.indexOf()</li></ul><p>检索数组中的某个元素值并返回其位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</span><br><span class="line">var a = fruits.indexOf(&quot;Apple&quot;);</span><br></pre></td></tr></table></figure><ul><li>JSON.parse()</li></ul><p>JSON的一个常见用途是从Web服务器接收数据。想象一下，您从Web服务器收到这条文本字符串：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&apos;&#123;&quot;name&quot;:&quot;Bill&quot;, &quot;age&quot;:62, &quot;city&quot;:&quot;Seatle&quot;&#125;&apos;</span><br><span class="line">JavaScript 函数 JSON.parse() 用于将文本转换为 JavaScript 对象：</span><br><span class="line">var obj = JSON.parse(&apos;&#123;&quot;name&quot;:&quot;Bill&quot;, &quot;age&quot;:62, &quot;city&quot;:&quot;Seatle&quot;&#125;&apos;);</span><br></pre></td></tr></table></figure><ul><li>JSON.stringify()</li></ul><p>JSON的一个常见用途是将数据发送到Web服务器。将数据发送到Web服务器时，数据必须是字符串。想象一下，我们在JavaScript中有这个对象：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var obj = &#123;&quot;name&quot;:&quot;Bill&quot;, &quot;age&quot;:62, &quot;city&quot;:&quot;Seatle&quot;&#125;;</span><br><span class="line">请使用 JavaScript 函数 JSON.stringify() 将其转换为字符串。</span><br><span class="line"></span><br><span class="line">var myJSON = JSON.stringify(obj);</span><br><span class="line">结果将是遵循 JSON 表示法的字符串。</span><br><span class="line"></span><br><span class="line">myJSON 现在是一个字符串，准备好发送到服务器：</span><br><span class="line">var obj = &#123;&quot;name&quot;:&quot;Bill&quot;, &quot;age&quot;:62, &quot;city&quot;:&quot;Seatle&quot;&#125;;</span><br><span class="line">var myJSON = JSON.stringify(obj);</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML = myJSON;</span><br></pre></td></tr></table></figure><ul><li>Date.now()</li></ul><p>Date.now()返回自零日期(1970年1月1日 00:00:00:00)以来的毫秒数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var timInMSs = Date.now();</span><br></pre></td></tr></table></figure><ul><li>属性Getter和Setter</li></ul><p>ES5允许您使用类似于获取或设置属性的语法来定义对象方法。这个例子为名为fullName的属性创建一个getter:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 创建对象：</span><br><span class="line">var person = &#123;</span><br><span class="line">  firstName: &quot;Bill&quot;,</span><br><span class="line">  lastName : &quot;Gates&quot;,</span><br><span class="line">  get fullName() &#123;</span><br><span class="line">    return this.firstName + &quot; &quot; + this.lastName;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">// 使用 getter 显示来自对象的数据：</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML = person.fullName;</span><br></pre></td></tr></table></figure><p>这个例子为语言属性创建一个setter和一个getter：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var person = &#123;</span><br><span class="line">  firstName: &quot;Bill&quot;,</span><br><span class="line">  lastName : &quot;Gates&quot;,</span><br><span class="line">  language : &quot;NO&quot;,</span><br><span class="line">  get lang() &#123;</span><br><span class="line">    return this.language;</span><br><span class="line">  &#125;,</span><br><span class="line">  set lang(value) &#123;</span><br><span class="line">    this.language = value;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">// 使用 setter 设置对象属性：</span><br><span class="line">person.lang = &quot;en&quot;;</span><br><span class="line">// 使用 getter 显示来自对象的数据：</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML = person.lang;</span><br></pre></td></tr></table></figure><p>这个例子使用 setter 来确保语言的大写更新：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var person = &#123;</span><br><span class="line">  firstName: &quot;Bill&quot;,</span><br><span class="line">  lastName : &quot;Gates&quot;,</span><br><span class="line">  language : &quot;NO&quot;,</span><br><span class="line">  set lang(value) &#123;</span><br><span class="line">    this.language = value.toUpperCase();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">// 使用 setter 设置对象属性：</span><br><span class="line">person.lang = &quot;en&quot;;</span><br><span class="line">// 显示来自对象的数据：</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML = person.language;</span><br></pre></td></tr></table></figure><ul><li>新的对象属性和方法</li></ul><p>Object.defineProperty()是ES5中的新对象方法。它允许您定义对象属性和/或更改属性的值和/或元数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// 创建对象：</span><br><span class="line">var person = &#123;</span><br><span class="line">  firstName: &quot;Bill&quot;,</span><br><span class="line">  lastName : &quot;Gates&quot;,</span><br><span class="line">  language : &quot;NO&quot;, </span><br><span class="line">&#125;;</span><br><span class="line">// 更改属性：</span><br><span class="line">Object.defineProperty(person, &quot;language&quot;, &#123;</span><br><span class="line">  value: &quot;EN&quot;,</span><br><span class="line">  writable : true,</span><br><span class="line">  enumerable : true,</span><br><span class="line">  configurable : true</span><br><span class="line">&#125;);</span><br><span class="line">// 枚举属性</span><br><span class="line">var txt = &quot;&quot;;</span><br><span class="line">for (var x in person) &#123;</span><br><span class="line">  txt += person[x] + &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML = txt;</span><br></pre></td></tr></table></figure><ul><li>ECMAScript5为JavaScript添加了许多新的对象方法：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">ES5 新的对象方法</span><br><span class="line"></span><br><span class="line">// 添加或更改对象属性</span><br><span class="line">Object.defineProperty(object, property, descriptor)</span><br><span class="line"></span><br><span class="line">// 添加或更改多个对象属性</span><br><span class="line">Object.defineProperties(object, descriptors)</span><br><span class="line"></span><br><span class="line">// 访问属性</span><br><span class="line">Object.getOwnPropertyDescriptor(object, property)</span><br><span class="line"></span><br><span class="line">// 将所有属性作为数组返回</span><br><span class="line">Object.getOwnPropertyNames(object)</span><br><span class="line"></span><br><span class="line">// 将可枚举属性作为数组返回</span><br><span class="line">Object.keys(object)</span><br><span class="line"></span><br><span class="line">// 访问原型</span><br><span class="line">Object.getPrototypeOf(object)</span><br><span class="line"></span><br><span class="line">// 防止向对象添加属性</span><br><span class="line">Object.preventExtensions(object)</span><br><span class="line"></span><br><span class="line">// 如果可以将属性添加到对象，则返回 true</span><br><span class="line">Object.isExtensible(object)</span><br><span class="line"></span><br><span class="line">// 防止更改对象属性（而不是值）</span><br><span class="line">Object.seal(object)</span><br><span class="line"></span><br><span class="line">// 如果对象被密封，则返回 true</span><br><span class="line">Object.isSealed(object)</span><br><span class="line"></span><br><span class="line">// 防止对对象进行任何更改</span><br><span class="line">Object.freeze(object)</span><br><span class="line"></span><br><span class="line">// 如果对象被冻结，则返回 true</span><br><span class="line">Object.isFrozen(object)</span><br></pre></td></tr></table></figure><ul><li>对字符串的属性访问</li></ul><p>charAt()方法返回字符串中指定索引(位置)的字符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var str = &quot;HELLO WORLD&quot;;</span><br><span class="line">str.charAt(0);            // 返回 H</span><br></pre></td></tr></table></figure><ul><li>ECMAScript 5允许对字符串进行属性访问：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var str = &quot;HELLO WORLD&quot;;</span><br><span class="line">str[0];                   // 返回 H</span><br></pre></td></tr></table></figure><ul><li>尾随逗号(Trailing Commas)</li></ul><p>ECMAScript 5 允许在对象和数组定义中使用尾随逗号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Object 实例</span><br><span class="line">person = &#123;</span><br><span class="line">  firstName: &quot;Bill&quot;,</span><br><span class="line">  lastName: &quot; Gates&quot;,</span><br><span class="line">  age: 62,</span><br><span class="line">&#125;</span><br><span class="line">Array 实例</span><br><span class="line">points = [</span><br><span class="line">  1,</span><br><span class="line">  5,</span><br><span class="line">  10,</span><br><span class="line">  25,</span><br><span class="line">  40,</span><br><span class="line">  100,</span><br><span class="line">];</span><br><span class="line">JSON 不允许使用尾随逗号。</span><br></pre></td></tr></table></figure><ul><li>JSON 对象：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 允许：</span><br><span class="line">var person = &apos;&#123;&quot;firstName&quot;:&quot;Bill&quot;, &quot;lastName&quot;:&quot;Gates&quot;, &quot;age&quot;:62&#125;&apos;</span><br><span class="line">JSON.parse(person)</span><br><span class="line"></span><br><span class="line">// 不允许：</span><br><span class="line">var person = &apos;&#123;&quot;firstName&quot;:&quot;Bill&quot;, &quot;lastName&quot;:&quot;Gates&quot;, &quot;age&quot;:62,&#125;&apos;</span><br><span class="line">JSON.parse(person)</span><br><span class="line">JSON 数组：</span><br><span class="line">// 允许：</span><br><span class="line">points = [40, 100, 1, 5, 25, 10]</span><br><span class="line"></span><br><span class="line">// 不允许：</span><br><span class="line">points = [40, 100, 1, 5, 25, 10,]</span><br></pre></td></tr></table></figure><ul><li>多行字符串</li></ul><p>如果使用反斜杠转义，ECMAScript 5 允许多行的字符串文字（字面量）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;Hello \</span><br><span class="line">Kitty!&quot;;</span><br></pre></td></tr></table></figure><p>\ 方法可能没有得到普遍的支持。较旧的浏览器可能会以不同的方式处理反斜杠周围的空格。一些旧的浏览器不允许\字符后面的空格。分解字符串文字的一种更安全的方法是使用字符串添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;Hello &quot; + </span><br><span class="line">&quot;Kitty!&quot;;</span><br></pre></td></tr></table></figure><ul><li>保留字作为属性名称</li></ul><p>ECMAScript 5允许保留字作为属性名称：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var obj = &#123;name: &quot;Bill&quot;, new: &quot;yes&quot;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ECMAScript5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ECMAScript5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bootstrap4(6)</title>
      <link href="/2019/10/16/2019-09-23-bootstrap4-6/"/>
      <url>/2019/10/16/2019-09-23-bootstrap4-6/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="bootstrap4"><a href="#bootstrap4" class="headerlink" title="bootstrap4"></a>bootstrap4</h1><h2 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h2><p>创建一个简单的水平导航栏，可以在ul元素上添加.nav类，在每个li选项上添加.nav-item类，在每个链接上添加.nav-link类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;nav&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link disabled&quot; href=&quot;#&quot;&gt;Disabled&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>导航对齐方式</li></ul><p>.justify-content-center类设置导航居中显示，.justify-content-end类设置导航右对齐。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 导航居中 --&gt;</span><br><span class="line">&lt;ul class=&quot;nav justify-content-center&quot;&gt;</span><br><span class="line">&lt;!-- 导航右对齐 --&gt;</span><br><span class="line">&lt;ul class=&quot;nav justify-content-end&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>垂直导航</li></ul><p>.flex-column 类用于创建垂直导航：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;nav flex-column&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>选项卡</li></ul><p>使用.nav-tabs 类可以将导航转化为选项卡。然后对于选中的选项使用 .active 类来标记。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;nav nav-tabs&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link active&quot; href=&quot;#&quot;&gt;Active&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link disabled&quot; href=&quot;#&quot;&gt;Disabled&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>胶囊导航</li></ul><p>.nav-pills类可以将导航项设置成胶囊形状。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;nav nav-pills&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link active&quot; href=&quot;#&quot;&gt;Active&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link disabled&quot; href=&quot;#&quot;&gt;Disabled&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>导航等宽</li></ul><p>.nav-justified 类可以设置导航项齐行等宽显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;nav nav-pills nav-justified&quot;&gt;..&lt;/ul&gt;</span><br><span class="line">&lt;ul class=&quot;nav nav-tabs nav-justified&quot;&gt;..&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>胶囊下拉菜单</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;nav nav-pills&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link active&quot; href=&quot;#&quot;&gt;Active&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item dropdown&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; href=&quot;#&quot;&gt;Dropdown&lt;/a&gt;</span><br><span class="line">    &lt;div class=&quot;dropdown-menu&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Link 1&lt;/a&gt;</span><br><span class="line">      &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Link 2&lt;/a&gt;</span><br><span class="line">      &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Link 3&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link disabled&quot; href=&quot;#&quot;&gt;Disabled&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>选项卡下拉菜单</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;nav nav-tabs&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link active&quot; href=&quot;#&quot;&gt;Active&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item dropdown&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; href=&quot;#&quot;&gt;Dropdown&lt;/a&gt;</span><br><span class="line">    &lt;div class=&quot;dropdown-menu&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Link 1&lt;/a&gt;</span><br><span class="line">      &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Link 2&lt;/a&gt;</span><br><span class="line">      &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Link 3&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link disabled&quot; href=&quot;#&quot;&gt;Disabled&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>动态选项卡</li></ul><p>如果你要设置选项卡是动态可切换的，可以在每个链接上添加data-toggle=”tab”属性。然后在每个选项对应的内容的上添加.tab-pane类。<br>如果你希望有淡入效果可以在.tab-pane后添加.fade类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Nav tabs --&gt;</span><br><span class="line">&lt;ul class=&quot;nav nav-tabs&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link active&quot; data-toggle=&quot;tab&quot; href=&quot;#home&quot;&gt;Home&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link&quot; data-toggle=&quot;tab&quot; href=&quot;#menu1&quot;&gt;Menu 1&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link&quot; data-toggle=&quot;tab&quot; href=&quot;#menu2&quot;&gt;Menu 2&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"> </span><br><span class="line">&lt;!-- Tab panes --&gt;</span><br><span class="line">&lt;div class=&quot;tab-content&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;tab-pane active container&quot; id=&quot;home&quot;&gt;...&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;tab-pane container&quot; id=&quot;menu1&quot;&gt;...&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;tab-pane container&quot; id=&quot;menu2&quot;&gt;...&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>胶囊状动态选项卡</li></ul><p>胶囊状动态选项卡只需要将以上实例的代码中data-toggle属性设置为data-toggle=”pill”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Nav pills --&gt;</span><br><span class="line">&lt;ul class=&quot;nav nav-pills&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link active&quot; data-toggle=&quot;pill&quot; href=&quot;#home&quot;&gt;Home&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link&quot; data-toggle=&quot;pill&quot; href=&quot;#menu1&quot;&gt;Menu 1&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;nav-link&quot; data-toggle=&quot;pill&quot; href=&quot;#menu2&quot;&gt;Menu 2&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"> </span><br><span class="line">&lt;!-- Tab panes --&gt;</span><br><span class="line">&lt;div class=&quot;tab-content&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;tab-pane active container&quot; id=&quot;home&quot;&gt;...&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;tab-pane container&quot; id=&quot;menu1&quot;&gt;...&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;tab-pane container&quot; id=&quot;menu2&quot;&gt;...&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h2><p>导航栏一般放在页面的顶部。我们可以使用.navbar类来创建一个标准的导航栏，后面紧跟:.navbar-expand-xl|lg|md|sm 类来创建响应式的导航栏 (大屏幕水平铺开，小屏幕垂直堆叠)。<br>导航栏上的选项可以使用ul元素并添加class=”navbar-nav”类。然后在li元素上添加.nav-item类，a元素上使用.nav-link类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav class=&quot;navbar navbar-expand-sm bg-light&quot;&gt;</span><br><span class="line">  &lt;ul class=&quot;navbar-nav&quot;&gt;</span><br><span class="line">    &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link 1&lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link 2&lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link 3&lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt; </span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><ul><li>垂直导航栏</li></ul><p>通过删除.navbar-expand-xl/lg/md/sm类来创建垂直导航栏。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav class=&quot;navbar bg-light&quot;&gt;</span><br><span class="line">  &lt;ul class=&quot;navbar-nav&quot;&gt;</span><br><span class="line">    &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link 1&lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link 2&lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link 3&lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt; </span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><ul><li>不同颜色导航栏</li></ul><p>可以使用以下类来创建不同颜色导航栏:.bg-primary,.bg-success,.bg-info,.bg-warning,.bg-danger,.bg-secondary,.bg-dark和.bg-light)。<br>提示: 对于暗色背景需要设置文本颜色为浅色的，对于浅色背景需要设置文本颜色为深色的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 灰底黑字 --&gt;</span><br><span class="line">&lt;nav class=&quot;navbar navbar-expand-sm bg-light navbar-light&quot;&gt;</span><br><span class="line">  &lt;ul class=&quot;navbar-nav&quot;&gt;</span><br><span class="line">    &lt;li class=&quot;nav-item active&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Active&lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;nav-link disabled&quot; href=&quot;#&quot;&gt;Disabled&lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><ul><li>品牌/Logo</li></ul><p>.navbar-brand类用于高亮显示品牌/Logo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav class=&quot;navbar navbar-expand-sm bg-dark navbar-dark&quot;&gt;</span><br><span class="line">  &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Logo&lt;/a&gt;</span><br><span class="line">  ...</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><p>如果使用图片，可以使用 .navbar-brand 类来设置图片自适应导航栏。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav class=&quot;navbar navbar-expand-sm bg-dark navbar-dark&quot;&gt;</span><br><span class="line">   &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;</span><br><span class="line">    &lt;img src=&quot;bird.jpg&quot; alt=&quot;Logo&quot; style=&quot;width:40px;&quot;&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">  ...</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><ul><li>折叠导航栏</li></ul><p>通常，小屏幕上我们都会折叠导航栏，通过点击来显示导航选项。要创建折叠导航栏，可以在按钮上添加class=”navbar-toggler”,data-toggle=”collapse”与data-target=”#thetarget”类。然后在设置了class=”collapsenavbar-collapse” 类的div上包裹导航内容(链接）,div元素上的id匹配按钮data-target的上指定的id.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav class=&quot;navbar navbar-expand-md bg-dark navbar-dark&quot;&gt;</span><br><span class="line">  &lt;!-- Brand --&gt;</span><br><span class="line">  &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Navbar&lt;/a&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;!-- Toggler/collapsibe Button --&gt;</span><br><span class="line">  &lt;button class=&quot;navbar-toggler&quot; type=&quot;button&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#collapsibleNavbar&quot;&gt;</span><br><span class="line">    &lt;span class=&quot;navbar-toggler-icon&quot;&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;!-- Navbar links --&gt;</span><br><span class="line">  &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;collapsibleNavbar&quot;&gt;</span><br><span class="line">    &lt;ul class=&quot;navbar-nav&quot;&gt;</span><br><span class="line">      &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">        &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">        &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;li class=&quot;nav-item&quot;&gt;</span><br><span class="line">        &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;</span><br><span class="line">      &lt;/li&gt; </span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt; </span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> bootstrap4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bootstrap4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用docker安装oracle</title>
      <link href="/2019/10/16/2019-09-29-deepin-xia-oracle-an-zhuang/"/>
      <url>/2019/10/16/2019-09-29-deepin-xia-oracle-an-zhuang/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><ul><li>移除旧版本的 Docker</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker.io</span><br></pre></td></tr></table></figure><ul><li>安装以下软件包以允许apt通过HTTPS使用仓库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apt-transport-https ca-certificates curl</span><br></pre></td></tr></table></figure><ul><li>添加Docker的官方GPG密钥</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><ul><li>验证密钥是不是9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key fingerprint 0EBFCD88</span><br></pre></td></tr></table></figure><ul><li>正确密钥应该如下显示</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pub   4096R/0EBFCD88 2017-02-22</span><br><span class="line">Key fingerprint =9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88</span><br><span class="line">uid                  Docker Release (CE deb) docker@docker.com</span><br><span class="line">sub   4096R/F273FCD8 2017-02-22</span><br></pre></td></tr></table></figure><ul><li>添加 Docker 官方仓库、切换root用户执行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">echo -e &quot;deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian stretch     stable&quot; &gt;&gt; /etc/apt/sources.list</span><br></pre></td></tr></table></figure><ul><li>安装 Docker-CE</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install docker-ce -y</span><br></pre></td></tr></table></figure><h1 id="安装oracle"><a href="#安装oracle" class="headerlink" title="安装oracle"></a>安装oracle</h1><ul><li><p>切换到root账号下，如果是普通账号，下面操作指令前面加sudo</p></li><li><p>搜索oracle镜像</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search oracle</span><br></pre></td></tr></table></figure><ul><li>下载oracle镜像</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/qida/oracle-xe-11g</span><br></pre></td></tr></table></figure><ul><li>查看镜像</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br><span class="line">docker images registry.cn-hangzhou.aliyuncs.com/qida/oracle-xe-11g</span><br></pre></td></tr></table></figure><ul><li>从下载的镜像创建并启动容器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 1521:1521 --name oracle11 registry.cn-hangzhou.aliyuncs.com/qida/oracle-xe-11g</span><br><span class="line">这里把新建的容器命名为oracle11</span><br></pre></td></tr></table></figure><ul><li>查看当前运行的容器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><ul><li>进入已经启动的Oracle的容器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it oracle11 bash</span><br></pre></td></tr></table></figure><ul><li>进入sqlplus</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlplus /nolog</span><br></pre></td></tr></table></figure><ul><li>使用sysdba角色登录sqlplus</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conn sys/oracle as sysdba</span><br></pre></td></tr></table></figure><ul><li>退出sqlplus</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><ul><li>退出容器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit 或Ctrl+D</span><br></pre></td></tr></table></figure><ul><li>重新进入已经运行的oracle容器,重新执行下面指令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it oracle11 bash</span><br></pre></td></tr></table></figure><ul><li>如果容器停用了，则重新启动, 用你实际的容器ID代替下面的container_ID</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start container_ID</span><br></pre></td></tr></table></figure><ul><li>停用正在运行的容器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop container_ID</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> oracle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bootstrap4(5)</title>
      <link href="/2019/10/16/2019-09-22-bootstrap4-5/"/>
      <url>/2019/10/16/2019-09-22-bootstrap4-5/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="bootstrap4"><a href="#bootstrap4" class="headerlink" title="bootstrap4"></a>bootstrap4</h1><h2 id="卡片"><a href="#卡片" class="headerlink" title="卡片"></a>卡片</h2><ul><li>简单的卡片</li></ul><p>我们可以通过.card与.card-body类来创建一个简单的卡片。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;card&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;card-body&quot;&gt;简单的卡片&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>头部和底部</li></ul><p>.card-header类用于创建卡片的头部样式，.card-footer类用于创建卡片的底部样式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;card&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;card-header&quot;&gt;头部&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;card-body&quot;&gt;内容&lt;/div&gt; </span><br><span class="line">  &lt;div class=&quot;card-footer&quot;&gt;底部&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>多种颜色卡片</li></ul><p>提供了多种卡片的背景颜色类：.bg-primary,.bg-success,.bg-info,.bg-warning,.bg-danger,.bg-secondary,.bg-dark和.bg-light。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">  &lt;h2&gt;多种颜色卡片&lt;/h2&gt;</span><br><span class="line">  &lt;div class=&quot;card&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-body&quot;&gt;Basic card&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;div class=&quot;card bg-primary text-white&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-body&quot;&gt;Primary card&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;div class=&quot;card bg-success text-white&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-body&quot;&gt;Success card&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;div class=&quot;card bg-info text-white&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-body&quot;&gt;Info card&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;div class=&quot;card bg-warning text-white&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-body&quot;&gt;Warning card&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;div class=&quot;card bg-danger text-white&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-body&quot;&gt;Danger card&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;div class=&quot;card bg-secondary text-white&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-body&quot;&gt;Secondary card&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;div class=&quot;card bg-dark text-white&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-body&quot;&gt;Dark card&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;div class=&quot;card bg-light text-dark&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-body&quot;&gt;Light card&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>标题、文本和链接</li></ul><p>可以在头部元素上使用.card-title类来设置卡片的标题。.card-text类用于设置卡片正文的内容。.card-link类用于给链接设置颜色。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;card&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;card-body&quot;&gt;</span><br><span class="line">    &lt;h4 class=&quot;card-title&quot;&gt;Card title&lt;/h4&gt;</span><br><span class="line">    &lt;p class=&quot;card-text&quot;&gt;Some example text. Some example text.&lt;/p&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot; class=&quot;card-link&quot;&gt;Card link&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot; class=&quot;card-link&quot;&gt;Another link&lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>图片卡片</li></ul><p>我们可以给img添加.card-img-top（图片在文字上方）或.card-img-bottom（图片在文字下方来设置图片卡片）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;card&quot; style=&quot;width:400px&quot;&gt;</span><br><span class="line">  &lt;img class=&quot;card-img-top&quot; src=&quot;img_avatar1.png&quot; alt=&quot;Card image&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;card-body&quot;&gt;</span><br><span class="line">    &lt;h4 class=&quot;card-title&quot;&gt;John Doe&lt;/h4&gt;</span><br><span class="line">    &lt;p class=&quot;card-text&quot;&gt;Some example text.&lt;/p&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot; class=&quot;btn btn-primary&quot;&gt;See Profile&lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>如果图片要设置为背景，可以使用.card-img-overlay类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;card&quot; style=&quot;width:500px&quot;&gt;</span><br><span class="line">  &lt;img class=&quot;card-img-top&quot; src=&quot;img_avatar1.png&quot; alt=&quot;Card image&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;card-img-overlay&quot;&gt;</span><br><span class="line">    &lt;h4 class=&quot;card-title&quot;&gt;John Doe&lt;/h4&gt;</span><br><span class="line">    &lt;p class=&quot;card-text&quot;&gt;Some example text.&lt;/p&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot; class=&quot;btn btn-primary&quot;&gt;See Profile&lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;dropdown&quot;&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;</span><br><span class="line">    Dropdown button</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">  &lt;div class=&quot;dropdown-menu&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Link 1&lt;/a&gt;</span><br><span class="line">    &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Link 2&lt;/a&gt;</span><br><span class="line">    &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Link 3&lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>.dropdown类用来指定一个下拉菜单。我们可以使用一个按钮或链接来打开下拉菜单，按钮或链接需要添加.dropdown-toggle和data-toggle=”dropdown”属性。div元素上添加.dropdown-menu类来设置实际下拉菜单，然后在下拉菜单的选项中添加.dropdown-item类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;dropdown&quot;&gt;</span><br><span class="line">  &lt;a class=&quot;btn btn-secondary dropdown-toggle&quot; href=&quot;#&quot; role=&quot;button&quot; id=&quot;dropdownMenuLink&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;</span><br><span class="line">    Dropdown link</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;div class=&quot;dropdown-menu&quot; aria-labelledby=&quot;dropdownMenuLink&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Action&lt;/a&gt;</span><br><span class="line">    &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Another action&lt;/a&gt;</span><br><span class="line">    &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Something else here&lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>下拉菜单中的分割线</li></ul><p>.dropdown-divider类用于在下拉菜单中创建一个水平的分割线。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;dropdown-divider&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>下拉菜单中的标题</li></ul><p>.dropdown-header 类用于在下拉菜单中添加标题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;dropdown-header&quot;&gt;Dropdown header 1&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>下拉菜单中的可用项与禁用项</li></ul><p>.active 类会让下拉菜单的选项高亮显示 (添加蓝色背景)。如果要禁用下拉菜单的选项，可以使用.disabled类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;a class=&quot;dropdown-item active&quot; href=&quot;#&quot;&gt;Active&lt;/a&gt;</span><br><span class="line">&lt;a class=&quot;dropdown-item disabled&quot; href=&quot;#&quot;&gt;Disabled&lt;/a&gt;</span><br></pre></td></tr></table></figure><ul><li>下拉菜单的定位</li></ul><p>如果我们想让下拉菜单右对齐，可以在元素上的.dropdown-menu类后添加.dropdown-menu-right类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;dropdown-menu dropdown-menu-right&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>指定方向弹出的下拉菜单</li></ul><p>如果你希望下拉菜单向右弹出，可以在div元素上添加”dropright”类。<br>如果你希望上拉菜单向上弹出，可以在div元素上添加”dropup”类。<br>如果你希望下拉菜单向左弹出，可以在div元素上添加”dropleft”类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;btn-group dropright&quot;&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-secondary dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;</span><br><span class="line">    Dropright</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">  &lt;div class=&quot;dropdown-menu&quot;&gt;</span><br><span class="line">    &lt;!-- Dropdown menu links --&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;!-- Split dropright button --&gt;</span><br><span class="line">&lt;div class=&quot;btn-group dropright&quot;&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-secondary&quot;&gt;</span><br><span class="line">    Split dropright</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-secondary dropdown-toggle dropdown-toggle-split&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;</span><br><span class="line">    &lt;span class=&quot;sr-only&quot;&gt;Toggle Dropright&lt;/span&gt;</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">  &lt;div class=&quot;dropdown-menu&quot;&gt;</span><br><span class="line">    &lt;!-- Dropdown menu links --&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h2><p>折叠可以很容易的实现内容的显示与隐藏。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;button data-toggle=&quot;collapse&quot; data-target=&quot;#demo&quot;&gt;折叠&lt;/button&gt;</span><br><span class="line">&lt;div id=&quot;demo&quot; class=&quot;collapse&quot;&gt;</span><br><span class="line">Lorem ipsum dolor text....</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>.collapse类用于指定一个折叠元素(实例中的div);点击按钮后会在隐藏与显示之间切换。<br>控制内容的隐藏与显示，需要在a或button元素上添加data-toggle=”collapse”属性。data-target=”#id”属性是对应折叠的内容(div id=”demo”)。<br>注意:a元素上你可以使用href属性来代替data-target属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#demo&quot; data-toggle=&quot;collapse&quot;&gt;Collapsible&lt;/a&gt; </span><br><span class="line">&lt;div id=&quot;demo&quot; class=&quot;collapse&quot;&gt;</span><br><span class="line">Lorem ipsum dolor text....</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>默认情况下折叠的内容是隐藏的，你可以添加.show类让内容默认显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;demo&quot; class=&quot;collapse show&quot;&gt;</span><br><span class="line">Lorem ipsum dolor text....</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>以下实例通过扩展卡片组件来显示简单的手风琴。<br>注意:使用data-parent属性来确保所有的折叠元素在指定的父元素下，这样就能实现在一个折叠选项显示时其他选项就隐藏。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;accordion&quot;&gt;</span><br><span class="line">&lt;div class=&quot;card&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;card-header&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;card-link&quot; data-toggle=&quot;collapse&quot; href=&quot;#collapseOne&quot;&gt;</span><br><span class="line">      选项一</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div id=&quot;collapseOne&quot; class=&quot;collapse show&quot; data-parent=&quot;#accordion&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-body&quot;&gt;</span><br><span class="line">      #1 内容：菜鸟教程 -- 学的不仅是技术，更是梦想！！！</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;card&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;card-header&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;collapsed card-link&quot; data-toggle=&quot;collapse&quot; href=&quot;#collapseTwo&quot;&gt;</span><br><span class="line">    选项二</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div id=&quot;collapseTwo&quot; class=&quot;collapse&quot; data-parent=&quot;#accordion&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-body&quot;&gt;</span><br><span class="line">      #2 内容：菜鸟教程 -- 学的不仅是技术，更是梦想！！！</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;card&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;card-header&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;collapsed card-link&quot; data-toggle=&quot;collapse&quot; href=&quot;#collapseThree&quot;&gt;</span><br><span class="line">      选项三</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div id=&quot;collapseThree&quot; class=&quot;collapse&quot; data-parent=&quot;#accordion&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-body&quot;&gt;</span><br><span class="line">      #3 内容：菜鸟教程 -- 学的不仅是技术，更是梦想！！！</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> bootstrap4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bootstrap4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bootstrap4(4)</title>
      <link href="/2019/10/16/2019-09-21-bootstrap4-4/"/>
      <url>/2019/10/16/2019-09-21-bootstrap4-4/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="bootstrap4"><a href="#bootstrap4" class="headerlink" title="bootstrap4"></a>bootstrap4</h1><h2 id="进度条"><a href="#进度条" class="headerlink" title="进度条"></a>进度条</h2><p>创建一个基本的进度条的步骤如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">添加一个带有 .progress 类的 &lt;div&gt;。</span><br><span class="line">接着，在上面的&lt;div&gt;内，添加一个带有.progress-bar类的空的&lt;div&gt;。</span><br><span class="line">添加一个带有百分比表示的宽度的style属性，例如style=&quot;width:70%&quot;表示进度条在70%的位置。</span><br><span class="line">&lt;div class=&quot;progress&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;progress-bar&quot; style=&quot;width:70%&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>进度条高度</li></ul><p>进度条高度默认为16px。我们可以使用CSS的height属性来修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;progress&quot; style=&quot;height:20px;&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;progress-bar&quot; style=&quot;width:40%;&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>进度条标签</li></ul><p>可以在进度条内添加文本，如进度的百分比：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;progress&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;progress-bar&quot; style=&quot;width:70%&quot;&gt;70%&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>不同颜色的进度条</li></ul><p>默认情况下进度条为蓝色，Bootstrap4还提供了以下颜色的进度条。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;progress&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;progress-bar bg-success&quot; style=&quot;width:40%&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div class=&quot;progress&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;progress-bar bg-info&quot; style=&quot;width:50%&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div class=&quot;progress&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;progress-bar bg-warning&quot; style=&quot;width:60%&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div class=&quot;progress&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;progress-bar bg-danger&quot; style=&quot;width:70%&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>条纹的进度条</li></ul><p>可以使用.progress-bar-striped类来设置条纹进度条。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;progress&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;progress-bar progress-bar-striped&quot; style=&quot;width:40%&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>动画进度条</li></ul><p>使用.progress-bar-animated类可以为进度条添加动画。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;progress-bar progress-bar-striped progress-bar-animated&quot; style=&quot;width: 40%&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>混合色彩进度条</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;progress&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;progress-bar bg-success&quot; style=&quot;width:40%&quot;&gt;</span><br><span class="line">    Free Space</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;progress-bar bg-warning&quot; style=&quot;width:10%&quot;&gt;</span><br><span class="line">    Warning</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;progress-bar bg-danger&quot; style=&quot;width:20%&quot;&gt;</span><br><span class="line">    Danger</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h2><p>要创建一个基本的分页可以在ul元素上添加.pagination类。然后在li元素上添加.page-item类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;pagination&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;Previous&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;1&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;2&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;3&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;Next&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>当前页页码状态</li></ul><p>当前页可以使用.active类来高亮显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;pagination&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;Previous&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;1&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item active&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;2&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;3&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;Next&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>不可点击的分页链接</li></ul><p>.disabled类可以设置分页链接不可点击。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;pagination&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;page-item disabled&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;Previous&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;1&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;2&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;3&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;Next&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>分页显示大小</li></ul><p>可以将分页条目设置为不同的大小，.pagination-lg类设置大字体的分页条目，.pagination-sm类设置小字体的分页条目。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;pagination pagination-lg&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;Previous&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;1&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;2&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;3&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;Next&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"> </span><br><span class="line">&lt;ul class=&quot;pagination pagination-sm&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;Previous&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;1&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;2&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;3&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page-link&quot; href=&quot;#&quot;&gt;Next&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>面包屑导航</li></ul><p>.breadcrumb和.breadcrumb-item类用于设置面包屑导航。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;breadcrumb&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;breadcrumb-item&quot;&gt;&lt;a href=&quot;#&quot;&gt;Photos&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;breadcrumb-item&quot;&gt;&lt;a href=&quot;#&quot;&gt;Summer 2017&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;breadcrumb-item&quot;&gt;&lt;a href=&quot;#&quot;&gt;Italy&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;breadcrumb-item active&quot;&gt;Rome&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><h2 id="列表组"><a href="#列表组" class="headerlink" title="列表组"></a>列表组</h2><p>创建列表组，可以在ul元素上添加.list-group类, 在li元素上添加.list-group-item类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;list-group&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item&quot;&gt;First item&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item&quot;&gt;Second item&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item&quot;&gt;Third item&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>激活状态的列表项</li></ul><p>通过添加.active类来设置激活状态的列表项。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;list-group&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item active&quot;&gt;Active item&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item&quot;&gt;Second item&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item&quot;&gt;Third item&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>禁用的列表项</li></ul><p>.disabled类用于设置禁用的列表项。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;list-group&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item disabled&quot;&gt;Disabled item&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item&quot;&gt;Second item&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item&quot;&gt;Third item&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>链接列表项</li></ul><p>要创建一个链接的列表项，可以将ul替换为div，a替换li。如果你想鼠标悬停显示灰色背景就添加.list-group-item-action 类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;list-group&quot;&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;list-group-item list-group-item-action&quot;&gt;First item&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;list-group-item list-group-item-action&quot;&gt;Second item&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;list-group-item list-group-item-action&quot;&gt;Third item&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>多种颜色列表项</li></ul><p>列表项目的颜色可以通过以下列来设置：.list-group-item-success,list-group-item-secondary,list-group-item-info,list-group-item-warning,.list-group-item-danger,list-group-item-dark和list-group-item-light。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;list-group&quot;&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item list-group-item-success&quot;&gt;成功列表项&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item list-group-item-secondary&quot;&gt;次要列表项&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item list-group-item-info&quot;&gt;信息列表项&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item list-group-item-warning&quot;&gt;警告列表项&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item list-group-item-danger&quot;&gt;危险列表项&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item list-group-item-primary&quot;&gt;主要列表项&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item list-group-item-dark&quot;&gt;深灰色列表项&lt;/li&gt;</span><br><span class="line">  &lt;li class=&quot;list-group-item list-group-item-light&quot;&gt;浅色列表项&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>链接的多种颜色列表项</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;list-group&quot;&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;list-group-item list-group-item-action&quot;&gt;激活列表项&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;list-group-item list-group-item-success&quot;&gt;成功列表项&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;list-group-item list-group-item-secondary&quot;&gt;次要列表项&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;list-group-item list-group-item-info&quot;&gt;信息列表项&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;list-group-item list-group-item-warning&quot;&gt;警告列表项&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;list-group-item list-group-item-danger&quot;&gt;危险列表项&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;list-group-item list-group-item-primary&quot;&gt;主要列表项&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;list-group-item list-group-item-dark&quot;&gt;深灰色列表项&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;list-group-item list-group-item-light&quot;&gt;浅色列表项&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> bootstrap4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bootstrap4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bootstrap4(3)</title>
      <link href="/2019/10/16/2019-09-20-bootstrap4-3/"/>
      <url>/2019/10/16/2019-09-20-bootstrap4-3/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="bootstrap4"><a href="#bootstrap4" class="headerlink" title="bootstrap4"></a>bootstrap4</h1><h2 id="信息提示框"><a href="#信息提示框" class="headerlink" title="信息提示框"></a>信息提示框</h2><p>提示框可以使用.alert 类,后面加上.alert-success,.alert-info,.alert-warning,.alert-danger,.alert-primary,.alert-secondary,.alert-light或.alert-dark类来实现。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;alert alert-success&quot;&gt;</span><br><span class="line">  &lt;strong&gt;成功!&lt;/strong&gt; 指定操作成功提示信息。</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>提示框添加链接</li></ul><p>提示框中在链接的标签上添加alert-link类来设置匹配提示框颜色的链接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;alert alert-success&quot;&gt;</span><br><span class="line">  &lt;strong&gt;成功!&lt;/strong&gt; 你应该认真阅读 &lt;a href=&quot;#&quot; class=&quot;alert-link&quot;&gt;这条信息&lt;/a&gt;。</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>关闭提示框</li></ul><p>我们可以在提示框中的div中添加.alert-dismissible类，然后在关闭按钮的链接上添加class=”close”和data-dismiss=”alert”类来设置提示框的关闭操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;alert alert-success alert-dismissible&quot;&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;alert&quot;&gt;&amp;times;&lt;/button&gt;</span><br><span class="line">  &lt;strong&gt;成功!&lt;/strong&gt; 指定操作成功提示信息。</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>提示框动画</li></ul><p>.fade和.show类用于设置提示框在关闭时的淡出和淡入效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;alert alert-danger alert-dismissible fade show&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn&quot;&gt;基本按钮&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;主要按钮&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-secondary&quot;&gt;次要按钮&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-success&quot;&gt;成功&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-info&quot;&gt;信息&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-warning&quot;&gt;警告&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-danger&quot;&gt;危险&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-dark&quot;&gt;黑色&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-light&quot;&gt;浅色&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-link&quot;&gt;链接&lt;/button&gt;</span><br></pre></td></tr></table></figure><p>按钮类可用于 a,button或input元素上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#&quot; class=&quot;btn btn-info&quot; role=&quot;button&quot;&gt;链接按钮&lt;/a&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-info&quot;&gt;按钮&lt;/button&gt;</span><br><span class="line">&lt;input type=&quot;button&quot; class=&quot;btn btn-info&quot; value=&quot;输入框按钮&quot;&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; class=&quot;btn btn-info&quot; value=&quot;提交按钮&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>按钮设置边框</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-outline-primary&quot;&gt;主要按钮&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-outline-secondary&quot;&gt;次要按钮&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-outline-success&quot;&gt;成功&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-outline-info&quot;&gt;信息&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-outline-warning&quot;&gt;警告&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-outline-danger&quot;&gt;危险&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-outline-dark&quot;&gt;黑色&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-outline-light text-dark&quot;&gt;浅色&lt;/button&gt;</span><br></pre></td></tr></table></figure><ul><li>不同大小的按钮</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-lg&quot;&gt;大号按钮&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;默认按钮&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-sm&quot;&gt;小号按钮&lt;/button&gt;</span><br></pre></td></tr></table></figure><ul><li>块级按钮</li></ul><p>通过添加.btn-block类可以设置块级按钮。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-block&quot;&gt;按钮 1&lt;/button&gt;</span><br></pre></td></tr></table></figure><ul><li>激活和禁用的按钮</li></ul><p>按钮可设置为激活或者禁止点击的状态。<br>.active类可以设置按钮是可用的，disabled属性可以设置按钮是不可点击的。注意a元素不支持disabled属性，你可以通过添加.disabled类来禁止链接的点击。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-primary active&quot;&gt;点击后的按钮&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot; disabled&gt;禁止点击的按钮&lt;/button&gt;</span><br><span class="line">&lt;a href=&quot;#&quot; class=&quot;btn btn-primary disabled&quot;&gt;禁止点击的链接&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="按钮组"><a href="#按钮组" class="headerlink" title="按钮组"></a>按钮组</h2><p>可以在div元素上添加.btn-group类来创建按钮组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;btn-group&quot;&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Apple&lt;/button&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Samsung&lt;/button&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Sony&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>我们可以使用.btn-group-lg/sm类来设置按钮组的大小。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;btn-group btn-group-lg&quot;&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Apple&lt;/button&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Samsung&lt;/button&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Sony&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>垂直按钮组</li></ul><p>可以使用.btn-group-vertical类来创建垂直的按钮组：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;btn-group-vertical&quot;&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Apple&lt;/button&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Samsung&lt;/button&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Sony&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>内嵌按钮组及下拉菜单</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;btn-group&quot;&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Apple&lt;/button&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Samsung&lt;/button&gt;</span><br><span class="line">  &lt;div class=&quot;btn-group&quot;&gt;</span><br><span class="line">    &lt;button type=&quot;button&quot; class=&quot;btn btn-primary dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;</span><br><span class="line">       Sony</span><br><span class="line">    &lt;/button&gt;</span><br><span class="line">    &lt;div class=&quot;dropdown-menu&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Tablet&lt;/a&gt;</span><br><span class="line">      &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Smartphone&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>拆分按钮下拉菜单</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;btn-group&quot;&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Sony&lt;/button&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary dropdown-toggle dropdown-toggle-split&quot; data-toggle=&quot;dropdown&quot;&gt;</span><br><span class="line">    &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">  &lt;div class=&quot;dropdown-menu&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Tablet&lt;/a&gt;</span><br><span class="line">    &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Smartphone&lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>垂直按钮组及下拉菜单</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;btn-group-vertical&quot;&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Apple&lt;/button&gt;</span><br><span class="line">  &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;Samsung&lt;/button&gt;</span><br><span class="line">  &lt;div class=&quot;btn-group&quot;&gt;</span><br><span class="line">    &lt;button type=&quot;button&quot; class=&quot;btn btn-primary dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;</span><br><span class="line">       Sony</span><br><span class="line">    &lt;/button&gt;</span><br><span class="line">    &lt;div class=&quot;dropdown-menu&quot;&gt;</span><br><span class="line">      &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Tablet&lt;/a&gt;</span><br><span class="line">      &lt;a class=&quot;dropdown-item&quot; href=&quot;#&quot;&gt;Smartphone&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="徽章（Badges）"><a href="#徽章（Badges）" class="headerlink" title="徽章（Badges）"></a>徽章（Badges）</h2><p>徽章(Badges）主要用于突出显示新的或未读的项。如需使用徽章，只需要将.badge类加上带有指定意义的颜色类(如.badge-secondary)添加到span元素上即可。徽章可以根据父元素的大小的变化而变化。</p><ul><li>各种颜色类型的徽章</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=&quot;badge badge-primary&quot;&gt;主要&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;badge badge-secondary&quot;&gt;次要&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;badge badge-success&quot;&gt;成功&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;badge badge-danger&quot;&gt;危险&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;badge badge-warning&quot;&gt;警告&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;badge badge-info&quot;&gt;信息&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;badge badge-light&quot;&gt;浅色&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;badge badge-dark&quot;&gt;深色&lt;/span&gt;</span><br></pre></td></tr></table></figure><ul><li>药丸形状徽章</li></ul><p>使用.badge-pill类来设置药丸形状徽章</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=&quot;badge badge-pill badge-default&quot;&gt;默认&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;badge badge-pill badge-primary&quot;&gt;主要&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;badge badge-pill badge-success&quot;&gt;成功&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;badge badge-pill badge-info&quot;&gt;信息&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;badge badge-pill badge-warning&quot;&gt;警告&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;badge badge-pill badge-danger&quot;&gt;危险&lt;/span&gt;</span><br></pre></td></tr></table></figure><ul><li>徽章插入到元素内</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;&gt;</span><br><span class="line">  Messages &lt;span class=&quot;badge badge-light&quot;&gt;4&lt;/span&gt;</span><br><span class="line">&lt;/button&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> bootstrap4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bootstrap4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阶段感悟</title>
      <link href="/2019/10/16/2019-09-19-xiong-di-hui-jie-duan-gan-wu/"/>
      <url>/2019/10/16/2019-09-19-xiong-di-hui-jie-duan-gan-wu/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="初步认识"><a href="#初步认识" class="headerlink" title="初步认识"></a>初步认识</h1><p>  来到兄弟会已经一个多月了，在这段时间里，我们不仅仅是学习到了相关的技术知识点，也明白了兄弟的含义。</p><p>  当我知道有兄弟会的报名时，我并不太清楚它具体的是干什么的，与就业班有什么差异。在经过班主任的解释后，我知道了兄弟会是更贴近企业的，它是要求学员能够自主学习，不是像就业班的老师硬生生地灌输知识。当大多数学员都不会时，教练才会出来给我们讲解，如果有一个学员会，那么其他的学员就必须向他学习地去解决问题。</p><h1 id="进入兄弟会"><a href="#进入兄弟会" class="headerlink" title="进入兄弟会"></a>进入兄弟会</h1><p>  在经过简单的考核后，我来到了兄弟会。因为是沈阳刚刚建立的培养机制，之前并没有这种班级，所以我们见到了从北京来的东哥。在兄弟会的第一天，我们需要自己安装Ubuntu操作系统，没有装过系统的，就只能百度一下，但是由于我们笔记本的品牌不同，所以我们的安装流程也有一些小小的差异。有那么几个遇到一点问题就退缩了，没有坚持一下。其实如果真的自己解决不了，我相信教练会帮助我们的。</p><p>  在刚来的一个星期里，我们渐渐地适应了自学的环境，我们有了一点松懈，教练看了出来，就和班组长商量拉练一下我们，然后我们就被安排了一下。在之后的三天里，我就感觉成了一个废人，腰也伸不直，手也太不高，太难了！</p><h1 id="现在为止"><a href="#现在为止" class="headerlink" title="现在为止"></a>现在为止</h1><p>  在这一个多月里，我们学习了linux命令、git命令、vim、markdown、node.js、HTML、jquery、JavaScript、css、bootstrap、vue等知识。<br>  每学习完一个知识点，我们都会有相应的考试，有的是上机，有的是笔试。我们也在自主学习的过程中，遇到很多不同的问题，我们也知道如何去自主地去解决，实在不行就和小伙伴一起解决，再不行就求助于教练。我就碰到了一个问题，就是我电脑的无线网不显示，也就是设置里没有WiFi，在搜索相关的问题后，我解决了它。在解决问题后我非常地兴奋与激动，这种感觉让我至今难忘。<br>  目前，我们建立了自己的博客，做了一个简单的网页聊天室，铺了几个简单的淘宝页面（就是看着像的那一种）。现在我们在按着教学大纲接着往下走。</p><h1 id="体会"><a href="#体会" class="headerlink" title="体会"></a>体会</h1><p>  来到兄弟会之后，我学会了自主学习，也学会了团队合作。因为我们在完成任务时，一个人是完成不来的，在此期间遇到的问题有时一个人也是解决不了的。还有一点，分享是非常重要的，我们不仅要自己学得好，也要与人分享，让别人也学得好。<br>  我相信在完成兄弟会的学习之后，我们一定有足够的实力去解决我们的高新就业的问题。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bootstrap4(2)</title>
      <link href="/2019/10/16/2019-09-19-bootstrap4-2/"/>
      <url>/2019/10/16/2019-09-19-bootstrap4-2/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="bootstrap4"><a href="#bootstrap4" class="headerlink" title="bootstrap4"></a>bootstrap4</h1><h2 id="文字排版"><a href="#文字排版" class="headerlink" title="文字排版"></a>文字排版</h2><ul><li>更多排版类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">.font-weight-bold       加粗文本  </span><br><span class="line">.font-weight-normal     普通文本</span><br><span class="line">.font-weight-light      更细的文本</span><br><span class="line">.font-italic            斜体文本  </span><br><span class="line">.lead                   让段落更突出</span><br><span class="line">.small                  指定更小文本(为父元素的85%)</span><br><span class="line">.text-left              左对齐</span><br><span class="line">.text-center            居中</span><br><span class="line">.text-right             右对齐</span><br><span class="line">.text-justify           设定文本对齐,段落中超出屏幕部分文字自动换行</span><br><span class="line">.text-nowrap            段落中超出屏幕部分不换行</span><br><span class="line">.text-lowercase         设定文本小写</span><br><span class="line">.text-uppercase         设定文本大写</span><br><span class="line">.text-capitalize        设定单词首字母大写</span><br><span class="line">.initialism             显示在 &lt;abbr&gt; 元素中的文本以小号字体展示，且可以将小写字母转换为大写字母</span><br><span class="line">.list-unstyled          移除默认的列表样式，列表项中左对齐(&lt;ul&gt;和&lt;ol&gt;中，如果需要移除嵌套的列表项，你需要在嵌套的列表中使用该样式)</span><br><span class="line">.list-inline            将所有列表项放置同一行 尝试一下</span><br><span class="line">.pre-scrollable         使&lt;pre&gt;元素可滚动，代码块区域最大高度为340px,一旦超出这个高度,就会在Y轴出现滚动条</span><br></pre></td></tr></table></figure><h2 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h2><ul><li>文本颜色</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">  &lt;h2&gt;代表指定意义的文本颜色&lt;/h2&gt;</span><br><span class="line">  &lt;p class=&quot;text-muted&quot;&gt;柔和的文本。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;text-primary&quot;&gt;重要的文本。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;text-success&quot;&gt;执行成功的文本。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;text-info&quot;&gt;代表一些提示信息的文本。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;text-warning&quot;&gt;警告文本。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;text-danger&quot;&gt;危险操作文本。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;text-secondary&quot;&gt;副标题。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;text-dark&quot;&gt;深灰色文字。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;text-light&quot;&gt;浅灰色文本（白色背景上看不清楚）。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;text-white&quot;&gt;白色文本（白色背景上看不清楚）。&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>链接颜色</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">  &lt;h2&gt;文本颜色&lt;/h2&gt;</span><br><span class="line">  &lt;p&gt;鼠标移动到链接。&lt;/p&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;text-muted&quot;&gt;柔和的链接。&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;text-primary&quot;&gt;主要链接。&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;text-success&quot;&gt;成功链接。&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;text-info&quot;&gt;信息文本链接。&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;text-warning&quot;&gt;警告链接。&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;text-danger&quot;&gt;危险链接。&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;text-secondary&quot;&gt;副标题链接。&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;text-dark&quot;&gt;深灰色链接。&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#&quot; class=&quot;text-light&quot;&gt;浅灰色链接。&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>背景颜色</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">  &lt;h2&gt;背景颜色&lt;/h2&gt;</span><br><span class="line">  &lt;p class=&quot;bg-primary text-white&quot;&gt;重要的背景颜色。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;bg-success text-white&quot;&gt;执行成功背景颜色。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;bg-info text-white&quot;&gt;信息提示背景颜色。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;bg-warning text-white&quot;&gt;警告背景颜色&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;bg-danger text-white&quot;&gt;危险背景颜色。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;bg-secondary text-white&quot;&gt;副标题背景颜色。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;bg-dark text-white&quot;&gt;深灰背景颜色。&lt;/p&gt;</span><br><span class="line">  &lt;p class=&quot;bg-light text-dark&quot;&gt;浅灰背景颜色。&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="图像形状"><a href="#图像形状" class="headerlink" title="图像形状"></a>图像形状</h2><ul><li>圆角图片</li></ul><p>.rounded类可以让图片显示圆角效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;cinqueterre.jpg&quot; class=&quot;rounded&quot; alt=&quot;Cinque Terre&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>椭圆图片</li></ul><p>.rounded-circle类可以设置椭圆形图片:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;cinqueterre.jpg&quot; class=&quot;rounded-circle&quot; alt=&quot;Cinque Terre&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>缩略图</li></ul><p>.img-thumbnail类用于设置图片缩略图(图片有边框):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;cinqueterre.jpg&quot; class=&quot;img-thumbnail&quot; alt=&quot;Cinque Terre&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>图片对齐方式</li></ul><p>使用.float-right类来设置图片右对齐，使用.float-left类设置图片左对齐:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;paris.jpg&quot; class=&quot;float-left&quot;&gt; </span><br><span class="line">&lt;img src=&quot;cinqueterre.jpg&quot; class=&quot;float-right&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>响应式图片</li></ul><p>可以通过在img标签中添加.img-fluid类来设置响应式图片。.img-fluid类设置了max-width:100%;、height:auto;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img class=&quot;img-fluid&quot; src=&quot;img_chania.jpg&quot; alt=&quot;Chania&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="Jumbotron"><a href="#Jumbotron" class="headerlink" title="Jumbotron"></a>Jumbotron</h2><p>Jumbotron（超大屏幕）会创建一个大的灰色背景框，里面可以设置一些特殊的内容和信息，Jumbotron里头可以放一些HTML标签，也可以是Bootstrap的元素。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;jumbotron&quot;&gt;</span><br><span class="line">  &lt;h1&gt;菜鸟教程&lt;/h1&gt; </span><br><span class="line">  &lt;p&gt;学的不仅是技术，更是梦想！！！&lt;/p&gt; </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>全屏幕的Jumbotron</li></ul><p>如果你想创建一个没有圆角的全屏幕，可以在.jumbotron-fluid类里头的div添加.container或.container-fluid 类来实现。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;jumbotron jumbotron-fluid&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;h1&gt;菜鸟教程&lt;/h1&gt; </span><br><span class="line">    &lt;p&gt;学的不仅是技术，更是梦想！！！&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><ul><li>基础表格</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;table class=&quot;table&quot;&gt;</span><br><span class="line">  &lt;thead&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;th&gt;Firstname&lt;/th&gt;</span><br><span class="line">      &lt;th&gt;Lastname&lt;/th&gt;</span><br><span class="line">      &lt;th&gt;Email&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">  &lt;/thead&gt;</span><br><span class="line">  &lt;tbody&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;td&gt;John&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;Doe&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;john@example.com&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;td&gt;Mary&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;Moe&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;mary@example.com&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">      &lt;td&gt;July&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;Dooley&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;july@example.com&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">  &lt;/tbody&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><ul><li>条纹表格</li></ul><p>通过在table里添加.table-striped 类，您将在tbody内的行上看到条纹。</p><ul><li>带边框表格</li></ul><p>通过在table里添加.table-bordered类可以为表格添加边框。</p><ul><li>鼠标悬停状态表格</li></ul><p>通过在table里添加.table-hover类可以为表格的每一行添加鼠标悬停效果（灰色背景）</p><ul><li><p>黑色背景表格<br>通过在table里添加.table-dark类可以为表格添加黑色背景。</p></li><li><p>黑色条纹表格</p></li></ul><p>通过在table里联合使用.table-dark和.table-striped类可以创建黑色的条纹表格。</p><ul><li>鼠标悬停效果-黑色背景表格</li></ul><p>通过在table里联合使用.table-dark和.table-hover类可以设置黑色背景表格的鼠标悬停效果。</p><ul><li>指定意义的颜色类</li></ul><p>通过指定意义的颜色类可以为表格的行或者单元格设置颜色。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.table-primary  蓝色: 指定这是一个重要的操作</span><br><span class="line">.table-success  绿色: 指定这是一个允许执行的操作</span><br><span class="line">.table-danger 红色: 指定这是可以危险的操作</span><br><span class="line">.table-info 浅蓝色: 表示内容已变更</span><br><span class="line">.table-warning  橘色: 表示需要注意的操作</span><br><span class="line">.table-active 灰色: 用于鼠标悬停效果</span><br><span class="line">.table-secondary  灰色: 表示内容不怎么重要</span><br><span class="line">.table-light  浅灰色，可以是表格行的背景</span><br><span class="line">.table-dark 深灰色，可以是表格行的背景</span><br><span class="line">在tr，td里添加相应的类，表格的行或者单元格会有相应的背景颜色。</span><br></pre></td></tr></table></figure><ul><li>表头颜色</li></ul><p>.thead-dark类用于给表头添加黑色背景，.thead-light类用于给表头添加灰色背景</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;thead class=&quot;thead-dark&quot;&gt;</span><br><span class="line">&lt;thead class=&quot;thead-light&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>较小的表格</li></ul><p>通过在table里.table-sm类用于通过减少内边距来设置较小的表格</p><ul><li>响应式表格</li></ul><p>.table-responsive类用于创建响应式表格：在屏幕宽度小于992px时会创建水平滚动条，如果可视区域宽度大于992px则显示不同效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;table-responsive&quot;&gt;</span><br><span class="line">  &lt;table&gt;...&lt;/table&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>可以通过以下类设定在指定屏幕宽度下显示滚动条</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.table-responsive-sm      &lt; 576px</span><br><span class="line">.table-responsive-md      &lt; 768px</span><br><span class="line">.table-responsive-lg      &lt; 992px</span><br><span class="line">.table-responsive-xl      &lt; 1200px</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> bootstrap4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bootstrap4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bootstrap4(1)</title>
      <link href="/2019/10/16/2019-09-18-bootstrap4-1/"/>
      <url>/2019/10/16/2019-09-18-bootstrap4-1/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="bootstrap4"><a href="#bootstrap4" class="headerlink" title="bootstrap4"></a>bootstrap4</h1><p>网格每一行需要放在设置了.container(固定宽度)或.container-fluid(全屏宽度)类的容器中，这样就可以自动设置一些外边距与内边距。</p><h2 id="栅格系统"><a href="#栅格系统" class="headerlink" title="栅格系统"></a>栅格系统</h2><ul><li>栅格选项</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">超小设备&lt;576px    </span><br><span class="line">.container最大宽度:    None (auto) </span><br><span class="line">类前缀:                 .col- </span><br><span class="line">列数量和                  12</span><br><span class="line">间隙宽度            30px（一个列的每边分别15px）</span><br><span class="line">可嵌套                   Yes</span><br><span class="line">列排序                   Yes</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">平板≥576px  </span><br><span class="line">.container最大宽度:      540px       </span><br><span class="line">类前缀:                .col-sm-   </span><br><span class="line">列数量和                  12</span><br><span class="line">间隙宽度            30px（一个列的每边分别15px）</span><br><span class="line">可嵌套                   Yes</span><br><span class="line">列排序                   Yes</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">桌面显示器≥768px  </span><br><span class="line">.container最大宽度：     720px           </span><br><span class="line">类前缀：               .col-md-         </span><br><span class="line">列数量和                  12</span><br><span class="line">间隙宽度            30px（一个列的每边分别15px）</span><br><span class="line">可嵌套                   Yes</span><br><span class="line">列排序                   Yes</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">大桌面显示器≥992px  </span><br><span class="line">.container最大宽度：     960px            </span><br><span class="line">类前缀：               .col-lg-          </span><br><span class="line">列数量和                  12</span><br><span class="line">间隙宽度            30px（一个列的每边分别15px）</span><br><span class="line">可嵌套                   Yes</span><br><span class="line">列排序                   Yes</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">超大桌面显示器≥1200px</span><br><span class="line">.container最大宽度：      1140px</span><br><span class="line">类前缀：                 .col-xl-</span><br><span class="line">列数量和                   12</span><br><span class="line">间隙宽度             30px（一个列的每边分别15px）</span><br><span class="line">可嵌套                    Yes</span><br><span class="line">列排序                    Yes</span><br></pre></td></tr></table></figure><ul><li>Bootstrap自动布局,创建相等宽度的列</li></ul><p>两个”col”，每个就为50%的宽度。三个”col”每个就为33.33%的宽度，四个”col”每个就为25%的宽度，以此类推。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;row&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;col&quot;&gt;.col&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;col&quot;&gt;.col&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;col&quot;&gt;.col&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>等宽响应式列</li></ul><p>在移动设备上，即屏幕宽度小于576px时，四个列将会上下堆叠排版:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;row&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;col-sm-3&quot;&gt;.col-sm-3&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;col-sm-3&quot;&gt;.col-sm-3&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;col-sm-3&quot;&gt;.col-sm-3&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;col-sm-3&quot;&gt;.col-sm-3&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>不等宽响应式列</li></ul><p>在移动设备上，即屏幕宽度小于576px时，两个列将会上下堆叠排版:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;row&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;col-sm-4&quot;&gt;.col-sm-4&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;col-sm-8&quot;&gt;.col-sm-8&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>平板和桌面端</li></ul><p>在桌面设备的显示器上两个列的宽度各占50%，如果在平板端则左边的宽度为25%，右边的宽度为75%,在移动手机等小型设备上会堆叠显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container-fluid&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;col-sm-3 col-md-6&quot;&gt;</span><br><span class="line">      &lt;p&gt;RUNOOB&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;col-sm-9 col-md-6&quot;&gt;</span><br><span class="line">      &lt;p&gt;菜鸟教程&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>平板、桌面、大桌面显示器、超大桌面显示器</li></ul><p>在平板、桌面、大桌面显示器、超大桌面显示器的宽度比例为分别为：25%/75%、50%/50%、33.33%/66.67%、16.67/83.33%, 在移动手机等小型设备上会堆叠显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;row&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;col-md-9 col-md-push-3&quot;&gt;.col-md-9 .col-md-push-3&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;col-md-3 col-md-pull-9&quot;&gt;.col-md-3 .col-md-pull-9&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">push-3往后退3列，pull-9往前进9列。</span><br></pre></td></tr></table></figure><ul><li>偏移列</li></ul><p>偏移列通过 offset-<em>-</em> 类来设置。第一个星号可以是sm、md、lg、xl，表示屏幕设备类型，第二个星号可以是1到11的数字。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.offset-md-4是把.col-md-4往右移了四列格。</span><br><span class="line">&lt;div class=&quot;row&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;col-md-4&quot;&gt;.col-md-4&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;col-md-4 offset-md-4&quot;&gt;.col-md-4 .offset-md-4&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;row&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;col-md-3 offset-md-3&quot;&gt;.col-md-3 .offset-md-3&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;col-md-3 offset-md-3&quot;&gt;.col-md-3 .offset-md-3&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;row&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;col-md-6 offset-md-3&quot;&gt;.col-md-6 .offset-md-3&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="文字排版"><a href="#文字排版" class="headerlink" title="文字排版"></a>文字排版</h2><p>Bootstrap4默认的font-size为16px, line-height为1.5。<br>默认的font-family为”HelveticaNeue”,Helvetica,Arial,sans-serif。此外，所有的p元素margin-top:0、margin-bottom:1rem（16px)。</p><ul><li>h1-h6</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">  &lt;h1&gt;h1 Bootstrap 标题 (2.5rem = 40px)&lt;/h1&gt;</span><br><span class="line">  &lt;h2&gt;h2 Bootstrap 标题 (2rem = 32px)&lt;/h2&gt;</span><br><span class="line">  &lt;h3&gt;h3 Bootstrap 标题 (1.75rem = 28px)&lt;/h3&gt;</span><br><span class="line">  &lt;h4&gt;h4 Bootstrap 标题 (1.5rem = 24px)&lt;/h4&gt;</span><br><span class="line">  &lt;h5&gt;h5 Bootstrap 标题 (1.25rem = 20px)&lt;/h5&gt;</span><br><span class="line">  &lt;h6&gt;h6 Bootstrap 标题 (1rem = 16px)&lt;/h6&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>Display标题类</li></ul><p>Display 标题可以输出更大更粗的字体样式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">  &lt;h1 class=&quot;display-1&quot;&gt;Display 1&lt;/h1&gt;</span><br><span class="line">  &lt;h1 class=&quot;display-2&quot;&gt;Display 2&lt;/h1&gt;</span><br><span class="line">  &lt;h1 class=&quot;display-3&quot;&gt;Display 3&lt;/h1&gt;</span><br><span class="line">  &lt;h1 class=&quot;display-4&quot;&gt;Display 4&lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>small</li></ul><p>small元素用于创建字号更小的颜色更浅的文本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;      </span><br><span class="line">  &lt;h1&gt;h1 标题 &lt;small&gt;副标题&lt;/small&gt;&lt;/h1&gt;</span><br><span class="line">  &lt;h2&gt;h2 标题 &lt;small&gt;副标题&lt;/small&gt;&lt;/h2&gt;</span><br><span class="line">  &lt;h3&gt;h3 标题 &lt;small&gt;副标题&lt;/small&gt;&lt;/h3&gt;</span><br><span class="line">  &lt;h4&gt;h4 标题 &lt;small&gt;副标题&lt;/small&gt;&lt;/h4&gt;</span><br><span class="line">  &lt;h5&gt;h5 标题 &lt;small&gt;副标题&lt;/small&gt;&lt;/h5&gt;</span><br><span class="line">  &lt;h6&gt;h6 标题 &lt;small&gt;副标题&lt;/small&gt;&lt;/h6&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>mark</li></ul><p>mark为黄色背景及有一定的内边距。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;使用 mark 元素来 &lt;mark&gt;高亮&lt;/mark&gt; 文本。&lt;/p&gt;</span><br></pre></td></tr></table></figure><ul><li>abbr</li></ul><p>abbr元素的样式为显示在文本底部的一条虚线边框。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">  &lt;p&gt;The abbr element is used to mark up an abbreviation or acronym:&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;The &lt;abbr title=&quot;World Health Organization&quot;&gt;WHO&lt;/abbr&gt; was founded in 1948.&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>blockquote</li></ul><p>对于引用的内容可以在blockquote元素上添加.blockquote类。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">  &lt;p&gt;The blockquote element is used to present content from another source:&lt;/p&gt;</span><br><span class="line">  &lt;blockquote class=&quot;blockquote&quot;&gt;</span><br><span class="line">    &lt;p&gt;For 50 years, WWF has been protecting the future of nature. The world&apos;s leading conservation organization, WWF works in 100 countries and is supported by 1.2 million members in the United States and close to 5 million globally.&lt;/p&gt;</span><br><span class="line">    &lt;footer class=&quot;blockquote-footer&quot;&gt;From WWF&apos;s website&lt;/footer&gt;</span><br><span class="line">  &lt;/blockquote&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>dl</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;  </span><br><span class="line">  &lt;p&gt;The dl element indicates a description list:&lt;/p&gt;</span><br><span class="line">  &lt;dl&gt;</span><br><span class="line">    &lt;dt&gt;Coffee&lt;/dt&gt;</span><br><span class="line">    &lt;dd&gt;- black hot drink&lt;/dd&gt;</span><br><span class="line">    &lt;dt&gt;Milk&lt;/dt&gt;</span><br><span class="line">    &lt;dd&gt;- white cold drink&lt;/dd&gt;</span><br><span class="line">  &lt;/dl&gt;     </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>code</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">  &lt;p&gt;以下HTML元素: &lt;code&gt;span&lt;/code&gt;, &lt;code&gt;section&lt;/code&gt;, 和&lt;code&gt;div&lt;/code&gt;用于定义部分文档内容。&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>kbd</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">  &lt;p&gt;To indicate input that is typically entered via the keyboard, use the kbd element:&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;Use &lt;kbd&gt;ctrl + p&lt;/kbd&gt; to open the Print dialog box.&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>pre</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">  &lt;p&gt;For multiple lines of code, use the pre element:&lt;/p&gt;</span><br><span class="line">  &lt;pre&gt;</span><br><span class="line">  Text in a pre element</span><br><span class="line">  is displayed in a fixed-width</span><br><span class="line">  font, and it preserves</span><br><span class="line">  both      spaces and</span><br><span class="line">  line breaks.</span><br><span class="line">  &lt;/pre&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> bootstrap4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bootstrap4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue(2)</title>
      <link href="/2019/10/16/2019-09-17-vue-2/"/>
      <url>/2019/10/16/2019-09-17-vue-2/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="vue指令"><a href="#vue指令" class="headerlink" title="vue指令"></a>vue指令</h1><ul><li>vue-on</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;button v-on:click=&quot;reverseMessage&quot;&gt;反转字符串&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: &apos;Runoob!&apos;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    reverseMessage: function () &#123;</span><br><span class="line">      this.message = this.message.split(&apos;&apos;).reverse().join(&apos;&apos;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>缩写</li></ul><p>v-bind 缩写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 完整语法 --&gt;</span><br><span class="line">&lt;a v-bind:href=&quot;url&quot;&gt;&lt;/a&gt;</span><br><span class="line">&lt;!-- 缩写 --&gt;</span><br><span class="line">&lt;a :href=&quot;url&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>v-on 缩写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 完整语法 --&gt;</span><br><span class="line">&lt;a v-on:click=&quot;doSomething&quot;&gt;&lt;/a&gt;</span><br><span class="line">&lt;!-- 缩写 --&gt;</span><br><span class="line">&lt;a @click=&quot;doSomething&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 阻止单击事件冒泡 --&gt;</span><br><span class="line">&lt;a v-on:click.stop=&quot;doThis&quot;&gt;&lt;/a&gt;</span><br><span class="line">即当前此表签的父标签的点击事件不跟随。</span><br><span class="line"></span><br><span class="line">&lt;!-- 提交事件不再重载页面 --&gt;</span><br><span class="line">&lt;form v-on:submit.prevent=&quot;onSubmit&quot;&gt;&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 修饰符可以串联  --&gt;</span><br><span class="line">&lt;a v-on:click.stop.prevent=&quot;doThat&quot;&gt;&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 只有修饰符 --&gt;</span><br><span class="line">&lt;form v-on:submit.prevent&gt;&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 添加事件侦听器时使用事件捕获模式 --&gt;</span><br><span class="line">&lt;div v-on:click.capture=&quot;doThis&quot;&gt;...&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 只当事件在该元素本身（而不是子元素）触发时触发回调 --&gt;</span><br><span class="line">&lt;div v-on:click.self=&quot;doThat&quot;&gt;...&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- click 事件只能点击一次，2.1.4版本新增 --&gt;</span><br><span class="line">&lt;a v-on:click.once=&quot;doThis&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><h1 id="监听属性"><a href="#监听属性" class="headerlink" title="监听属性"></a>监听属性</h1><p>可以通过watch来响应数据的变化。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id = &quot;app&quot;&gt;</span><br><span class="line">  &lt;p style = &quot;font-size:25px;&quot;&gt;计数器: &#123;&#123; counter &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;button @click = &quot;counter++&quot; style = &quot;font-size:25px;&quot;&gt;点我&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">var vm = new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  data: &#123;</span><br><span class="line">      counter: 1</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">vm.$watch(&apos;counter&apos;, function(nval, oval) &#123;</span><br><span class="line">  alert(&apos;计数器值的变化 :&apos; + oval + &apos; 变为 &apos; + nval + &apos;!&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><ul><li>全局组件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">runoob为组件名，options为配置选项。注册后，我们可以使用标签&lt;runoob&gt;</span><br><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;runoob&gt;&lt;/runoob&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">// 注册</span><br><span class="line">Vue.component(&apos;runoob&apos;, &#123;</span><br><span class="line">  template: &apos;&lt;h1&gt;自定义组件!&lt;/h1&gt;&apos;</span><br><span class="line">&#125;)</span><br><span class="line">// 创建根实例</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>局部组件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">可以在实例选项中注册局部组件，这样组件只能在这个实例中使用。</span><br><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;runoob&gt;&lt;/runoob&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">var Child = &#123;</span><br><span class="line">  template: &apos;&lt;h1&gt;自定义组件!&lt;/h1&gt;&apos;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">// 创建根实例</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    // &lt;runoob&gt; 将只在父模板可用</span><br><span class="line">    &apos;runoob&apos;: Child</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h1><ul><li>v-focus</li></ul><p>注册一个全局指令v-focus,该指令的功能是在页面加载时，元素获得焦点。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Vue.directive(&apos;focus&apos;, &#123;</span><br><span class="line">  // 当绑定元素插入到 DOM 中。</span><br><span class="line">  inserted: function (el) &#123;</span><br><span class="line">    // 聚焦元素</span><br><span class="line">    el.focus()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">// 创建根实例</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>可以在实例使用directives选项来注册局部指令，这样指令只能在这个实例中使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  directives: &#123;</span><br><span class="line">    // 注册一个局部的自定义指令 v-focus</span><br><span class="line">    focus: &#123;</span><br><span class="line">      // 指令的定义</span><br><span class="line">      inserted: function (el) &#123;</span><br><span class="line">        // 聚焦元素</span><br><span class="line">        el.focus()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="钩子"><a href="#钩子" class="headerlink" title="钩子"></a>钩子</h1><ul><li>钩子函数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bind:只调用一次，指令第一次绑定到元素时调用，用这个钩子函数可以定义一个在绑定时执行一次的初始化动作。</span><br><span class="line">inserted:被绑定元素插入父节点时调用（父节点存在即可调用，不必存在于document中）。</span><br><span class="line">update:被绑定元素所在的模板更新时调用，而不论绑定值是否变化。通过比较更新前后的绑定值，可以忽略不必要的模板更新（详细的钩子函数参数见下）。</span><br><span class="line">componentUpdated:被绑定元素所在模板完成一次更新周期时调用。</span><br><span class="line">unbind:只调用一次，指令与元素解绑时调用。</span><br></pre></td></tr></table></figure><ul><li>钩子函数参数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">el:指令所绑定的元素，可以用来直接操作DOM。</span><br><span class="line">binding:一个对象，包含以下属性：</span><br><span class="line">  name:指令名，不包括v-前缀。</span><br><span class="line">  value:指令的绑定值，例如：v-my-directive=&quot;1 + 1&quot;, value的值是2。</span><br><span class="line">  oldValue:指令绑定的前一个值，仅在update和componentUpdated钩子中可用。无论值是否改变都可用。</span><br><span class="line">  expression:绑定值的表达式或变量名。例如v-my-directive=&quot;1 + 1&quot;，expression的值是&quot;1 + 1&quot;。</span><br><span class="line">  arg:传给指令的参数。例如v-my-directive:foo，arg 的值是&quot;foo&quot;。</span><br><span class="line">  modifiers:一个包含修饰符的对象。例如：v-my-directive.foo.bar,修饰符对象modifiers的值是&#123;foo:true, bar:true&#125;。</span><br><span class="line">vnode:Vue编译生成的虚拟节点。</span><br><span class="line">oldVnode:上一个虚拟节点，仅在update和componentUpdated钩子中可用。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Vue.directive(&apos;runoob&apos;, &#123;</span><br><span class="line">  bind: function (el, binding, vnode) &#123;</span><br><span class="line">    var s = JSON.stringify</span><br><span class="line">    el.innerHTML =</span><br><span class="line">      &apos;name: &apos;       + s(binding.name) + &apos;&lt;br&gt;&apos; +</span><br><span class="line">      &apos;value: &apos;      + s(binding.value) + &apos;&lt;br&gt;&apos; +</span><br><span class="line">      &apos;expression: &apos; + s(binding.expression) + &apos;&lt;br&gt;&apos; +</span><br><span class="line">      &apos;argument: &apos;   + s(binding.arg) + &apos;&lt;br&gt;&apos; +</span><br><span class="line">      &apos;modifiers: &apos;  + s(binding.modifiers) + &apos;&lt;br&gt;&apos; +</span><br><span class="line">      &apos;vnode keys: &apos; + Object.keys(vnode).join(&apos;, &apos;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="Vue-js-Ajax"><a href="#Vue-js-Ajax" class="headerlink" title="Vue.js Ajax"></a>Vue.js Ajax</h1><ul><li>axios</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">get方法,可以简单的读取JSON数据。  </span><br><span class="line">&lt;div v-for=&quot;site in info&quot;&gt;</span><br><span class="line">  &#123;&#123; site.name &#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      info: null</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted()&#123;</span><br><span class="line">    axios</span><br><span class="line">      .get(&apos;https://www.runoob.com/try/ajax/json_demo.json&apos;)</span><br><span class="line">      .then(response =&gt; (this.info = response.data.sites))</span><br><span class="line">      .catch(function (error) &#123; // 请求失败处理</span><br><span class="line">        console.log(error);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">post方法与get方法相似。</span><br><span class="line">  mounted()&#123;</span><br><span class="line">    axios</span><br><span class="line">    .post(&apos;https://www.runoob.com/try/ajax/demo_axios_post.php&apos;)</span><br><span class="line">    .then(response =&gt; (this.info = response))</span><br><span class="line">    .catch(function (error) &#123; // 请求失败处理</span><br><span class="line">      console.log(error);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>vue-resource</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">get请求</span><br><span class="line">window.onload = function()&#123;</span><br><span class="line">  var vm = new Vue(&#123;</span><br><span class="line">    el:&apos;#box&apos;,</span><br><span class="line">    data:&#123;</span><br><span class="line">        msg:&apos;Hello World!&apos;,</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">      get:function()&#123;</span><br><span class="line">        //发送get请求</span><br><span class="line">        this.$http.get(&apos;/try/ajax/ajax_info.txt&apos;).then(function(res)&#123;</span><br><span class="line">            document.write(res.body);    </span><br><span class="line">        &#125;,function()&#123;</span><br><span class="line">            console.log(&apos;请求失败处理&apos;);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">post请求</span><br><span class="line">methods:&#123;</span><br><span class="line">  post:function()&#123;</span><br><span class="line">    //发送 post 请求</span><br><span class="line">    this.$http.post(&apos;/try/ajax/demo_test_post.php&apos;,&#123;name:&quot;菜鸟教程&quot;,url:&quot;http://www.runoob.com&quot;&#125;,&#123;emulateJSON:true&#125;).then(function(res)&#123;</span><br><span class="line">          document.write(res.body);    </span><br><span class="line">      &#125;,function(res)&#123;</span><br><span class="line">          console.log(res.status);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css(4)</title>
      <link href="/2019/10/16/2019-09-11-css-4/"/>
      <url>/2019/10/16/2019-09-11-css-4/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h2 id="CSS定位属性"><a href="#CSS定位属性" class="headerlink" title="CSS定位属性"></a>CSS定位属性</h2><ul><li>top、bottom、left、right</li></ul><p>定义了定位元素上外边距边界与其包含块下边界之间的偏移。<br>定义了定位元素下外边距边界与其包含块下边界之间的偏移。<br>定义了定位元素左外边距边界与其包含块左边界之间的偏移。<br>定义了定位元素右外边距边界与其包含块下边界之间的偏移。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">auto    默认值。通过浏览器计算底部的位置。</span><br><span class="line">%       设置以包含元素的百分比计的底边位置。可使用负值。</span><br><span class="line">length  使用 px、cm 等单位设置元素的底边位置。可使用负值。</span><br><span class="line">inherit 规定应该从父元素继承 bottom 属性的值。</span><br></pre></td></tr></table></figure><ul><li>clip  </li></ul><p>剪辑一个绝对定位的元素。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shape     设置元素的形状。唯一合法的形状值是：rect (top, right, bottom, left)</span><br><span class="line">auto      默认值。不应用任何剪裁。</span><br><span class="line">inherit   规定应该从父元素继承 clip 属性的值。</span><br></pre></td></tr></table></figure><ul><li>cursor  </li></ul><p>显示光标移动到指定的类型。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">url       需使用的自定义光标的 URL。注释：请在此列表的末端始终定义一种普通的光标，以防没有由 URL 定义的可用光标。</span><br><span class="line">default   默认光标（通常是一个箭头）</span><br><span class="line">auto      默认。浏览器设置的光标。</span><br><span class="line">crosshair 光标呈现为十字线。</span><br><span class="line">pointer   光标呈现为指示链接的指针（一只手）</span><br><span class="line">move      此光标指示某对象可被移动。</span><br><span class="line">text      此光标指示文本。</span><br><span class="line">wait      此光标指示程序正忙（通常是一只表或沙漏）。</span><br><span class="line">help      此光标指示可用的帮助（通常是一个问号或一个气球）。</span><br><span class="line">e-resize  此光标指示矩形框的边缘可被向右（东）移动。</span><br><span class="line">ne-resize 此光标指示矩形框的边缘可被向上及向右移动（北/东）。</span><br><span class="line">nw-resize 此光标指示矩形框的边缘可被向上及向左移动（北/西）。</span><br><span class="line">n-resize  此光标指示矩形框的边缘可被向上（北）移动。</span><br><span class="line">se-resize 此光标指示矩形框的边缘可被向下及向右移动（南/东）。</span><br><span class="line">sw-resize 此光标指示矩形框的边缘可被向下及向左移动（南/西）。</span><br><span class="line">s-resize  此光标指示矩形框的边缘可被向下移动（北/西）。</span><br><span class="line">w-resize  此光标指示矩形框的边缘可被向左移动（西）。</span><br></pre></td></tr></table></figure><ul><li>overflow </li></ul><p>设置当元素的内容溢出其区域时发生的事情。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">visible    默认值。内容不会被修剪，会呈现在元素框之外。</span><br><span class="line">hidden     内容会被修剪，并且其余内容是不可见的。</span><br><span class="line">scroll     内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容。</span><br><span class="line">auto       如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。</span><br><span class="line">inherit    规定应该从父元素继承 overflow 属性的值</span><br></pre></td></tr></table></figure><ul><li>overflow-x、overflow-y</li></ul><p>指定如何处理右边/左边边缘的内容溢出元素的内容区域。<br>指定如何处理顶部/底部边缘的内容溢出元素的内容区域。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">visible     不裁剪内容，可能会显示在内容框之外。</span><br><span class="line">hidden      裁剪内容 - 不提供滚动机制。</span><br><span class="line">scroll      裁剪内容 - 提供滚动机制。</span><br><span class="line">auto        如果溢出框，则应该提供滚动机制。</span><br><span class="line">no-display  如果内容不适合内容框，则删除整个框。</span><br><span class="line">no-content  如果内容不适合内容框，则隐藏整个内容</span><br></pre></td></tr></table></figure><h2 id="CSS-Float-浮动"><a href="#CSS-Float-浮动" class="headerlink" title="CSS-Float(浮动)"></a>CSS-Float(浮动)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">left      元素向左浮动。</span><br><span class="line">right     元素向右浮动。</span><br><span class="line">none      默认值。元素不浮动，并会显示在其在文本中出现的位置。</span><br><span class="line">inherit   规定应该从父元素继承 float 属性的值。</span><br></pre></td></tr></table></figure><ul><li>清除浮动，使用clear</li></ul><p>元素浮动之后，周围的元素会重新排列，为了避免这种情况，使用clear属性。<br>clear属性指定元素两侧不能出现浮动元素。</p><h2 id="CSS-组合选择符"><a href="#CSS-组合选择符" class="headerlink" title="CSS-组合选择符"></a>CSS-组合选择符</h2><ul><li>后代选择器</li></ul><p>后代选择器用于选取某元素的后代元素。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">以下实例选取所有&lt;p&gt;元素插入到&lt;div&gt;元素中: </span><br><span class="line">div p&#123;</span><br><span class="line">  background-color:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>子元素选择器</li></ul><p>与后代选择器相比，子元素选择器(Child selectors)只能选择作为某元素子元素的元素。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">以下实例选择了&lt;div&gt;元素中所有直接子元素&lt;p&gt;：</span><br><span class="line">div&gt;p&#123;</span><br><span class="line">  background-color:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>相邻兄弟选择器</li></ul><p>相邻兄弟选择器(Adjacent sibling selector)可选择紧接在另一元素后的元素，且二者有相同父元素。<br>如果需要选择紧接在另一个元素后的元素，而且二者有相同的父元素，可以使用相邻兄弟选择器（Adjacent sibling selector）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">以下实例选取了所有位于&lt;div&gt;元素后的第一个&lt;p&gt;元素:</span><br><span class="line">div+p&#123;</span><br><span class="line">  background-color:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>后续兄弟选择器</li></ul><p>后续兄弟选择器选取所有指定元素之后的相邻兄弟元素。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">以下实例选取了所有&lt;div&gt;元素之后的所有相邻兄弟元素&lt;p&gt;: </span><br><span class="line">div~p&#123;</span><br><span class="line">  background-color:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CSS伪类"><a href="#CSS伪类" class="headerlink" title="CSS伪类"></a>CSS伪类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">:checked              input:checked           选择所有选中的表单元素</span><br><span class="line">:disabled             input:disabled          选择所有禁用的表单元素</span><br><span class="line">:empty                p:empty                 选择所有没有子元素的p元素</span><br><span class="line">:enabled              input:enabled           选择所有启用的表单元素</span><br><span class="line">:first-of-type        p:first-of-type         选择的每个p元素是其父元素的第一个p元素</span><br><span class="line">:in-range             input:in-range          选择元素指定范围内的值</span><br><span class="line">:invalid              input:invalid           选择所有无效的元素</span><br><span class="line">:last-child           p:last-child            选择所有p元素的最后一个子元素</span><br><span class="line">:last-of-type         p:last-of-type          选择每个p元素是其母元素的最后一个p元素</span><br><span class="line">:not(selector)        :not(p)                 选择所有p以外的元素</span><br><span class="line">:nth-child(n)         p:nth-child(2)          选择所有p元素的父元素的第二个子元素</span><br><span class="line">:nth-last-child(n)    p:nth-last-child(2)     选择所有p元素倒数的第二个子元素</span><br><span class="line">:nth-last-of-type(n)  p:nth-last-of-type(2)   选择所有p元素倒数的第二个为p的子元素</span><br><span class="line">:nth-of-type(n)       p:nth-of-type(2)        选择所有p元素第二个为p的子元素</span><br><span class="line">:only-of-type         p:only-of-type          选择所有仅有一个子元素为p的元素</span><br><span class="line">:only-child           p:only-child            选择所有仅有一个子元素的p元素</span><br><span class="line">:optional             input:optional          选择没有&quot;required&quot;的元素属性</span><br><span class="line">:out-of-range         input:out-of-range      选择指定范围以外的值的元素属性</span><br><span class="line">:read-only            input:read-only         选择只读属性的元素属性</span><br><span class="line">:read-write           input:read-write        选择没有只读属性的元素属性</span><br><span class="line">:required             input:required          选择有&quot;required&quot;属性指定的元素属性</span><br><span class="line">:root                 root                    选择文档的根元素</span><br><span class="line">:target               #news:target            选择当前活动#news元素(点击URL包含锚的名字)</span><br><span class="line">:valid                input:valid             选择所有有效值的属性</span><br><span class="line">:link                 a:link                  选择所有未访问链接</span><br><span class="line">:visited              a:visited               选择所有访问过的链接</span><br><span class="line">:active               a:active                选择正在活动链接</span><br><span class="line">:hover                a:hover                 把鼠标放在链接上的状态</span><br><span class="line">:focus                input:focus             选择元素输入后具有焦点</span><br><span class="line">:first-letter         p:first-letter          选择每个&lt;p&gt;元素的第一个字母</span><br><span class="line">:first-line           p:first-line            选择每个&lt;p&gt;元素的第一行</span><br><span class="line">:first-child          p:first-child           选择器匹配属于任意元素的第一个子元素的&lt;p&gt;元素</span><br><span class="line">:before               p:before                在每个&lt;p&gt;元素之前插入内容</span><br><span class="line">:after                p:after                 在每个&lt;p&gt;元素之后插入内容</span><br><span class="line">:lang(language)       p:lang(it)              为&lt;p&gt;元素的lang属性选择一个开始值</span><br></pre></td></tr></table></figure><h2 id="CSS表单"><a href="#CSS表单" class="headerlink" title="CSS表单"></a>CSS表单</h2><ul><li>输入框(input) 聚焦</li></ul><p>默认情况下，一些浏览器在输入框获取焦点时（点击输入框）会有一个蓝色轮廓。我们可以设置input样式为outline:none;来忽略该效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用:focus选择器可以设置输入框在获取焦点时的样式：</span><br><span class="line">input[type=text]:focus &#123;</span><br><span class="line">  background-color: lightblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>输入框(input) 图标</li></ul><p>如果你想在输入框中添加图标，可以使用background-image属性和用于定位的background-position属性。注意设置图标的左边距，让图标有一定的空间：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">input[type=text] &#123;</span><br><span class="line">  background-color: white;</span><br><span class="line">  background-image: url(&apos;searchicon.png&apos;);</span><br><span class="line">  background-position: 10px 10px; </span><br><span class="line">  background-repeat: no-repeat;</span><br><span class="line">  padding-left: 40px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>带动画的搜索框</li></ul><p>以下实例使用了CSS transition属性，该属性设置了输入框在获取焦点时会向右延展。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">input[type=text] &#123;</span><br><span class="line">  -webkit-transition: width 0.4s ease-in-out;</span><br><span class="line">  transition: width 0.4s ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line">input[type=text]:focus &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>文本框（textarea）样式</li></ul><p>使用resize属性来禁用文本框可以重置大小的功能（一般拖动右下角可以重置大小）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">textarea &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 150px;</span><br><span class="line">  padding: 12px 20px;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  border: 2px solid #ccc;</span><br><span class="line">  border-radius: 4px;</span><br><span class="line">  background-color: #f8f8f8;</span><br><span class="line">  resize: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>下拉菜单（select）样式</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  padding: 16px 20px;</span><br><span class="line">  border: none;</span><br><span class="line">  border-radius: 4px;</span><br><span class="line">  background-color: #f1f1f1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>按钮样式</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">input[type=button], input[type=submit], input[type=reset] &#123;</span><br><span class="line">  background-color: #4CAF50;</span><br><span class="line">  border: none;</span><br><span class="line">  color: white;</span><br><span class="line">  padding: 16px 32px;</span><br><span class="line">  text-decoration: none;</span><br><span class="line">  margin: 4px 2px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125; </span><br><span class="line">/* 提示: 使用 width: 100% 设置全宽按钮 */</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue(1)</title>
      <link href="/2019/10/16/2019-09-16-vue-1/"/>
      <url>/2019/10/16/2019-09-16-vue-1/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="vue语法格式"><a href="#vue语法格式" class="headerlink" title="vue语法格式"></a>vue语法格式</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div id = &quot;vue_det&quot;&gt;</span><br><span class="line"> &lt;h1&gt;&#123;&#123;details()&#125;&#125;&lt;/h1&gt;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"> var vm=new Vue(&#123;</span><br><span class="line">el:&apos;#vue_det&apos;,</span><br><span class="line">data:&#123;</span><br><span class="line">  site: &quot;菜鸟教程&quot;,</span><br><span class="line">  url: &quot;www.runoob.com&quot;,</span><br><span class="line">  alexa: &quot;10000&quot;</span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line">  details:function()&#123;</span><br><span class="line">    return  this.site+&quot;-学的不仅是技术，更是梦想！&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;)</span><br><span class="line"> data 用于定义属性，实例中有三个属性分别为：site、url、alexa。</span><br><span class="line"> methods 用于定义的函数，可以通过 return 来返回函数值。</span><br><span class="line"> &#123;&#123; &#125;&#125; 用于输出对象属性和函数返回值。</span><br><span class="line"> 在Vue构造器中有一个el参数，它是DOM元素中的id。</span><br><span class="line"> 这意味着我们接下来的改动全部在以上指定的div内，div外部不受影响。</span><br></pre></td></tr></table></figure><p>当一个Vue实例被创建时，它向Vue的响应式系统中加入了其data对象中能找到的所有的属性。当这些属性的值发生改变时，html视图将也会产生相应的变化。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> var data = &#123; site: &quot;菜鸟教程&quot;, url: &quot;www.runoob.com&quot;, alexa: 10000&#125;</span><br><span class="line"> var vm = new Vue(&#123;</span><br><span class="line">   el: &apos;#vue_det&apos;,</span><br><span class="line">data: data      // 它们引用相同的对象！</span><br><span class="line"> &#125;)</span><br><span class="line"> document.write(vm.site === data.site) // true</span><br><span class="line"> document.write(&quot;&lt;br&gt;&quot;)                // 设置属性也会影响到原始数据</span><br><span class="line"> vm.site = &quot;Runoob&quot;</span><br><span class="line"> document.write(data.site + &quot;&lt;br&gt;&quot;) // Runoob</span><br><span class="line"> // ……反之亦然</span><br><span class="line"> data.alexa = 1234</span><br><span class="line"> document.write(vm.alexa) // 1234</span><br></pre></td></tr></table></figure><p>除了数据属性，Vue实例还提供了一些有用的实例属性与方法。它们都有前缀$，以便与用户定义的属性区分开来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;vue_det&quot;&gt;</span><br><span class="line">  &lt;h1&gt;site : &#123;&#123;site&#125;&#125;&lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">var data = &#123; site: &quot;菜鸟教程&quot;, url: &quot;www.runoob.com&quot;, alexa: 10000&#125;</span><br><span class="line">var vm = new Vue(&#123;</span><br><span class="line">  el: &apos;#vue_det&apos;,</span><br><span class="line">  data: data</span><br><span class="line">&#125;) </span><br><span class="line">document.write(vm.$data === data) // true</span><br><span class="line">document.write(&quot;&lt;br&gt;&quot;) </span><br><span class="line">document.write(vm.$el === document.getElementById(&apos;vue_det&apos;)) // true</span><br></pre></td></tr></table></figure><h1 id="vue插值"><a href="#vue插值" class="headerlink" title="vue插值"></a>vue插值</h1><ul><li>v-cloak</li></ul><p>v-cloak隐藏未编译的变量，即插值不等式；直到Vue实例被读取完毕。</p><ul><li>文本和html</li></ul><p>使用v-text指令不解析直接输出字符串，使用v-html指令解析后用于输出字符串的执行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">   &lt;div v-html=&quot;message&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div v-text=&quot;message&quot;&gt;&lt;/div&gt;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"> new Vue(&#123;</span><br><span class="line">   el: &apos;#app&apos;,</span><br><span class="line">   data: &#123;</span><br><span class="line">     message: &apos;&lt;h1&gt;菜鸟教程&lt;/h1&gt;&apos;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><ul><li>属性绑定</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">value值的绑定</span><br><span class="line">复选框如果是一个为逻辑值，如果是多个则绑定到同一个数组。</span><br><span class="line">单选按钮是直接取值不是逻辑值。</span><br><span class="line">select列表与单选按钮是相似取值。</span><br><span class="line">&lt;input type=&quot;checkbox&quot; v-model=&quot;use&quot;&gt;</span><br><span class="line">&lt;input type=&quot;checkbox&quot; id=&quot;runoob&quot; value=&quot;Runoob&quot; v-model=&quot;checkedNames&quot;&gt;</span><br><span class="line">&lt;label for=&quot;runoob&quot;&gt;Runoob&lt;/label&gt;</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  data:&#123;</span><br><span class="line">    use: false</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">input的value等于use，值的变化是相互的。即如果勾选后，use=true；</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> class的绑定</span><br><span class="line"> v-bind:class =&quot;&#123;class名1:boolean值，...,class名2:boolean值&#125;&quot;</span><br><span class="line"> 判断class名1的值，如果为true使用class名1类的样式，否则不使用该类。</span><br><span class="line"> &lt;div v-bind:class=&quot;&#123;&apos;class1&apos;: use&#125;&quot;&gt;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"> new Vue(&#123;</span><br><span class="line">   el: &apos;#app&apos;,</span><br><span class="line">   data:&#123;</span><br><span class="line">     use: false</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"> v-bind:class =&quot;[vue的属性名1,...,vue的属性名n]&quot;</span><br><span class="line"> class数组中的vue属性值就是class名。</span><br><span class="line"> &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">&lt;div v-bind:class=&quot;[activeClass, errorClass]&quot;&gt;&lt;/div&gt;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"> new Vue(&#123;</span><br><span class="line">   el: &apos;#app&apos;,</span><br><span class="line">   data: &#123;</span><br><span class="line">     activeClass: &apos;active&apos;,</span><br><span class="line">     errorClass: &apos;text-danger&apos;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> style的绑定，与class相似。</span><br><span class="line"></span><br><span class="line"> &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">&lt;div v-bind:style=&quot;&#123;color:activeColor,fontSize:fontSize+&apos;px&apos;&#125;&quot;&gt;菜鸟教程&lt;/div&gt;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"> new Vue(&#123;</span><br><span class="line">   el: &apos;#app&apos;,</span><br><span class="line">   data: &#123;</span><br><span class="line">     activeColor: &apos;green&apos;,</span><br><span class="line">  fontSize: 30</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;)</span><br><span class="line"></span><br><span class="line"> &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">   &lt;div v-bind:style=&quot;[baseStyles, overridingStyles]&quot;&gt;菜鸟教程&lt;/div&gt;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"> new Vue(&#123;</span><br><span class="line">   el: &apos;#app&apos;,</span><br><span class="line">   data: &#123;</span><br><span class="line">     baseStyles: &#123;</span><br><span class="line">       color: &apos;green&apos;,</span><br><span class="line">       fontSize: &apos;30px&apos;</span><br><span class="line">     &#125;,</span><br><span class="line">  overridingStyles: &#123;</span><br><span class="line">       &apos;font-weight&apos;: &apos;bold&apos;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> 表达式</span><br><span class="line"> Vue.js都提供了完全的JavaScript表达式支持。</span><br><span class="line"> &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">&#123;&#123;5+5&#125;&#125;&lt;br&gt;</span><br><span class="line">&#123;&#123; ok ? &apos;YES&apos; : &apos;NO&apos; &#125;&#125;&lt;br&gt;</span><br><span class="line">&#123;&#123; message.split(&apos;&apos;).reverse().join(&apos;&apos;) &#125;&#125;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"> new Vue(&#123;</span><br><span class="line">   el: &apos;#app&apos;,</span><br><span class="line">   data: &#123;</span><br><span class="line">  ok: true,</span><br><span class="line">     message: &apos;RUNOOB&apos;,</span><br><span class="line">  id : 1</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><ul><li>指令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">v-if指令将根据表达式seen的值(true 或 false )来决定是否插入p元素。</span><br><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;p v-if=&quot;seen&quot;&gt;现在你看到我了&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">  </span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    seen: true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">还有v-else 、v-else-if指令，具有与JavaScript的条件语句相同的含义，</span><br><span class="line">v-else 、v-else-if 必须跟在 v-if 或者 v-else-if之后。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">v-show指令来根据条件真假来是否展示元素。</span><br><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;h1 v-show=&quot;ok&quot;&gt;Hello!&lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    ok: true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">v-for指令</span><br><span class="line">v-for=&quot;变量名 in 数组名&quot;</span><br><span class="line">变量名是从数组中取出的每一个变量的临时名称，数组名是vue的一个属性名。</span><br><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">    &lt;li v-for=&quot;value in object&quot;&gt;</span><br><span class="line">      &#123;&#123; value &#125;&#125;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    object: &#123;</span><br><span class="line">      name: &apos;菜鸟教程&apos;,</span><br><span class="line">      url: &apos;http://www.runoob.com&apos;,</span><br><span class="line">      slogan: &apos;学的不仅是技术，更是梦想！&apos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">v-for=&quot;（变量名1，变量名2）in 数组名&quot;</span><br><span class="line">变量名1是从数组中取出的每一个变量的临时名称，变量名2是从数组中取出的每一个变量的键名，数组名是vue的一个属性名。</span><br><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">    &lt;li v-for=&quot;(value, key) in object&quot;&gt;</span><br><span class="line">      &#123;&#123; key &#125;&#125; : &#123;&#123; value &#125;&#125;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">v-for=&quot;（变量名1，变量名2，变量名3）in 数组名&quot;</span><br><span class="line">变量名1是从数组中取出的每一个变量的临时名称，变量名2是每一个变量的键名，变量名3是每一个变量的下标值，数组名是vue的一个属性名。</span><br><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">    &lt;li v-for=&quot;(value, key, index) in object&quot;&gt;</span><br><span class="line">      &#123;&#123; index &#125;&#125;. &#123;&#123; key &#125;&#125; : &#123;&#123; value &#125;&#125;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>名词概念和前端遇到的关键词</title>
      <link href="/2019/10/16/2019-09-12-gai-nian-he-qian-duan-yu-dao-de-guan-jian-ci/"/>
      <url>/2019/10/16/2019-09-12-gai-nian-he-qian-duan-yu-dao-de-guan-jian-ci/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>Git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。</p><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><p>Node.js 是一个基于Chrome V8引擎的JavaScript运行环境。</p><p>JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。</p><p>Vim是一个类似于Vi的著名的功能强大、高度可定制的文本编辑器，在Vi的基础上改进和增加了很多特性。</p><p>TCP/IP（Transmission Control Protocol/Internet Protocol，传输控制协议/网际协议）是指能够在多个不同网络间实现信息传输的协议簇。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">七层协议：物理层，数据链路层，网络层，传输层，会话层，表示层，应用层</span><br><span class="line">四层协议: 数据链路层，网络层，传输层，应用层。</span><br></pre></td></tr></table></figure><p>HTML是用来描述网页的一种语言。</p><p>HTML指的是超文本标记语言:HyperText Markup Language,HTML不是一种编程语言，而是一种标记语言。</p><p>标记语言是一套标记标签 (markup tag)。HTML使用标记标签来描述网页。</p><p>HTML文档包含了HTML标签及文本内容。HTML文档也叫做web页面。</p><h1 id="前端遇到的关键词"><a href="#前端遇到的关键词" class="headerlink" title="前端遇到的关键词"></a>前端遇到的关键词</h1><p>在javascript，id选择器和name属性可以直接获取、使用，不需要getElementById。两者容易冲突，不推荐使用。</p><ul><li>margin</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">margin:10px 5px 15px 20px;</span><br><span class="line">上外边距是 10px</span><br><span class="line">右外边距是 5px</span><br><span class="line">下外边距是 15px</span><br><span class="line">左外边距是 20px</span><br><span class="line">如果有两参数，就是上下边距是第一个，左右边距是第二个。</span><br><span class="line">如果只有一个，则所有边距都是一样的。</span><br><span class="line">auto(自动居中)</span><br><span class="line">length(规定以具体单位计的外边距值，比如像素、厘米等。默认值是0px)</span><br><span class="line">%(规定基于父元素的宽度的百分比的外边距)</span><br><span class="line">这些单词是参数，直接使用。</span><br></pre></td></tr></table></figure><ul><li>add()方法</li></ul><p>用于向select添加一个option元素。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">selectObject.add(option,before)</span><br><span class="line"> option必需。要添加选项元素。必需是option或optgroup元素。</span><br><span class="line"> before必需。在选项数组的该元素之前增加新的元素。如果该参数是null，元素添加到选项数组的末尾。</span><br><span class="line"> var y=document.createElement(&apos;option&apos;);</span><br><span class="line"> y.text=&apos;Kiwi&apos;</span><br><span class="line"> var x=document.getElementById(&quot;mySelect&quot;);</span><br><span class="line"> try&#123;</span><br><span class="line">   x.add(y,null); // standards compliant</span><br><span class="line"> &#125;</span><br><span class="line"> catch(ex)&#123;</span><br><span class="line">   x.add(y); // IE only</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ul><li>新建option</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var option = new Option(&quot;Option text&quot;,&quot;Option value&quot;);</span><br><span class="line">Option()构造函数接受两个参数：文本(text)和值(value);第二个参数可选</span><br></pre></td></tr></table></figure><ul><li>checkbox的勾选</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var input=document.getElementsByTagName(&apos;input&apos;);可返回带有指定标签名的对象的集合。</span><br><span class="line">input[i].checked=true;表示被勾选上。</span><br></pre></td></tr></table></figure><ul><li>onblur 事件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">当用户离开input输入框时执行一段Javascript代码：</span><br><span class="line">&lt;input type=&quot;text&quot; onblur=&quot;myFunction()&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>name属性</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getElementsByName() 方法可返回带有指定名称的对象的集合。</span><br><span class="line">document.getElementsByName(name)</span><br></pre></td></tr></table></figure><ul><li>form表单的提交</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onsubmit=&quot;return checkForm()&quot;</span><br><span class="line">return false时阻止提交表单</span><br><span class="line">return 时提交表单</span><br></pre></td></tr></table></figure><ul><li>match() 方法</li></ul><p>可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">该方法类似indexOf()和lastIndexOf()，但是它返回指定的值，而不是字符串的位置。</span><br><span class="line">stringObject.match(searchvalue)</span><br><span class="line">stringObject.match(regexp)</span><br></pre></td></tr></table></figure><ul><li>substring()和substr()</li></ul><p>两者都是截取字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">相同点:如果只是写一个参数，两者的作用都一样：都是是截取字符串从当前下标以后直到字符串最后的字符串片段。</span><br><span class="line">不同点:</span><br><span class="line">substr（startIndex,lenth)：第二个参数是截取字符串的长度（从起始点截取某个长度的字符串）；</span><br><span class="line">substring（startIndex, endIndex）：第二个参数是截取字符串最终的下标（截取2个位置之间的字符串,‘含头不含尾’）。</span><br></pre></td></tr></table></figure><ul><li>css的clear属性</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">left  在左侧不允许浮动元素。</span><br><span class="line">right 在右侧不允许浮动元素。</span><br><span class="line">both  在左右两侧均不允许浮动元素。</span><br><span class="line">none  默认值。允许浮动元素出现在两侧。</span><br><span class="line">inherit 规定应该从父元素继承 clear 属性的值。</span><br></pre></td></tr></table></figure><ul><li>Math 对象</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Math 对象用于执行数学任务</span><br><span class="line">var pi_value=Math.PI;</span><br><span class="line">var sqrt_value=Math.sqrt(15);</span><br><span class="line"></span><br><span class="line">abs(x)  返回数的绝对值。</span><br><span class="line">floor(x)  对数进行下舍入。</span><br><span class="line">ceil(x) 对数进行上舍入。</span><br><span class="line">round(x)  把数四舍五入为最接近的整数。</span><br><span class="line">sqrt(x) 返回数的平方根</span><br><span class="line">max(x,y)  返回 x 和 y 中的最高值。</span><br><span class="line">min(x,y)  返回 x 和 y 中的最低值。</span><br><span class="line">random()  返回 0 ~ 1 之间的随机数。</span><br></pre></td></tr></table></figure><ul><li>box-shadow</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">box-shadow: h-shadow v-shadow blur spread color inset;</span><br><span class="line">h-shadow           -必需的。水平阴影的位置。允许负值</span><br><span class="line">v-shadow           -必需的。垂直阴影的位置。允许负值</span><br><span class="line">blur               -可选。模糊距离</span><br><span class="line">spread             -可选。阴影的大小</span><br><span class="line">color              -可选。阴影的颜色。在CSS颜色值寻找颜色值的完整列表</span><br><span class="line">inset              -可选。从外层的阴影（开始时）改变阴影内侧阴影</span><br></pre></td></tr></table></figure><ul><li>oncontextmenu事件</li></ul><p>当用户在div元素上右击鼠标时执行 JavaScript ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div oncontextmenu=&quot;myFunction()&quot; contextmenu=&quot;mymenu&quot;&gt;</span><br><span class="line">οncοntextmenu=&quot;return false&quot; ：禁止右键</span><br></pre></td></tr></table></figure><ul><li>event对象</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x,y               鼠标相对于当前浏览器的位置   px  只读</span><br><span class="line">clientX,clientY   鼠标当前相对于网页的位置  px  只读</span><br><span class="line">offsetX,offsetY   鼠标当前相对于网页中的某一区域的位置  px  只读</span><br></pre></td></tr></table></figure><ul><li>charAt()方法</li></ul><p>可返回指定位置的字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请注意，JavaScript并没有一种有别于字符串类型的字符数据类型，所以返回的字符是长度为 1 的字符串。</span><br><span class="line">stringObject.charAt(index)</span><br></pre></td></tr></table></figure><ul><li>oninput事件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">当用户向input中尝试输入时执行 JavaScript：</span><br><span class="line">&lt;input type=&quot;text&quot; oninput=&quot;myFunction()&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li>onmouseup事件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在用户鼠标按键被松开时执行Javascript代码：</span><br><span class="line">&lt;p onmouseup=&quot;mouseUp()&quot;&gt;Click the text!&lt;/p&gt;</span><br></pre></td></tr></table></figure><ul><li>onmousedown事件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">当用户按下鼠标按钮执行Javascript代码：</span><br><span class="line">&lt;p onmousedown=&quot;myFunction()&quot;&gt;Click the text!&lt;/p&gt;</span><br></pre></td></tr></table></figure><ul><li>document.documentElement</li></ul><p>x.innerHTML=document.documentElement.nodeName;返回的是html标签名。</p><ul><li>offsetWidth和clientWidth</li></ul><p>offsetWidth为元素的width+元素的padding+边框的宽度。<br>clientWidth为元素的width+元素的padding。</p><ul><li>offsetLeft和clientX</li></ul><p>offsetLeft为元素的左边框到浏览器左边界的距离。<br>clientX为鼠标在浏览器的横坐标。</p><ul><li>offsetTop和clientY</li></ul><p>offsetRight为元素的上边框到浏览器上边界的距离。<br>clientY为鼠标在浏览器的纵坐标。</p><ul><li>新建cookie</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$.cookie(&apos;the_cookie&apos;,&apos;the_value&apos;,&#123;</span><br><span class="line">    expires:7,  </span><br><span class="line">    path:&apos;/&apos;,</span><br><span class="line">    domain:&apos;jquery.com&apos;,</span><br><span class="line">    secure:true</span><br><span class="line">&#125;)　</span><br><span class="line">expires：（Number|Date）有效期；设置一个整数时，单位是天；也可以设置一个日期对象作为Cookie的过期日期；</span><br><span class="line">path：（String）创建该Cookie的页面路径；</span><br><span class="line">domain：（String）创建该Cookie的页面域名；</span><br><span class="line">secure：（Booblean）如果设为true，那么此Cookie的传输会要求一个安全协议，例如：HTTPS；</span><br></pre></td></tr></table></figure><ul><li>fadeTo() 方法</li></ul><p>逐渐改变被选元素的不透明度为指定的值（褪色效果）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(selector).fadeTo(speed,opacity,easing,callback)</span><br><span class="line">speed       必需。规定褪色效果的速度。</span><br><span class="line"> -&quot;slow&quot; </span><br><span class="line"> -&quot;fast&quot;</span><br><span class="line">opacity     必需。规定要淡入或淡出的透明度。必须是介于0.00与1.00之间的数字。</span><br><span class="line">easing      可选。规定在动画的不同点上元素的速度。默认值为&quot;swing&quot;。</span><br><span class="line"> -&quot;swing&quot; - 在开头/结尾移动慢，在中间移动快</span><br><span class="line"> -&quot;linear&quot; - 匀速移动。</span><br><span class="line">callback    可选。fadeTo() 方法执行完之后，要执行的函数。</span><br></pre></td></tr></table></figure><ul><li>prependTo() 方法</li></ul><p>在被选元素的开头插入HTML元素。<br>如需在被选元素的结尾插入 HTML 元素，请使用appendTo()方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(content).prependTo(selector)</span><br><span class="line">content 必需。规定要插入的内容（必须包含 HTML 标签）。</span><br><span class="line">注意：如果 content 是已存在的元素，它将从当前位置被移除，并在被选元素的开头被插入。</span><br><span class="line">selector  必需。规定把内容预加到哪个元素上。</span><br></pre></td></tr></table></figure><ul><li>slideDown() 方法</li></ul><p>通过使用滑动效果，显示隐藏的被选元素。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(selector).slideDown(speed,callback)</span><br><span class="line">speed     可选。规定元素从隐藏到可见的速度（或者相反）。默认为 &quot;normal&quot;。</span><br><span class="line">毫秒 （比如 1500）</span><br><span class="line">&quot;slow&quot;</span><br><span class="line">&quot;normal&quot;</span><br><span class="line">&quot;fast&quot;</span><br><span class="line">在设置速度的情况下，元素从隐藏到可见的过程中，会逐渐地改变其高度。</span><br><span class="line">callback  可选。slideDown 函数执行完之后，要执行的函数。</span><br><span class="line"></span><br><span class="line">设置水平滚动条位置</span><br><span class="line">设置所有匹配元素的水平滚动条位置。</span><br><span class="line">$(selector).scrollLeft(position)</span><br><span class="line">position  可选。规定以像素计的新位置。</span><br></pre></td></tr></table></figure><ul><li>insertBefore() 方法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">node.insertBefore(newnode,existingnode)</span><br><span class="line">newnode 节点对象  必须。要插入的节点对象</span><br><span class="line">existingnode  节点对象  必须。要添加新的节点前的子节点。</span><br><span class="line"></span><br><span class="line">replaceChild() 方法可将某个子节点替换为另一个。</span><br><span class="line">node.replaceChild(newnode,oldnode)</span><br><span class="line">newnode Node 对象 必须。你要插入的节点对象。</span><br><span class="line">oldnode Node object 必须。你要移除的节点对象。</span><br></pre></td></tr></table></figure><ul><li>node.cloneNode(deep)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deep  Boolean 可选。该方法将复制并返回调用它的节点的副本。如果传递给它的参数是 true，它还将递归复制当前节点的所有子孙节点。否则，它只复制当前节点。</span><br><span class="line">返回值为拷贝的节点</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mean javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css(3)</title>
      <link href="/2019/10/16/2019-09-10-css-3/"/>
      <url>/2019/10/16/2019-09-10-css-3/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h2 id="CSS轮廓"><a href="#CSS轮廓" class="headerlink" title="CSS轮廓"></a>CSS轮廓</h2><p>轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。</p><ul><li><p>outline-color设置轮廓的颜色</p></li><li><p>outline-style设置轮廓的样式</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">none  默认。定义无轮廓。</span><br><span class="line">dotted  定义点状的轮廓。</span><br><span class="line">dashed  定义虚线轮廓。</span><br><span class="line">solid 定义实线轮廓。</span><br><span class="line">double  定义双线轮廓。双线的宽度等同于 outline-width 的值。</span><br><span class="line">groove  定义 3D 凹槽轮廓。此效果取决于 outline-color 值。</span><br><span class="line">ridge 定义 3D 凸槽轮廓。此效果取决于 outline-color 值。</span><br><span class="line">inset 定义 3D 凹边轮廓。此效果取决于 outline-color 值。</span><br><span class="line">outset  定义 3D 凸边轮廓。此效果取决于 outline-color 值。</span><br></pre></td></tr></table></figure><ul><li>outline-width设置轮廓的宽度</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">thin  规定细轮廓。</span><br><span class="line">medium  默认。规定中等的轮廓。</span><br><span class="line">thick 规定粗的轮廓。</span><br><span class="line">length  允许您规定轮廓粗细的值。</span><br><span class="line">inherit 规定应该从父元素继承轮廓宽度的设置。</span><br></pre></td></tr></table></figure><h2 id="CSS-margin-外边距"><a href="#CSS-margin-外边距" class="headerlink" title="CSS-margin(外边距)"></a>CSS-margin(外边距)</h2><p>可能的值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto    设置浏览器边距。这样做的结果会依赖于浏览器</span><br><span class="line">length  定义一个固定的margin（使用像素，pt，em等）</span><br><span class="line">%       定义一个使用百分比的边距</span><br></pre></td></tr></table></figure><ul><li>Margin-单边外边距属性</li></ul><p>在CSS中，它可以指定不同的侧面不同的边距：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">margin-top:100px;</span><br><span class="line">margin-bottom:100px;</span><br><span class="line">margin-right:50px;</span><br><span class="line">margin-left:50px;</span><br></pre></td></tr></table></figure><ul><li>Margin-简写属性</li></ul><p>为了缩短代码，有可能使用一个属性中margin指定的所有边距属性。这就是所谓的简写属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">margin属性可以有一到四个值。如:</span><br><span class="line">margin:25px 50px 75px 100px;</span><br><span class="line">上边距为25px</span><br><span class="line">右边距为50px</span><br><span class="line">下边距为75px</span><br><span class="line">左边距为100px</span><br></pre></td></tr></table></figure><h2 id="CSS-padding（填充）"><a href="#CSS-padding（填充）" class="headerlink" title="CSS-padding（填充）"></a>CSS-padding（填充）</h2><p>可能的值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">length     定义一个固定的填充(像素, pt, em,等)</span><br><span class="line">%          使用百分比值定义一个填充</span><br></pre></td></tr></table></figure><ul><li>padding-单边内边距属性</li></ul><p>在CSS中，它可以指定不同的侧面不同的填充：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">padding-top:25px;</span><br><span class="line">padding-bottom:25px;</span><br><span class="line">padding-right:50px;</span><br><span class="line">padding-left:50px;</span><br></pre></td></tr></table></figure><ul><li>padding-简写属性</li></ul><p>为了缩短代码，它可以在一个属性中指定的所有填充属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Padding属性，可以有一到四个值。如：</span><br><span class="line">padding:25px 50px 75px 100px;</span><br><span class="line">上填充为25px</span><br><span class="line">右填充为50px</span><br><span class="line">下填充为75px</span><br><span class="line">左填充为100px</span><br></pre></td></tr></table></figure><h2 id="CSS-分组和嵌套选择器"><a href="#CSS-分组和嵌套选择器" class="headerlink" title="CSS-分组和嵌套选择器"></a>CSS-分组和嵌套选择器</h2><ul><li>分组选择器：</li></ul><p>h1,h2,p{<br>  color:green;<br>}</p><ul><li>嵌套选择器</li></ul><p>它可能适用于选择器内部的选择器的样式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">p&#123; &#125;:                为所有 p 元素指定一个样式。</span><br><span class="line">.marked&#123; &#125;:          为所有 class=&quot;marked&quot; 的元素指定一个样式。</span><br><span class="line">.marked p&#123; &#125;:        为所有 class=&quot;marked&quot; 元素内的 p 元素指定一个样式。</span><br><span class="line">p.marked&#123; &#125;:         为所有 class=&quot;marked&quot; 的 p 元素指定一个样式。</span><br></pre></td></tr></table></figure><h2 id="css-尺寸"><a href="#css-尺寸" class="headerlink" title="css-尺寸"></a>css-尺寸</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">height 设置元素的高度。</span><br><span class="line">line-height 设置行高。</span><br><span class="line">max-height  设置元素的最大高度。</span><br><span class="line">max-width 设置元素的最大宽度。</span><br><span class="line">min-height  设置元素的最小高度。</span><br><span class="line">min-width 设置元素的最小宽度。</span><br><span class="line">width 设置元素的宽度。</span><br></pre></td></tr></table></figure><h2 id="CSS-Display-显示-与Visibility-可见性）"><a href="#CSS-Display-显示-与Visibility-可见性）" class="headerlink" title="CSS-Display(显示)与Visibility(可见性）"></a>CSS-Display(显示)与Visibility(可见性）</h2><ul><li>隐藏元素-display:none或visibility:hidden</li></ul><p>display:none可以隐藏某个元素，且隐藏的元素不会占用任何空间。也就是说，该元素不但被隐藏了，而且该元素原本占用的空间也会从页面布局中消失。</p><p>visibility:hidden可以隐藏某个元素，但隐藏的元素仍需占用与未隐藏之前一样的空间。也就是说，该元素虽然被隐藏了，但仍然会影响布局。</p><ul><li>Display-块和内联元素</li></ul><p>块元素是一个元素，占用了全部宽度，在前后都是换行符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">块元素的例子：</span><br><span class="line">&lt;h1&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;div&gt;</span><br></pre></td></tr></table></figure><p>内联元素只需要必要的宽度，不强制换行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">内联元素的例子：</span><br><span class="line">&lt;span&gt;</span><br><span class="line">&lt;a&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">下面的示例把列表项显示为内联元素：</span><br><span class="line">li&#123;</span><br><span class="line">  display:inline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">下面的示例把span元素作为块元素：</span><br><span class="line">span&#123;</span><br><span class="line">  display:block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CSS-Position-定位"><a href="#CSS-Position-定位" class="headerlink" title="CSS-Position(定位)"></a>CSS-Position(定位)</h2><ul><li><p>默认值，即没有定位，遵循正常的文档流对象。</p></li><li><p>static定位</p></li></ul><p>静态定位的元素不会受到 top, bottom, left, right影响。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">div.static &#123;</span><br><span class="line">  position: static;</span><br><span class="line">  border: 3px solid #73AD21;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>fixed 定位</li></ul><p>元素的位置相对于浏览器窗口是固定位置。即使窗口是滚动的它也不会移动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p.pos_fixed&#123;</span><br><span class="line">  position:fixed;</span><br><span class="line">  top:30px;</span><br><span class="line">  right:5px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>relative 定位</li></ul><p>相对定位元素的定位是相对其正常位置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">h2.pos_left</span><br><span class="line">&#123;</span><br><span class="line">    position:relative;</span><br><span class="line">    left:-20px;</span><br><span class="line">&#125;</span><br><span class="line">移动相对定位元素，但它原本所占的空间不会改变。</span><br><span class="line">相对定位元素经常被用来作为绝对定位元素的容器块。</span><br></pre></td></tr></table></figure><ul><li>absolute 定位</li></ul><p>绝对定位的元素的位置相对于最近的已定位父元素，如果元素没有已定位的父元素，那么它的位置相对于html:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">h2&#123;</span><br><span class="line">  position:absolute;</span><br><span class="line">  left:100px;</span><br><span class="line">  top:150px;</span><br><span class="line">&#125;</span><br><span class="line">absolute 定位使元素的位置与文档流无关，因此不占据空间。</span><br><span class="line">absolute 定位的元素和其他元素重叠。</span><br></pre></td></tr></table></figure><ul><li>sticky 定位</li></ul><p>position:sticky;基于用户的滚动位置来定位。<br>粘性定位的元素是依赖于用户的滚动，在 position:relative 与 position:fixed 定位之间切换。<br>它的行为就像 position:relative; 而当页面滚动超出目标区域时，它的表现就像position:fixed;，它会固定在目标位置。<br>元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。<br>这个特定阈值指的是top,right,bottom或left之一，换言之，指定top,right,bottom或left四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">注意:Internet Explorer, Edge15及更早IE版本不支持sticky定位。Safari需要使用-webkit- prefix(查看以下实例)。</span><br><span class="line"></span><br><span class="line">div.sticky &#123;</span><br><span class="line">  position: -webkit-sticky; /* Safari */</span><br><span class="line">  position: sticky;</span><br><span class="line">  top: 0;</span><br><span class="line">  background-color: green;</span><br><span class="line">  border: 2px solid #4CAF50;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>重叠的元素</li></ul><p>元素的定位与文档流无关，所以它们可以覆盖页面上的其它元素。<br>z-index属性指定了一个元素的堆叠顺序(哪个元素应该放在前面，或后面)<br>一个元素可以有正数或负数的堆叠顺序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">img&#123;</span><br><span class="line">  position:absolute;</span><br><span class="line">  left:0px;</span><br><span class="line">  top:0px;</span><br><span class="line">  z-index:-1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html（下）</title>
      <link href="/2019/10/16/2019-09-06-html-2/"/>
      <url>/2019/10/16/2019-09-06-html-2/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h2 id="HTML框架"><a href="#HTML框架" class="headerlink" title="HTML框架"></a>HTML框架</h2><p>通过使用框架，你可以在同一个浏览器窗口中显示不止一个页面。</p><ul><li>Iframe-设置高度与宽度<br>height和width属性用来定义iframe标签的高度与宽度。<br>属性默认以像素为单位, 但是你可以指定其按比例显示 (如：”80%”)。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;demo_iframe.htm&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><ul><li>Iframe-移除边框<br>frameborder 属性用于定义iframe表示是否显示边框。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">设置属性值为 &quot;0&quot; 移除iframe的边框:</span><br><span class="line">&lt;iframe src=&quot;demo_iframe.htm&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><ul><li>使用iframe来显示目标链接页面</li></ul><p>iframe可以显示一个目标链接的页面<br>目标链接的属性必须使用iframe的属性，如下实例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;demo_iframe.htm&quot; name=&quot;iframe_a&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;p&gt;&lt;a href=&quot;http://www.runoob.com&quot; target=&quot;iframe_a&quot;&gt;RUNOOB.COM&lt;/a&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><h2 id="HTML颜色"><a href="#HTML颜色" class="headerlink" title="HTML颜色"></a>HTML颜色</h2><p>HTML颜色由红色、绿色、蓝色混合而成。<br>颜色值<br>HTML 颜色由一个十六进制符号来定义，这个符号由红色、绿色和蓝色的值组成（RGB）。<br>每种颜色的最小值是0（十六进制：#00）。最大值是255（十六进制：#FF）。</p><h2 id="HTML事件属性"><a href="#HTML事件属性" class="headerlink" title="HTML事件属性"></a>HTML事件属性</h2><ul><li>窗口事件属性（Window Event Attributes）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">onbeforeonloadNew      -  在文档加载之前运行脚本</span><br><span class="line">onblur                 -  当窗口失去焦点时运行脚本</span><br><span class="line">onerrorNew             -  当错误发生时运行脚本</span><br><span class="line">onfocus                -  当窗口获得焦点时运行脚本</span><br><span class="line">onhaschangeNew         -  当文档改变时运行脚本</span><br><span class="line">onload                 -  当文档加载时运行脚本</span><br><span class="line">onmessageNew           -  当触发消息时运行脚本</span><br><span class="line">onofflineNew           -  当文档离线时运行脚本</span><br><span class="line">ononlineNew            -  当文档上线时运行脚本</span><br></pre></td></tr></table></figure><ul><li>表单事件(Form Events)</li></ul><p>表单事件在HTML表单中触发 (适用于所有 HTML 元素, 但该HTML元素需在form表单内):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">onblur                  -  当元素失去焦点时运行脚本</span><br><span class="line">onchange                -  当元素改变时运行脚本</span><br><span class="line">oncontextmenuNew        -  当触发上下文菜单时运行脚本</span><br><span class="line">onfocus                 -  当元素获得焦点时运行脚本</span><br><span class="line">onformchangeNew         -  当表单改变时运行脚本</span><br><span class="line">onforminputNew          -  当表单获得用户输入时运行脚本</span><br><span class="line">oninputNew              -  当元素获得用户输入时运行脚本</span><br><span class="line">oninvalidNew            -  当元素无效时运行脚本</span><br><span class="line">onreset                 -  当表单重置时运行脚本。HTML 5 不支持。</span><br><span class="line">onselect                -  当选取元素时运行脚本</span><br><span class="line">onsubmit                -  当提交表单时运行脚本</span><br></pre></td></tr></table></figure><ul><li>键盘事件（Keyboard Events）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onkeydown               -  当按下按键时运行脚本</span><br><span class="line">onkeypress              -  当按下并松开按键时运行脚本</span><br><span class="line">onkeyup                 -  当松开按键时运行脚本</span><br></pre></td></tr></table></figure><ul><li>鼠标事件（Mouse Events）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">onclick                 -  当单击鼠标时运行脚本</span><br><span class="line">ondblclick              -  当双击鼠标时运行脚本</span><br><span class="line">onmousedown             -  当按下鼠标按钮时运行脚本</span><br><span class="line">onmousemove             -  当鼠标指针移动时运行脚本</span><br><span class="line">onmouseout              -  当鼠标指针移出元素时运行脚本</span><br><span class="line">onmouseover             -  当鼠标指针移至元素之上时运行脚本</span><br><span class="line">onmouseup               -  当松开鼠标按钮时运行脚本</span><br></pre></td></tr></table></figure><ul><li>多媒体事件(Media Events)<br>通过视频（videos），图像（images）或者音频（audio）触发该事件，多应用于HTML媒体元素比如audio,embed,img,object, 和video)。</li></ul>]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css(1)</title>
      <link href="/2019/10/16/2019-09-07-css-1/"/>
      <url>/2019/10/16/2019-09-07-css-1/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h2 id="CSS语法"><a href="#CSS语法" class="headerlink" title="CSS语法"></a>CSS语法</h2><p>CSS规则由两个主要的部分构成：选择器，以及一条或多条声明:</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/07/632877C9-2462-41D6-BD0E-F7317E4C42AC.jpg" alt="说明"></p><p>选择器通常是您需要改变样式的HTML元素。<br>每条声明由一个属性和一个值组成。<br>属性（property）是您希望设置的样式属性（style attribute）。每个属性有一个值。属性和值被冒号分开。</p><ul><li>CSS声明</li></ul><p>总是以分号(;)结束，声明总以大括号({})括起来:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">p&#123;</span><br><span class="line">  color:red;</span><br><span class="line">  text-align:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>CSS注释</li></ul><p>注释是用来解释你的代码，并且可以随意编辑它，浏览器会忽略它。<br>CSS注释以 “/*” 开始, 以 “*/“ 结束, 实例如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/*这是个注释*/</span><br><span class="line">p&#123;</span><br><span class="line">  text-align:center;</span><br><span class="line">  /*这是另一个注释*/</span><br><span class="line">  color:black;</span><br><span class="line">  font-family:arial;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="id和class选择器"><a href="#id和class选择器" class="headerlink" title="id和class选择器"></a>id和class选择器</h2><ul><li>id选择器</li></ul><p>id选择器可以为标有特定id的HTML元素指定特定的样式。<br>HTML元素以id属性来设置id选择器,CSS中id选择器以”#”来定义。<br>以下的样式规则应用于元素属性 id=”para1”:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#para1&#123;</span><br><span class="line">    text-align:center;</span><br><span class="line">    color:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>class选择器</li></ul><p>class选择器用于描述一组元素的样式,class选择器有别于id选择器，class可以在多个元素中使用。<br>class选择器在HTML中以class属性表示, 在CSS中，类选择器以一个点”.”号显示：<br>在以下的例子中，所有拥有 center 类的 HTML 元素均为居中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.center &#123;text-align:center;&#125;</span><br></pre></td></tr></table></figure><h2 id="如何插入样式表"><a href="#如何插入样式表" class="headerlink" title="如何插入样式表"></a>如何插入样式表</h2><p>插入样式表的方法有三种:外部样式表(External style sheet)、内部样式表(Internal style sheet)、内联样式(Inline style)。</p><ul><li>外部样式表</li></ul><p>当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用link标签链接到样式表。link标签在（文档的）头部：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><ul><li>内部样式表</li></ul><p>当单个文档需要特殊的样式时，就应该使用内部样式表。你可以使用style标签在文档头部定义内部样式表，就像这样:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  hr &#123;color:sienna;&#125;</span><br><span class="line">  p &#123;margin-left:20px;&#125;</span><br><span class="line">  body &#123;background-image:url(&quot;images/back40.gif&quot;);&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><ul><li>内联样式</li></ul><p>由于要将表现和内容混杂在一起，内联样式会损失掉样式表的许多优势。请慎用这种方法，例如当样式仅需要在一个元素上应用一次时。<br>要使用内联样式，你需要在相关的标签内使用样式（style）属性。Style属性可以包含任何CSS属性。本例展示如何改变段落的颜色和左外边距：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style=&quot;color:sienna;margin-left:20px&quot;&gt;这是一个段落。&lt;/p&gt;</span><br></pre></td></tr></table></figure><ul><li>多重样式优先级</li></ul><p>样式表允许以多种方式规定样式信息。样式可以规定在单个的HTML元素中，在HTML页的头元素中，或在一个外部的CSS文件中。甚至可以在同一个HTML文档内部引用多个外部样式表。<br>一般情况下，优先级如下：<br>内联样式）Inline style&gt;(内部样式）Internal style sheet&gt;（外部样式）External style sheet&gt;浏览器默认样式</p><h2 id="CSS背景"><a href="#CSS背景" class="headerlink" title="CSS背景"></a>CSS背景</h2><p>CSS背景属性用于定义HTML元素的背景。<br>CSS 属性定义背景效果:background-color、background-image、background-repeat、background-attachment、background-position。</p><ul><li>background-color</li></ul><p>定义了元素的背景颜色。<br>页面的背景颜色使用在body的选择器中:body {background-color:#b0c4de;}。<br>CSS中，颜色值通常以以下方式定义:<br>十六进制 - 如：”#ff0000”<br>RGB - 如：”rgb(255,0,0)”<br>颜色名称 - 如：”red”</p><ul><li>background-image</li></ul><p>描述了元素的背景图像，默认情况下，背景图像进行平铺重复显示，以覆盖整个元素实体。<br>页面背景图片设置实例:body {background-image:url(‘paper.gif’);}。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">默认情况下background-image属性会在页面的水平或者垂直方向平铺。</span><br><span class="line">一些图像如果在水平方向与垂直方向平铺，这样看起来很不协调。</span><br><span class="line">body&#123;</span><br><span class="line">  background-image:url(&apos;gradient2.png&apos;);</span><br><span class="line">&#125;</span><br><span class="line">如果图像只在水平方向平铺(repeat-x),页面背景会更好些:</span><br><span class="line">body&#123;</span><br><span class="line">  background-image:url(&apos;gradient2.png&apos;);</span><br><span class="line">  background-repeat:repeat-x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">如果你不想让图像平铺，你可以使用background-repeat属性:</span><br><span class="line">body&#123;</span><br><span class="line">  background-image:url(&apos;img_tree.png&apos;);</span><br><span class="line">  background-repeat:no-repeat;</span><br><span class="line">&#125;</span><br><span class="line">背景图像与文本显示在同一个位置，为了让页面排版更加合理，不影响文本的阅读，我们可以改变图像的位置。</span><br><span class="line">可以利用background-position属性改变图像在背景中的位置:</span><br><span class="line">body&#123;</span><br><span class="line">  background-image:url(&apos;img_tree.png&apos;);</span><br><span class="line">  background-repeat:no-repeat;</span><br><span class="line">  background-position:right top;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在以上实例中我们可以看到页面的背景颜色通过了很多的属性来控制。为了简化这些属性的代码，我们可以将这些属性合并在同一个属性中。背景颜色的简写属性为&quot;background&quot;:</span><br><span class="line">body &#123;background:#ffffff url(&apos;img_tree.png&apos;) no-repeat right top;&#125;</span><br><span class="line">当使用简写属性时，属性值的顺序为：:</span><br><span class="line">background-color</span><br><span class="line">background-image</span><br><span class="line">background-repeat</span><br><span class="line">background-attachment</span><br><span class="line">background-position</span><br></pre></td></tr></table></figure><h2 id="CSS文本格式"><a href="#CSS文本格式" class="headerlink" title="CSS文本格式"></a>CSS文本格式</h2><ul><li>文本颜色</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">body &#123;color:red;&#125;</span><br><span class="line">h1 &#123;color:#00ff00;&#125;</span><br><span class="line">h2 &#123;color:rgb(255,0,0);&#125;</span><br></pre></td></tr></table></figure><ul><li>文本的对齐方式</li></ul><p>文本排列属性是用来设置文本的水平对齐方式,文本可居中或对齐到左或右,两端对齐.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当text-align设置为&quot;justify&quot;，每一行被展开为宽度相等，左，右外边距是对齐（如杂志和报纸）。</span><br><span class="line">h1 &#123;text-align:center;&#125;</span><br><span class="line">p.date &#123;text-align:right;&#125;</span><br><span class="line">p.main &#123;text-align:justify;&#125;</span><br></pre></td></tr></table></figure><ul><li>文本修饰</li></ul><p>text-decoration属性用来设置或删除文本的装饰。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">从设计的角度看 text-decoration属性主要是用来删除链接的下划线：</span><br><span class="line">a  &#123;text-decoration:none;&#125;</span><br><span class="line">h1 &#123;text-decoration:overline;&#125;</span><br><span class="line">h2 &#123;text-decoration:line-through;&#125;</span><br><span class="line">h3 &#123;text-decoration:underline;&#125;</span><br></pre></td></tr></table></figure><ul><li>文本转换</li></ul><p>文本转换属性是用来指定在一个文本中的大写和小写字母。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">可用于所有字句变成大写或小写字母，或每个单词的首字母大写。</span><br><span class="line">p.uppercase &#123;text-transform:uppercase;&#125;</span><br><span class="line">p.lowercase &#123;text-transform:lowercase;&#125;</span><br><span class="line">p.capitalize &#123;text-transform:capitalize;&#125;</span><br></pre></td></tr></table></figure><ul><li>文本缩进</li></ul><p>文本缩进属性是用来指定文本的第一行的缩进。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p &#123;text-indent:50px;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">color                   设置文本颜色</span><br><span class="line">direction               设置文本方向</span><br><span class="line">letter-spacing          设置字符间距</span><br><span class="line">line-height             设置行高</span><br><span class="line">text-align              对齐元素中的文本</span><br><span class="line">text-decoration         向文本添加修饰</span><br><span class="line">text-indent             缩进元素中文本的首行</span><br><span class="line">text-shadow             设置文本阴影</span><br><span class="line">text-transform          控制元素中的字母</span><br><span class="line">unicode-bidi            设置或返回文本是否被重写 </span><br><span class="line">vertical-align          设置元素的垂直对齐</span><br><span class="line">white-space             设置元素中空白的处理方式</span><br><span class="line">word-spacing            设置字间距</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css(2)</title>
      <link href="/2019/10/16/2019-09-09-css-2/"/>
      <url>/2019/10/16/2019-09-09-css-2/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h2 id="CSS字体"><a href="#CSS字体" class="headerlink" title="CSS字体"></a>CSS字体</h2><ul><li>字体系列</li></ul><p>font-family属性设置文本的字体系列。<br>注意: 如果字体系列的名称超过一个字，它必须用引号，如Font Family：”宋体”。<br>多个字体系列是用一个逗号分隔指明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p.serif&#123;font-family:&quot;Times New Roman&quot;,Times,serif;&#125;</span><br><span class="line">p.sansserif&#123;font-family:Arial,Helvetica,sans-serif;&#125;</span><br></pre></td></tr></table></figure><ul><li>字体样式</li></ul><p>主要是用于指定斜体文字的字体样式属性。<br>这个属性有三个值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">正常 - 正常显示文本</span><br><span class="line">斜体 - 以斜体字显示的文字</span><br><span class="line">倾斜的文字 - 文字向一边倾斜（和斜体非常类似，但不太支持）</span><br><span class="line">p.normal &#123;font-style:normal;&#125;</span><br><span class="line">p.italic &#123;font-style:italic;&#125;</span><br><span class="line">p.oblique &#123;font-style:oblique;&#125;</span><br></pre></td></tr></table></figure><ul><li>字体大小</li></ul><p>设置字体大小像素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">h1 &#123;font-size:40px;&#125;</span><br><span class="line">h2 &#123;font-size:30px;&#125;</span><br><span class="line">p &#123;font-size:14px;&#125;</span><br></pre></td></tr></table></figure><p>用em来设置字体大小<br>1em和当前字体大小相等。在浏览器中默认的文字大小是16px。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">因此，1em的默认大小是16px。可以通过下面这个公式将像素转换为em：px/16=em</span><br><span class="line">h1 &#123;font-size:2.5em;&#125; /* 40px/16=2.5em */</span><br><span class="line">h2 &#123;font-size:1.875em;&#125; /* 30px/16=1.875em */</span><br><span class="line">p &#123;font-size:0.875em;&#125; /* 14px/16=0.875em */</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">font                在一个声明中设置所有的字体属性</span><br><span class="line">font-family         指定文本的字体系列</span><br><span class="line">font-size           指定文本的字体大小</span><br><span class="line">font-style          指定文本的字体样式</span><br><span class="line">font-variant        以小型大写字体或者正常字体显示文本</span><br><span class="line">font-weight         指定字体的粗细</span><br></pre></td></tr></table></figure><h2 id="CSS链接"><a href="#CSS链接" class="headerlink" title="CSS链接"></a>CSS链接</h2><ul><li>链接样式</li></ul><p>链接的样式，可以用任何CSS属性(颜色)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a:link &#123;color:#000000;&#125;      /* 未访问链接*/</span><br><span class="line">a:visited &#123;color:#00FF00;&#125;  /* 已访问链接 */</span><br><span class="line">a:hover &#123;color:#FF00FF;&#125;  /* 鼠标移动到链接上 */</span><br><span class="line">a:active &#123;color:#0000FF;&#125;  /* 鼠标点击时 */</span><br><span class="line"></span><br><span class="line">a:hover   必须跟在 a:link 和 a:visited后面</span><br><span class="line">a:active  必须跟在 a:hover后面</span><br></pre></td></tr></table></figure><p>text-decoration 属性主要用于删除链接中的下划线：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a:link &#123;text-decoration:none;&#125;</span><br><span class="line">a:visited &#123;text-decoration:none;&#125;</span><br><span class="line">a:hover &#123;text-decoration:underline;&#125;</span><br><span class="line">a:active &#123;text-decoration:underline;&#125;</span><br></pre></td></tr></table></figure><p>背景颜色属性指定链接背景色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a:link &#123;background-color:#B2FF99;&#125;</span><br><span class="line">a:visited &#123;background-color:#FFFF85;&#125;</span><br><span class="line">a:hover &#123;background-color:#FF704D;&#125;</span><br><span class="line">a:active &#123;background-color:#FF704D;&#125;</span><br></pre></td></tr></table></figure><h2 id="CSS列表"><a href="#CSS列表" class="headerlink" title="CSS列表"></a>CSS列表</h2><ul><li>不同的列表项标记</li></ul><p>list-style-type属性指定列表项标记的类型是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ul.a &#123;list-style-type: circle;&#125;</span><br><span class="line">ul.b &#123;list-style-type: square;&#125; </span><br><span class="line">ol.c &#123;list-style-type: upper-roman;&#125;</span><br><span class="line">ol.d &#123;list-style-type: lower-alpha;&#125;</span><br></pre></td></tr></table></figure><ul><li>作为列表项标记的图像</li></ul><p>要指定列表项标记的图像，使用列表样式图像属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ul&#123;</span><br><span class="line">  list-style-image: url(&apos;sqpurple.gif&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>列表-简写属性</li></ul><p>在单个属性中可以指定所有的列表属性。这就是所谓的简写属性。<br>为列表使用简写属性，列表样式属性设置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ul&#123;</span><br><span class="line">  list-style: square url(&quot;sqpurple.gif&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">可以按顺序设置如下属性：</span><br><span class="line">list-style-type</span><br><span class="line">list-style-position (有关说明，请参见下面的CSS属性表)</span><br><span class="line">list-style-image</span><br></pre></td></tr></table></figure><h2 id="CSS表格"><a href="#CSS表格" class="headerlink" title="CSS表格"></a>CSS表格</h2><ul><li>表格边框</li></ul><p>指定CSS表格边框，使用border属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">下面的例子指定了一个表格的Th和TD元素的黑色边框：</span><br><span class="line">table, th, td&#123;</span><br><span class="line">    border: 1px solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>折叠边框</li></ul><p>border-collapse 属性设置表格的边框是否被折叠成一个单一的边框或隔开：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">table&#123;</span><br><span class="line">    border-collapse:collapse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>表格宽度和高度</li></ul><p>Width和height属性定义表格的宽度和高度。</p><p>下面的例子是设置100％的宽度，50像素的th元素的高度的表格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">table,th&#123;</span><br><span class="line">  width:100%;</span><br><span class="line">  height:50px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>表格文字对齐</li></ul><p>表格中的文本对齐和垂直对齐属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">text-align属性设置水平对齐方式，向左，右，或中心：</span><br><span class="line">td&#123;</span><br><span class="line">  text-align:right;</span><br><span class="line">&#125;</span><br><span class="line">垂直对齐属性设置垂直对齐，比如顶部，底部或中间：</span><br><span class="line">td&#123;</span><br><span class="line">  height:50px;</span><br><span class="line">  vertical-align:bottom;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>表格填充</li></ul><p>如果在表的内容中控制空格之间的边框，应使用td和th元素的填充属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">td&#123;</span><br><span class="line">  padding:15px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>表格颜色</li></ul><p>下面的例子指定边框的颜色，和th元素的文本和背景颜色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">th&#123;</span><br><span class="line">  background-color:green;</span><br><span class="line">  color:white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CSS盒子模型"><a href="#CSS盒子模型" class="headerlink" title="CSS盒子模型"></a>CSS盒子模型</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Margin(外边距)            -清除边框外的区域，外边距是透明的。</span><br><span class="line">Border(边框)              -围绕在内边距和内容外的边框。</span><br><span class="line">Padding(内边距)           -清除内容周围的区域，内边距是透明的。</span><br><span class="line">Content(内容)             -盒子的内容，显示文本和图像。</span><br></pre></td></tr></table></figure><h2 id="css边框"><a href="#css边框" class="headerlink" title="css边框"></a>css边框</h2><ul><li>border-style属性用来定义边框的样式</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">border-style 值:</span><br><span class="line">none: 默认无边框</span><br><span class="line">dotted: 定义一个点线边框</span><br><span class="line">dashed: 定义一个虚线边框</span><br><span class="line">solid: 定义实线边框</span><br><span class="line">double: 定义两个边框。 两个边框的宽度和 border-width 的值相同</span><br><span class="line">groove: 定义3D沟槽边框。效果取决于边框的颜色值</span><br><span class="line">ridge: 定义3D脊边框。效果取决于边框的颜色值</span><br><span class="line">inset:定义一个3D的嵌入边框。效果取决于边框的颜色值</span><br><span class="line">outset: 定义一个3D突出边框。 效果取决于边框的颜色值</span><br><span class="line"></span><br><span class="line">border-style属性可以有1-4个值：</span><br><span class="line">border-style:dotted solid double dashed;</span><br><span class="line">上边框是 dotted</span><br><span class="line">右边框是 solid</span><br><span class="line">底边框是 double</span><br><span class="line">左边框是 dashed</span><br></pre></td></tr></table></figure><ul><li><p>border-color属性用于设置边框的颜色。</p></li><li><p>边框-简写属性</p></li></ul><p>可以在一个属性中设置边框。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">border-width</span><br><span class="line">border-style (required)</span><br><span class="line">border-color</span><br><span class="line">实例</span><br><span class="line">border:5px solid red;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jquery（下）</title>
      <link href="/2019/10/16/2019-09-04-jquery-3/"/>
      <url>/2019/10/16/2019-09-04-jquery-3/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="jquery"><a href="#jquery" class="headerlink" title="jquery"></a>jquery</h1><ul><li>jquery的尺寸</li></ul><p>1.width()和height()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">width()方法设置或返回元素的宽度（不包括内边距、边框或外边距）。</span><br><span class="line">height()方法设置或返回元素的高度（不包括内边距、边框或外边距）。</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  var txt=&quot;&quot;;</span><br><span class="line">  txt+=&quot;div 的宽度是: &quot; + $(&quot;#div1&quot;).width() + &quot;&lt;/br&gt;&quot;;</span><br><span class="line">  txt+=&quot;div 的高度是: &quot; + $(&quot;#div1&quot;).height();</span><br><span class="line">  $(&quot;#div1&quot;).html(txt);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.innerWidth()和innerHeight()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">innerWidth()方法返回元素的宽度（包括内边距）。</span><br><span class="line">innerHeight()方法返回元素的高度（包括内边距）。</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  var txt=&quot;&quot;;</span><br><span class="line">  txt+=&quot;div 宽度，包含内边距: &quot; + $(&quot;#div1&quot;).innerWidth() + &quot;&lt;/br&gt;&quot;;</span><br><span class="line">    txt+=&quot;div 高度，包含内边距: &quot; + $(&quot;#div1&quot;).innerHeight();</span><br><span class="line">  $(&quot;#div1&quot;).html(txt);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3.outerWidth()和outerHeight()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">outerWidth()方法返回元素的宽度（包括内边距和边框）。</span><br><span class="line">outerHeight()方法返回元素的高度（包括内边距和边框）。</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  var txt=&quot;&quot;;</span><br><span class="line">  txt+=&quot;div 宽度，包含内边距和边框: &quot; + $(&quot;#div1&quot;).outerWidth() + &quot;&lt;/br&gt;&quot;;</span><br><span class="line">  txt+=&quot;div 高度，包含内边距和边框: &quot; + $(&quot;#div1&quot;).outerHeight();</span><br><span class="line">  $(&quot;#div1&quot;).html(txt);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>jquery的遍历-祖先</li></ul><p>1.parent()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">返回被选元素的直接父元素。</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;span&quot;).parent();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.parents()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">返回被选元素的所有祖先元素，它一路向上直到文档的根元素(&lt;html&gt;)。</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;span&quot;).parents();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">返回所有&lt;span&gt;元素的所有祖先，并且它是&lt;ul&gt;元素：</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;span&quot;).parents(&quot;ul&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3.parentsUntil()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">返回介于两个给定元素之间的所有祖先元素。</span><br><span class="line">如：</span><br><span class="line">返回介于&lt;span&gt;与&lt;div&gt;元素之间的所有祖先元素。</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;span&quot;).parentsUntil(&quot;div&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>jquery的遍历-后代</li></ul><p>1.children() </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">返回被选元素的所有直接子元素。</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;div&quot;).children();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.find()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">返回被选元素的后代元素，一路向下直到最后一个后代。</span><br><span class="line">返回属于&lt;div&gt;后代的所有&lt;span&gt;元素：</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;div&quot;).find(&quot;span&quot;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">返回&lt;div&gt;的所有后代：</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;div&quot;).find(&quot;*&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>jquery的遍历-同胞</li></ul><p>1.siblings()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">返回被选元素的所有同胞元素。</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;h2&quot;).siblings();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.next()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">返回被选元素的下一个同胞元素。该方法只返回一个元素。</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;h2&quot;).next();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.nextAll()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">返回被选元素的所有下面的同胞元素。</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;h2&quot;).nextAll();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3.nextUntil()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">返回介于两个给定参数之间的所有跟随的同胞元素。</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;h2&quot;).nextUntil(&quot;h6&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>4.prev(),prevAll()&amp;prevUntil()方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prev(),prevAll()以及prevUntil()方法的工作方式与上面的方法类似，只不过方向相反而已：它们返回的是前面的同胞元素（在DOM树中沿着同胞之前元素遍历，而不是之后元素遍历）。</span><br></pre></td></tr></table></figure><ul><li>jquery的遍历-过滤</li></ul><p>1.first()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">返回被选元素的首个元素。如，选取首个&lt;div&gt;元素内部的第一个&lt;p&gt;元素：</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;div p&quot;).first();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.last()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">返回被选元素的最后一个元素。如选择最后一个&lt;div&gt;元素中的最后一个 &lt;p&gt; 元素：</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;div p&quot;).last();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3.filter()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">不匹配这个标准的元素会被从集合中删除，匹配的元素会被返回。如，返回带有类名 &quot;url&quot; 的所有 &lt;p&gt; 元素：</span><br><span class="line"> $(document).ready(function()&#123;</span><br><span class="line">   $(&quot;p&quot;).filter(&quot;.url&quot;);</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><p>4.not()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">返回不匹配标准的所有元素。not()方法与filter()相反。</span><br><span class="line">如，返回不带有类名&quot;url&quot;的所有&lt;p&gt;元素：</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;p&quot;).not(&quot;.url&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jquery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jquery（中）</title>
      <link href="/2019/10/16/2019-09-03-jquery-2/"/>
      <url>/2019/10/16/2019-09-03-jquery-2/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="jquery"><a href="#jquery" class="headerlink" title="jquery"></a>jquery</h1><ul><li>jquery的动画</li></ul><p>1.animate()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">用于创建自定义动画。</span><br><span class="line">$(selector).animate(&#123;params&#125;,speed,callback);</span><br><span class="line">必需的params参数定义形成动画的CSS属性。</span><br><span class="line">可选的speed参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</span><br><span class="line">可选的callback参数是动画完成后所执行的函数名称。</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;div&quot;).animate(&#123;left:&apos;250px&apos;&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.animate()-操作多个属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">生成动画的过程中可同时使用多个属性。</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;div&quot;).animate(&#123;</span><br><span class="line">    left:&apos;250px&apos;,</span><br><span class="line">    opacity:&apos;0.5&apos;,</span><br><span class="line">    height:&apos;150px&apos;,</span><br><span class="line">    width:&apos;150px&apos;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3.animate()-使用相对值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">可以定义相对值（该值相对于元素的当前值）。需要在值的前面加上 += 或 -=：</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;div&quot;).animate(&#123;</span><br><span class="line">    left:&apos;250px&apos;,</span><br><span class="line">    height:&apos;+=150px&apos;,</span><br><span class="line">    width:&apos;+=150px&apos;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>4.animate()-使用预定义的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">可以把属性的动画值设置为&quot;show&quot;、&quot;hide&quot;或&quot;toggle&quot;：</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;div&quot;).animate(&#123;</span><br><span class="line">    height:&apos;toggle&apos;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>5.animate()-使用队列功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">编写多个animate()调用，jQuery会创建包含这些方法调用的&quot;内部&quot;队列。然后逐一运行这些animate调用：</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  var div=$(&quot;div&quot;);</span><br><span class="line">  div.animate(&#123;height:&apos;300px&apos;,opacity:&apos;0.4&apos;&#125;,&quot;slow&quot;);</span><br><span class="line">  div.animate(&#123;width:&apos;300px&apos;,opacity:&apos;0.8&apos;&#125;,&quot;slow&quot;);</span><br><span class="line">  div.animate(&#123;height:&apos;100px&apos;,opacity:&apos;0.4&apos;&#125;,&quot;slow&quot;);</span><br><span class="line">  div.animate(&#123;width:&apos;100px&apos;,opacity:&apos;0.8&apos;&#125;,&quot;slow&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>jquery的停止动画</li></ul><p>1.stop()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">用于停止动画或效果，在它们完成之前。</span><br><span class="line">stop()方法适用于所有jQuery效果函数，包括滑动、淡入淡出和自定义动画。</span><br><span class="line">$(selector).stop(stopAll,goToEnd);</span><br><span class="line">可选的stopAll参数规定是否应该清除动画队列。默认是 false，即仅停止活动的动画，允许任何排入队列的动画向后执行。</span><br><span class="line">可选的goToEnd参数规定是否立即完成当前动画。默认是 false。</span><br><span class="line">因此，默认地，stop()会清除在被选元素上指定的当前动画。</span><br><span class="line">$(&quot;#stop&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;#panel&quot;).stop();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>jquery的链<br>有一种名为链接（chaining）的技术，允许我们在相同的元素上运行多条jQuery命令，一条接着另一条。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如:</span><br><span class="line">$(&quot;#p1&quot;).css(&quot;color&quot;,&quot;red&quot;)</span><br><span class="line">.slideUp(2000)</span><br><span class="line">.slideDown(2000);</span><br></pre></td></tr></table></figure><ul><li>jquery的设置内容和属性</li></ul><p>1.设置内容-text()、html()以及val()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text()   设置或返回所选元素的文本内容。</span><br><span class="line">html()   设置或返回所选元素的内容（包括HTML标记）</span><br><span class="line">val()    设置或返回表单字段的值</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#btn1&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;#test1&quot;).text(&quot;Hello world!&quot;);</span><br><span class="line">&#125;);</span><br><span class="line">$(&quot;#btn2&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;#test2&quot;).html(&quot;&lt;b&gt;Hello world!&lt;/b&gt;&quot;);</span><br><span class="line">&#125;);</span><br><span class="line">$(&quot;#btn3&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;#test3&quot;).val(&quot;RUNOOB&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.设置属性-attr()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用于设置/改变属性值。</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;#runoob&quot;).attr(&quot;href&quot;,&quot;http://www.runoob.com/jquery&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>jquery的添加元素</li></ul><p>1.append() </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在被选元素的结尾插入内容（仍然该元素的内部）。</span><br><span class="line">$(&quot;p&quot;).append(&quot;追加文本&quot;);</span><br></pre></td></tr></table></figure><p>2.prepend()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在被选元素的开头插入内容。</span><br><span class="line">$(&quot;p&quot;).prepend(&quot;在开头追加文本&quot;);</span><br></pre></td></tr></table></figure><p>3.after()和before()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">after()方法在被选元素之后插入内容。before()方法在被选元素之前插入内容。</span><br><span class="line">$(&quot;img&quot;).after(&quot;在后面添加文本&quot;);</span><br><span class="line">$(&quot;img&quot;).before(&quot;在前面添加文本&quot;);</span><br></pre></td></tr></table></figure><ul><li>jquery的删除元素</li></ul><p>1.remove()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">删除被选元素及其子元素。</span><br><span class="line">$(&quot;#div1&quot;).remove();</span><br></pre></td></tr></table></figure><p>2.empty()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">删除被选元素的子元素。</span><br><span class="line">$(&quot;#div1&quot;).empty();</span><br></pre></td></tr></table></figure><ul><li>jquery获取并设置css类</li></ul><p>1.addClass()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">如何向不同的元素添加class属性。</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;h1,h2,p&quot;).addClass(&quot;blue&quot;);</span><br><span class="line">  $(&quot;div&quot;).addClass(&quot;important&quot;);</span><br><span class="line">&#125;);</span><br><span class="line">也可以在 addClass() 方法中规定多个类：</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;body div:first&quot;).addClass(&quot;important blue&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.removeClass()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在不同的元素中删除指定的class属性:</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;h1,h2,p&quot;).removeClass(&quot;blue&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3.toggleClass()<br>该方法对被选元素进行添加/删除类的切换操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;h1,h2,p&quot;).toggleClass(&quot;blue&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>jquery的css()方法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">设置CSS属性</span><br><span class="line">如需设置指定的CSS属性，请使用如下语法：</span><br><span class="line">css(&quot;propertyname&quot;,&quot;value&quot;);</span><br><span class="line">下面的例子将为所有匹配元素设置 background-color 值：</span><br><span class="line">$(&quot;p&quot;).css(&quot;background-color&quot;,&quot;yellow&quot;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jquery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html（上）</title>
      <link href="/2019/10/16/2019-09-05-html-1/"/>
      <url>/2019/10/16/2019-09-05-html-1/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><p>超文本标记语言(英语：HyperText Markup Language，简称：HTML)是一种用于创建网页的标准标记语言。</p><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><ul><li>标题</li></ul><p>HTML标题（Heading）是通过h1 - h6标签来定义的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;这是一个标题&lt;/h1&gt;</span><br><span class="line">&lt;h2&gt;这是一个标题&lt;/h2&gt;</span><br><span class="line">&lt;h3&gt;这是一个标题&lt;/h3&gt;</span><br></pre></td></tr></table></figure><ul><li>水平线</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;hr&gt; 标签在HTML页面中创建水平线</span><br></pre></td></tr></table></figure><ul><li>注释</li></ul><p>可以将注释插入HTML代码中，这样可以提高其可读性，使代码更易被人理解。浏览器会忽略注释，也不会显示它们。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 这是一个注释 --&gt;</span><br></pre></td></tr></table></figure><ul><li>段落</li></ul><p>HTML段落是通过标签p来定义的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;这是一个段落。&lt;/p&gt;</span><br><span class="line">&lt;p&gt;这是另外一个段落。&lt;/p&gt;</span><br></pre></td></tr></table></figure><ul><li>连接</li></ul><p>HTML链接是通过标签a来定义的.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;http://www.runoob.com&quot;&gt;这是一个链接&lt;/a&gt;</span><br><span class="line">使用 target 属性，你可以定义被链接的文档在何处显示。下面的这行会在新窗口打开文档：</span><br><span class="line">&lt;a href=&quot;https://www.runoob.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;访问菜鸟教程!&lt;/a&gt;</span><br></pre></td></tr></table></figure><ul><li>图像</li></ul><p>HTML图像是通过标签img来定义的.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;/images/logo.png&quot; width=&quot;258&quot; height=&quot;39&quot; /&gt;</span><br><span class="line">alt 属性用来为图像定义一串预备的可替换的文本。替换文本属性的值是用户定义的。</span><br><span class="line">&lt;img src=&quot;boat.gif&quot; alt=&quot;Big Boat&quot;&gt;</span><br><span class="line">height（高度） 与 width（宽度）属性用于设置图像的高度与宽度。属性值默认单位为像素:</span><br><span class="line">&lt;img src=&quot;pulpit.jpg&quot; alt=&quot;Pulpit rock&quot; width=&quot;304&quot; height=&quot;228&quot;&gt;</span><br></pre></td></tr></table></figure><ul><li><p>HTML表格<br>表格由table标签来定义。每个表格均有若干行（由tr标签定义），每行被分割为若干单元格（由td标签定义）。字母td指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt; 定义表格</span><br><span class="line">&lt;th&gt;  定义表格的表头</span><br><span class="line">&lt;tr&gt;  定义表格的行</span><br><span class="line">&lt;td&gt;  定义表格单元</span><br></pre></td></tr></table></figure></li><li><p>无序列表</p></li></ul><p>无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记。无序列表使用ul标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;Coffee&lt;/li&gt;</span><br><span class="line">&lt;li&gt;Milk&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><ul><li>有序列表</li></ul><p>有序列表也是一列项目，列表项目使用数字进行标记。 有序列表始于ol标签。每个列表项始于li标签。<br>列表项使用数字来标记。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol&gt;</span><br><span class="line">&lt;li&gt;Coffee&lt;/li&gt;</span><br><span class="line">&lt;li&gt;Milk&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure><ul><li>HTML区块元素</li></ul><p>大多数HTML元素被定义为块级元素或内联元素。<br>块级元素在浏览器显示时，通常会以新行来开始（和结束）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实例: &lt;h1&gt;, &lt;p&gt;, &lt;ul&gt;, &lt;table&gt;</span><br></pre></td></tr></table></figure><ul><li>HTML 内联元素</li></ul><p>内联元素在显示时通常不会以新行开始。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实例: &lt;b&gt;, &lt;td&gt;, &lt;a&gt;, &lt;img&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt; 定义了文档的区域，块级 (block-level)</span><br><span class="line">&lt;span&gt;  用来组合文档中的行内元素， 内联元素(inline)</span><br></pre></td></tr></table></figure><ul><li>HTML表单</li></ul><p>表单是一个包含表单元素的区域。<br>表单元素是允许用户在表单中输入内容,比如：文本域(textarea)、下拉列表、单选框(radio-buttons)、复选框(checkboxes)等等。<br>表单使用表单标签form来设置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">.</span><br><span class="line">input 元素</span><br><span class="line">.</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><ul><li>HTML表单-输入元素</li></ul><p>多数情况下被用到的表单标签是输入标签（input）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">文本域（Text Fields）</span><br><span class="line">文本域通过&lt;input type=&quot;text&quot;&gt; 标签来设定，当用户要在表单中键入字母、数字等内容时，就会用到文本域。</span><br><span class="line">&lt;form&gt;</span><br><span class="line">First name: &lt;input type=&quot;text&quot; name=&quot;firstname&quot;&gt;&lt;br&gt;</span><br><span class="line">Last name: &lt;input type=&quot;text&quot; name=&quot;lastname&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">注意:表单本身并不可见。同时，在大多数浏览器中，文本域的默认宽度是20个字符。</span><br><span class="line"></span><br><span class="line">密码字段</span><br><span class="line">密码字段通过标签&lt;input type=&quot;password&quot;&gt; 来定义:</span><br><span class="line">&lt;form&gt;</span><br><span class="line">Password: &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">注意:密码字段字符不会明文显示，而是以星号或圆点替代。</span><br><span class="line"></span><br><span class="line">单选按钮（Radio Buttons）</span><br><span class="line">&lt;input type=&quot;radio&quot;&gt; 标签定义了表单单选框选项</span><br><span class="line">&lt;form&gt;</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;male&quot;&gt;Male&lt;br&gt;</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot;&gt;Female</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">复选框（Checkboxes）</span><br><span class="line">&lt;input type=&quot;checkbox&quot;&gt; 定义了复选框. 用户需要从若干给定的选择中选取一个或若干选项。</span><br><span class="line">&lt;form&gt;</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;vehicle&quot; value=&quot;Bike&quot;&gt;I have a bike&lt;br&gt;</span><br><span class="line">&lt;input type=&quot;checkbox&quot; name=&quot;vehicle&quot; value=&quot;Car&quot;&gt;I have a car</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">提交按钮(Submit Button)</span><br><span class="line">&lt;input type=&quot;submit&quot;&gt; 定义了提交按钮.</span><br><span class="line">当用户单击确认按钮时，表单的内容会被传送到另一个文件。表单的动作属性定义了目的文件的文件名。由动作属性定义的这个文件通常会对接收到的输入数据进行相关的处理。:</span><br><span class="line">&lt;form name=&quot;input&quot; action=&quot;html_form_action.php&quot; method=&quot;get&quot;&gt;</span><br><span class="line">Username: &lt;input type=&quot;text&quot; name=&quot;user&quot;&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p>HTML链接由a标签定义。链接的地址在href属性中指定：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;http://www.runoob.com&quot;&gt;这是一个链接&lt;/a&gt;</span><br><span class="line">属性值应该始终被包括在引号内。</span><br><span class="line">双引号是最常用的，不过使用单引号也没有问题。</span><br><span class="line">在某些个别的情况下，比如属性值本身就含有双引号，那么您必须使用单引号，例如：name=&apos;John &quot;ShotGun&quot; Nelson&apos;。</span><br></pre></td></tr></table></figure><h2 id="HTML头部"><a href="#HTML头部" class="headerlink" title="HTML头部"></a>HTML头部</h2><ul><li>HTMLhead元素</li></ul><p>head元素包含了所有的头部标签元素。在head元素中你可以插入脚本（scripts）, 样式文件（CSS），及各种meta信息。<br>可以添加在头部区域的元素标签为: title, style, meta, link, script, noscript,base。</p><ul><li>HTMLtitle元素</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title标签定义了不同文档的标题。</span><br><span class="line">title在 HTML/XHTML 文档中是必须的。</span><br><span class="line">title元素:</span><br><span class="line">定义了浏览器工具栏的标题</span><br><span class="line">当网页添加到收藏夹时，显示在收藏夹中的标题</span><br><span class="line">显示在搜索引擎结果页面的标题</span><br></pre></td></tr></table></figure><ul><li>HTMLbase元素</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;base&gt; 标签描述了基本的链接地址/链接目标，该标签作为HTML文档中所有的链接标签的默认链接:</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;base href=&quot;http://www.runoob.com/images/&quot; target=&quot;_blank&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><ul><li>HTMLlink元素</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;link&gt; 标签定义了文档与外部资源之间的关系。</span><br><span class="line">&lt;link&gt; 标签通常用于链接到样式表:</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><ul><li>HTMLstyle元素</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt; 标签定义了HTML文档的样式文件引用地址.</span><br><span class="line">在&lt;style&gt; 元素中你也可以直接添加样式来渲染 HTML 文档:</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">body &#123;background-color:yellow&#125;</span><br><span class="line">p &#123;color:blue&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远程连接服务器和linux下安装jdk</title>
      <link href="/2019/10/16/2019-08-31-yuan-cheng-lian-jie-he-jdk/"/>
      <url>/2019/10/16/2019-08-31-yuan-cheng-lian-jie-he-jdk/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="连接远程Windows服务器"><a href="#连接远程Windows服务器" class="headerlink" title="连接远程Windows服务器"></a>连接远程Windows服务器</h1><ul><li>安装rdesktop</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install rdesktop</span><br></pre></td></tr></table></figure><ul><li>连接服务器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rdesktop 47.101.185.11 -u Administrator -r disk:app=/home/raoweijia/桌面/node</span><br><span class="line">连接远程服务器，并把位于/home/raoweijia/桌面/node里的内容虚拟出一个映射盘在服务器上。</span><br><span class="line">-f 全屏</span><br><span class="line">-u xxxxxx 登录用户，可选</span><br><span class="line">-p xxxxxx 登录密码，可选</span><br><span class="line">-r clipboard:PRIMARYCLIPBOARD 重要，剪贴板可以与远程桌面交互</span><br><span class="line">-a 16 颜色，可选，不过最高就是16位</span><br><span class="line">-r disk:wj=/home/magicgod映射虚拟盘，可选，会在远程机器的网上邻居里虚拟出一个映射盘，功能很强，甚至可以是软盘或光盘</span><br></pre></td></tr></table></figure><ul><li>安装nodejs</li></ul><p>1.下载地址：<a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/download/</a><br>选择相应的版本下载,这里下载的是windows的zip文件。</p><p>2.解压缩  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">将下载的文件解压到要安装的位置，并新建两个目录：</span><br><span class="line">node-global :npm全局安装位置</span><br><span class="line">node-cache：npm 缓存路径</span><br></pre></td></tr></table></figure><p>3.配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将node.exe 所在的目录添加到path环境变量，这样我们在使用命令行时就可以在任意路径使用node命令</span><br></pre></td></tr></table></figure><p>那么node-global:npm全局安装位置，node-cache：npm缓存路径 又是怎么与npm发生关系呢？<br>通过如下命令进行配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;C:\Program Files\node\node-global&quot;</span><br><span class="line">npm config set cache &quot;C:\Program Files\node\node-cache&quot;</span><br></pre></td></tr></table></figure><p>4.在命令行中输入如下命令测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h1 id="linux下安装jdk"><a href="#linux下安装jdk" class="headerlink" title="linux下安装jdk"></a>linux下安装jdk</h1><ul><li><p>官网下载对应的.gz包<br>点击<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">下载</a></p></li><li><p>创建一个目录用于存放解压后的文件，并解压缩到该目录下</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir  /opt/java8</span><br><span class="line">sudo tar -zxvf jdk-8u221-linux-x64.tar.gz -C  /opt/java8</span><br></pre></td></tr></table></figure><ul><li>修改环境变量</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo vim ~/.bashrc</span><br><span class="line">进入文件，末尾追加如下内容：</span><br><span class="line">  export JAVA_HOME=/opt/java8/jdk1.8.0_221      //这里要注意目录要换成自己解压的jdk目录</span><br><span class="line">  export JRE_HOME=$&#123;JAVA_HOME&#125;/jre  </span><br><span class="line">  export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib  </span><br><span class="line">  export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure><ul><li>使环境变量生效</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><ul><li>设置系统默认jdk</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/java java /opt/java8/jdk1.8.0_211/bin/java 300  </span><br><span class="line">sudo update-alternatives --install /usr/bin/javac javac /opt/java8/jdk1.8.0_211/bin/javac 300  </span><br><span class="line">sudo update-alternatives --install /usr/bin/jar jar /opt/java8/jdk1.8.0_211/bin/jar 300   </span><br><span class="line">sudo update-alternatives --install /usr/bin/javah javah /opt/java8/jdk1.8.0_211/bin/javah 300   </span><br><span class="line">sudo update-alternatives --install /usr/bin/javap javap /opt/java8/jdk1.8.0_211/bin/javap 300</span><br><span class="line"></span><br><span class="line">然后执行：</span><br><span class="line">sudo update-alternatives --config java</span><br></pre></td></tr></table></figure><ul><li>测试是否安装成功</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><h1 id="突发情况"><a href="#突发情况" class="headerlink" title="突发情况"></a>突发情况</h1><p>Ubuntu的桌面不显示任何的快捷方式，而且不能往桌面上移动文件和目录。最简单的是重载桌面。<br>进入终端，执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install --reinstall ubuntu-desktop</span><br><span class="line">sudo apt-get install unity</span><br><span class="line">sudo shutdown -r now</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jdk rdesktop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jdk rdesktop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodejs之socket</title>
      <link href="/2019/10/16/2019-08-30-nodejs/"/>
      <url>/2019/10/16/2019-08-30-nodejs/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><p>ssh <a href="mailto:caoyang@192.168.15.7" target="_blank" rel="noopener">caoyang@192.168.15.7</a><br>登录对方的密码后，可以进行利用终端命令远程操作对方的电脑。</p><p>Node.js是一个基于Chrome V8引擎的JavaScript运行环境。它使用了一个事件驱动、非阻塞式I/O的模型。<br>Node是一个让JavaScript运行在服务端的开发平台，它让JavaScript成为与PHP、Python、Perl、Ruby等服务端语言平起平坐的脚本语言。</p><h1 id="nodejs下的socket"><a href="#nodejs下的socket" class="headerlink" title="nodejs下的socket"></a>nodejs下的socket</h1><h2 id="websocket"><a href="#websocket" class="headerlink" title="websocket"></a>websocket</h2><p>WebSocket是HTML5新增的协议，它的目的是在浏览器和服务器之间建立一个不受限的双向通信的通道，比如说，服务器可以在任意时刻发送消息给浏览器。</p><ul><li>打开websocket</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var Socket = new WebSocket(url,[protocol]);</span><br><span class="line">第一个参数url, 指定连接的URL。第二个参数protocol是可选的，指定了可接受的子协议。</span><br><span class="line"></span><br><span class="line">如： var Socket = new WebSocket(&apos;ws://localhost:3000/test&apos;);</span><br></pre></td></tr></table></figure><ul><li>WebSocket事件<br>我们使用了以上代码创建了Socket对象：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">事件         事件处理程序                描述</span><br><span class="line">open        Socket.onopen         连接建立时触发</span><br><span class="line">message    Socket.onmessage     客户端接收服务端数据时触发</span><br><span class="line">error        Socket.onerror         通信发生错误时触发</span><br><span class="line">close        Socket.onclose         连接关闭时触发</span><br></pre></td></tr></table></figure><ul><li>WebSocket 方法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">方法                           描述</span><br><span class="line">Socket.send()              使用连接发送数据</span><br><span class="line"></span><br><span class="line">Socket.close()          关闭连接</span><br></pre></td></tr></table></figure><h2 id="socketio"><a href="#socketio" class="headerlink" title="socketio"></a>socketio</h2><p>  Socket.io实际上是WebSocket的父集，Socket.io封装了WebSocket和轮询等方法，会根据情况选择方法来进行通讯。</p><h1 id="利用websocket做一个简易聊天室"><a href="#利用websocket做一个简易聊天室" class="headerlink" title="利用websocket做一个简易聊天室"></a>利用websocket做一个简易聊天室</h1><ul><li><p>下载Visual Studio Code</p><p>Visual Studio Code由微软出品，但它不是那个大块头的Visual Studio，它是一个精简版的迷你Visual Studio，并且，Visual Studio Code可以跨平台！Windows、Mac和Linux通用。</p><p>点击<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">官网</a>下载</p></li><li><p>使用Visual Studio Code</p><ul><li>新建一个目录websocket，在终端进入此目录，然后建立一个websocket依赖。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$  npm -i nodejs-websocket  --save</span><br><span class="line">此文件夹就会自动生成node-modules文件夹和package-lock.json</span><br></pre></td></tr></table></figure><ul><li><p>在websocket目录下，新建服务端app.js</p></li><li><p>在websocket目录下，新建公共文件夹public，然后在此文件夹中新建一个index.html作为聊天的页面</p></li><li><p>本来要写客户端client.js，不过此js可以直接写在index.html里。</p></li></ul><p>点击<a href="https://github.com/raoweijiapng/websocket" target="_blank" rel="noopener">详细代码</a>，查看源码。</p></li></ul><h1 id="利用socketio做一个简易聊天室"><a href="#利用socketio做一个简易聊天室" class="headerlink" title="利用socketio做一个简易聊天室"></a>利用socketio做一个简易聊天室</h1><ul><li><p>新建一个目录socketio，在终端进入此目录，然后生成信息，建立一些依赖。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ npm init        或者使用   $ npm init -y  忽略以下，直接生成。</span><br><span class="line">Press ^C at any time to quit.        </span><br><span class="line">package name: (socketio)      （）里为默认，直接enter进入下一个</span><br><span class="line">version: (1.0.0) </span><br><span class="line">description: </span><br><span class="line">entry point: (index.js) server.js</span><br><span class="line">test command: </span><br><span class="line">git repository: </span><br><span class="line">keywords: </span><br><span class="line">author: raoweijia</span><br><span class="line">license: (ISC) </span><br><span class="line">About to write to /home/raoweijia/桌面/socketio/package.json:</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;socketio&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;server.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;author&quot;: &quot;raoweijia&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;</span><br><span class="line">&#125;</span><br><span class="line">Is this OK? (yes) yes</span><br><span class="line"></span><br><span class="line">执行完后会在当前目录下建立一个package.json。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">建立express、socketio依赖。</span><br><span class="line">$ npm install express --save</span><br><span class="line">$ npm install socket.io --save</span><br><span class="line"></span><br><span class="line">此文件夹就会自动生成node-modules文件夹和package-lock.json,并把相关的信息放入其中。</span><br></pre></td></tr></table></figure></li><li><p>语法</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var app = require(&apos;express&apos;)();</span><br><span class="line">等价于</span><br><span class="line">const express = require(&apos;express&apos;);</span><br><span class="line">const app = express();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var server = require(&apos;http&apos;).Server(app);</span><br><span class="line">等价于</span><br><span class="line">const server = require(&apos;http&apos;).createServer(app);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var io = require(&apos;socket.io&apos;)(server);</span><br><span class="line">等价于</span><br><span class="line">const io = require(&apos;socket.io&apos;).listen(server);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server.listen(3000);</span><br><span class="line">等价于</span><br><span class="line">server.listen(process.env.PORT || 3000);</span><br></pre></td></tr></table></figure><ul><li><p>引入一些样式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;https://code.jquery.com/jquery-3.4.1.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;/socket.io/socket.io.js&quot;&gt;&lt;/script&gt;   （没有，就要创建socke.io.js）</span><br></pre></td></tr></table></figure><p>点击<a href="https://github.com/raoweijiapng/socketio" target="_blank" rel="noopener">详细代码</a>，查看源码。</p></li></ul><h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><ul><li><p>let,const,var三个定义变量之间的区别</p><ul><li>var</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">for (var i = 0; i &lt; 10; i++) &#123;</span><br><span class="line">  console.log(i);</span><br><span class="line">&#125;</span><br><span class="line">alert(i)</span><br><span class="line"></span><br><span class="line">在javascript中没有块级作用域，在for（）里面定义变量i ，在循环外部依然可以进行正常访问。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var i = 15;</span><br><span class="line">var i = 5;</span><br><span class="line">alert(i);//5　</span><br><span class="line"></span><br><span class="line">其中变量i重复定义没有报错，反而输出值为5，说明被复写了。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for (var i = 0; i &lt; 3; i++) &#123;</span><br><span class="line">  setTimeout(function () &#123;</span><br><span class="line">    console.log(i)</span><br><span class="line">  &#125;, 1000);</span><br><span class="line">&#125;</span><br><span class="line">　　</span><br><span class="line">输出结果为3,3,3，因为当循环结束时，i的值为三。所以在执行setTimeout函数时会打印三次3。</span><br></pre></td></tr></table></figure><ul><li>let</li></ul><p>它的用法类似于var，但是所声明的变量，只在let命令所在的代码块内有效，声明的常量，不可重复声明。。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  let a = 10;</span><br><span class="line">  var b = 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a // ReferenceError: a is not defined.</span><br><span class="line">b // 1</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line">for (let i = 0; i &lt; 10; i++) &#123;</span><br><span class="line">  // ...</span><br><span class="line">&#125;</span><br><span class="line">console.log(i);   // ReferenceError: i is not defined</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">使用var命令，变量可以在声明之前使用，值为undefined。let命令改变了这个语法，它所声明的变量一定要在声明后使用，否则报错。</span><br><span class="line">// var 的情况</span><br><span class="line">console.log(foo); // 输出undefined</span><br><span class="line">var foo = 2;</span><br><span class="line"></span><br><span class="line">// let 的情况</span><br><span class="line">console.log(bar); // 报错ReferenceError</span><br><span class="line">let bar = 2;</span><br></pre></td></tr></table></figure><ul><li>const</li></ul><p>const声明一个只读的常量。一旦声明，常量的值就不能改变。<br>对于const来说，只声明不赋值，就会报错。const的作用域与let命令相同：只在声明所在的块级作用域内有效。<br>const声明的常量，也与let一样不可重复声明。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jquery（上）</title>
      <link href="/2019/10/16/2019-09-02-jquery-1/"/>
      <url>/2019/10/16/2019-09-02-jquery-1/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="jquery"><a href="#jquery" class="headerlink" title="jquery"></a>jquery</h1><ul><li>特点<br>所有jQuery函数位于一个document ready函数中。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(document).ready(function()&#123;</span><br><span class="line"> // 开始写 jQuery 代码... </span><br><span class="line">&#125;);</span><br><span class="line">或</span><br><span class="line">$(function()&#123; </span><br><span class="line"> // 开始写 jQuery 代码... </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>选择器</li></ul><p>1.元素选择器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">基于元素名选取元素。</span><br><span class="line">如：在页面中选取所有 &lt;p&gt; 元素:</span><br><span class="line">$(&quot;p&quot;)</span><br></pre></td></tr></table></figure><p>2.#id选择器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">通过HTML元素的id属性选取指定的元素。</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;#test&quot;).hide();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3.class选择器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">可以通过指定的 class 查找元素。</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;.test&quot;).hide();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>jquery事件</li></ul><p>1.click()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当按钮点击事件被触发时会调用一个函数。</span><br><span class="line">$(&quot;p&quot;).click(function()&#123;</span><br><span class="line">  $(this).hide();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.dblclick()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当双击元素时，会发生dblclick事件。</span><br><span class="line">$(&quot;p&quot;).dblclick(function()&#123;</span><br><span class="line">  $(this).hide();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3.mouseenter()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当鼠标指针穿过元素时，会发生mouseenter事件。</span><br><span class="line">$(&quot;#p1&quot;).mouseenter(function()&#123;</span><br><span class="line">  alert(&apos;您的鼠标移到了 id=&quot;p1&quot; 的元素上!&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>4.mouseleave()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当鼠标指针离开元素时，会发生mouseleave事件。</span><br><span class="line">$(&quot;#p1&quot;).mouseleave(function()&#123;</span><br><span class="line">  alert(&quot;再见，您的鼠标离开了该段落。&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>5.mousedown()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当鼠标指针移动到元素上方，并按下鼠标按键时，会发生mousedown事件。</span><br><span class="line">$(&quot;#p1&quot;).mousedown(function()&#123;</span><br><span class="line">  alert(&quot;鼠标在该段落上按下！&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>6.mouseup()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当在元素上松开鼠标按钮时，会发生mouseup事件。</span><br><span class="line">$(&quot;#p1&quot;).mouseup(function()&#123;</span><br><span class="line">  alert(&quot;鼠标在段落上松开。&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>7.hover()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">用于模拟光标悬停事件。</span><br><span class="line">当鼠标移动到元素上时，会触发指定的第一个函数(mouseenter);当鼠标移出这个元素时，会触发指定的第二个函数(mouseleave)。</span><br><span class="line">$(&quot;#p1&quot;).hover(</span><br><span class="line">  function()&#123;</span><br><span class="line">      alert(&quot;你进入了p1!&quot;);</span><br><span class="line">  &#125;,</span><br><span class="line">  function()&#123;</span><br><span class="line">      alert(&quot;拜拜!现在你离开了p1!&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>jquery的隐藏和显示</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$(selector).hide(speed,callback);</span><br><span class="line">$(selector).show(speed,callback);</span><br><span class="line">可选的 speed 参数规定隐藏/显示的速度，可以取以下值：&quot;slow&quot;、&quot;fast&quot;、&quot;linear&quot;或毫秒。</span><br><span class="line">可选的callback参数是方法完成后所执行的函数名称。</span><br><span class="line">$(document).ready(function()&#123;</span><br><span class="line">  $(&quot;.hidebtn&quot;).click(function()&#123;</span><br><span class="line">    $(&quot;div&quot;).hide(1000,&quot;linear&quot;,function()&#123;</span><br><span class="line">      alert(&quot;Hide() 方法已完成!&quot;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">使用toggle()方法来切换hide()和show()方法。</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;p&quot;).toggle();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>jquery的淡入淡出</li></ul><p>1.fadeIn</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">淡淡地浮现出已隐藏的元素。</span><br><span class="line">$(selector).fadeIn(speed,callback);</span><br><span class="line">可选的speed参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</span><br><span class="line">可选的callback参数是方法完成后所执行的函数名称。</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;#div1&quot;).fadeIn();</span><br><span class="line">  $(&quot;#div2&quot;).fadeIn(&quot;slow&quot;);</span><br><span class="line">  $(&quot;#div3&quot;).fadeIn(3000);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.fadeOut()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">淡淡地隐藏显示的元素。</span><br><span class="line">$(selector).fadeOut(speed,callback);</span><br><span class="line">可选的speed参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</span><br><span class="line">可选的callback参数是方法完成后所执行的函数名称。</span><br></pre></td></tr></table></figure><p>3.fadeToggle()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">可以在fadeIn()与fadeOut()方法之间进行切换。</span><br><span class="line">如果元素已淡出，则fadeToggle()会向元素添加淡入效果。如果元素已淡入，则fadeToggle()会向元素添加淡出效果。</span><br><span class="line">$(selector).fadeToggle(speed,callback);</span><br><span class="line">可选的speed参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</span><br><span class="line">可选的callback参数是方法完成后所执行的函数名称。</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;#div1&quot;).fadeToggle();</span><br><span class="line">  $(&quot;#div2&quot;).fadeToggle(&quot;slow&quot;);</span><br><span class="line">  $(&quot;#div3&quot;).fadeToggle(3000);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>4.fadeTo()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(selector).fadeTo(speed,opacity,callback);</span><br><span class="line">必需的speed参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</span><br><span class="line">fadeTo()方法中必需的opacity参数将淡入淡出效果设置为给定的不透明度（值介于0与1之间）。</span><br><span class="line">可选的callback参数是该函数完成后所执行的函数名称。</span><br><span class="line">$(&quot;button&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;#div1&quot;).fadeTo(&quot;slow&quot;,0.15);</span><br><span class="line">  $(&quot;#div2&quot;).fadeTo(&quot;slow&quot;,0.4);</span><br><span class="line">  $(&quot;#div3&quot;).fadeTo(&quot;slow&quot;,0.7);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>jquery的滑动</li></ul><p>1.slideDown()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">用于向下滑动元素。</span><br><span class="line">$(selector).slideDown(speed,callback);</span><br><span class="line">可选的speed参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</span><br><span class="line">可选的callback参数是滑动完成后所执行的函数名称。</span><br><span class="line">$(&quot;#flip&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;#panel&quot;).slideDown();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>2.slideUp()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用于向上滑动元素。</span><br><span class="line">$(selector).slideUp(speed,callback);</span><br><span class="line">可选的speed参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</span><br><span class="line">可选的callback参数是滑动完成后所执行的函数名称。</span><br></pre></td></tr></table></figure><p>3.slideToggle()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">可以在slideDown()与slideUp()方法之间进行切换。</span><br><span class="line">如果元素向下滑动，则slideToggle()可向上滑动它们。如果元素向上滑动，则slideToggle()可向下滑动它们。</span><br><span class="line">$(selector).slideToggle(speed,callback);</span><br><span class="line">可选的speed参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</span><br><span class="line">可选的callback参数是滑动完成后所执行的函数名称。</span><br><span class="line">$(&quot;#flip&quot;).click(function()&#123;</span><br><span class="line">  $(&quot;#panel&quot;).slideToggle();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jquery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javascript基本语句</title>
      <link href="/2019/10/16/2019-08-29-javascript/"/>
      <url>/2019/10/16/2019-08-29-javascript/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="javascript基本任务"><a href="#javascript基本任务" class="headerlink" title="javascript基本任务"></a>javascript基本任务</h1><h2 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h2><ul><li><p>setInterval()<br>间隔指定的毫秒数不停地执行指定的代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  //间隔1秒执行myTime（）</span><br><span class="line">  var myVar = setInterval(function()&#123;myTime()&#125;,1000);</span><br><span class="line"></span><br><span class="line">  function myTime()&#123;</span><br><span class="line">    var d = new Date();</span><br><span class="line">    var t = d.toLocaleTimeString();</span><br><span class="line">    document.getElementById(&quot;demo&quot;).innerHTML=d;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  //停止计时</span><br><span class="line">  function myStopFunction()&#123;</span><br><span class="line">    clearInterval(myVar);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>setTimeout()<br>在指定的毫秒数后执行指定的代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  var myVar;</span><br><span class="line">  //3秒之后可以执行弹出弹框</span><br><span class="line">  function myFunction()&#123;</span><br><span class="line">    myVar = setTimeout(function()&#123;alert(&quot;hello&quot;)&#125;,3000);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  //必须在定时器开启之前3秒内关闭</span><br><span class="line">  function myStopFunction()&#123;</span><br><span class="line">    clearTimeout(myVar);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p>在JavaScript中，几乎所有的事物都是对象，对象也是一个变量，但对象可以包含多个值（多个变量）。</p><ul><li>可以使用字符来定义和创建JavaScript对象。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  var person = &#123;</span><br><span class="line">    firstName:&quot;jhon&quot;,</span><br><span class="line">    lastName:&quot;Doe&quot;,</span><br><span class="line">    age:50,</span><br><span class="line">    eyeColor:&quot;blue&quot;,</span><br><span class="line">    //定义了一个函数，并作为对象的属性</span><br><span class="line">    fullName:function()&#123;</span><br><span class="line">      return this.firstName+&quot; &quot;+this.lastName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  //第一种访问对象属性（person.lastName）</span><br><span class="line">  document.getElementById(&quot;demo&quot;).innerHTML=person.firstName+&quot;现在&quot;+person.age+&quot;岁&quot;；</span><br><span class="line">  </span><br><span class="line">  //第二种访问对象属性（person[&quot;lastName&quot;]）</span><br><span class="line">  document.getElementById(&quot;demo&quot;).innerHTML=person[&quot;firstName&quot;]+&quot;现在&quot;+person[&quot;age&quot;]+&quot;岁&quot;；</span><br><span class="line"> </span><br><span class="line">  //不加括号直接输出函数表达式作为字符串</span><br><span class="line">  document.getElementById(&quot;demo1&quot;).innerHTML = person.fullName;</span><br><span class="line">  //加括号输出函数执行结果</span><br><span class="line">  document.getElementById(&quot;demo2&quot;).innerHTML = person.fullName();</span><br><span class="line">&lt;script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="改变css"><a href="#改变css" class="headerlink" title="改变css"></a>改变css</h2><p>JavaScript可以改变HTML元素的样式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=&quot;p1&quot;&gt;hello world!&lt;/p&gt;</span><br><span class="line">&lt;p id=&quot;p2&quot;&gt;hello word!&lt;/p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  document.getElementById(&quot;p2&quot;).style.color=&quot;blue&quot;;</span><br><span class="line">  document.getElementById(&quot;p2&quot;).style.fontFamily=&quot;Arial&quot;;</span><br><span class="line">  document.getElementById(&quot;p2&quot;).style.fontSize=&quot;larger&quot;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="弹窗"><a href="#弹窗" class="headerlink" title="弹窗"></a>弹窗</h2><ul><li><p>警告框<br>window.alert()方法可以不带上window对象，直接使用alert()方法。<br>只能点击确定。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  function myFunction()&#123;</span><br><span class="line">    //加\n让提示语句换行</span><br><span class="line">    alert(&quot;你好\n我是一个警告框！&quot;)；</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;input tupe=&quot;button&quot; onclick=&quot;myFuction()&quot; value=&quot;显示警告框&quot;/&gt;</span><br></pre></td></tr></table></figure></li><li><p>确认框<br>window.confirm()方法可以不带上window对象，直接使用confirm()方法。<br>可以点击确定或取消。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;点击按钮，显示确认框。&lt;/p&gt;</span><br><span class="line">&lt;button onclick=&quot;myFunction()&quot;&gt;点我&lt;/button&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  function myFunction()&#123;</span><br><span class="line">    var x;</span><br><span class="line">    var r=confirm(&quot;按下按钮!&quot;);</span><br><span class="line">    if (r==true)&#123;</span><br><span class="line">      x=&quot;你按下了\&quot;确定\&quot;按钮!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">      x=&quot;你按下了\&quot;取消\&quot;按钮!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    document.getElementById(&quot;demo&quot;).innerHTML=x;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>提示框<br>window.prompt()方法可以不带上window对象，直接使用prompt()方法。<br>当提示框出现后，用户需要输入某个值，然后点击确认或取消按钮才能继续操纵。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;点击按钮查看输入的对话框。&lt;/p&gt;</span><br><span class="line">&lt;button onclick=&quot;myFunction()&quot;&gt;点我&lt;/button&gt;</span><br><span class="line">&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  function myFunction()&#123;</span><br><span class="line">    var x;</span><br><span class="line">    //prompt(提示语句，默认值)，返回输入的值</span><br><span class="line">    var person = prompt(&quot;请输入你的名字&quot;，&quot;Harry potter&quot;)；</span><br><span class="line">    if(person!=null &amp;&amp; person!=&quot;&quot;)&#123;</span><br><span class="line">      x=&quot;你好&quot;+person+&quot;!今天感觉如何？&quot;；</span><br><span class="line">      document.getElementById(&quot;demo&quot;).innerHTML=x;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><ul><li><p>条件语句</p><ol><li><p>if</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(condition)&#123;</span><br><span class="line">  当condition为true时执行的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>if…else</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if (condition)&#123;</span><br><span class="line">  当condition为true时执行的代码</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">  当condition不为true时执行的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>if…else if…else</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if (condition1)&#123;</span><br><span class="line">  当condition1为true时执行的代码</span><br><span class="line">&#125;</span><br><span class="line">else if (condition2)&#123;</span><br><span class="line">  当condition2为true时执行的代码</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">  当condition1和condition2都不为true时执行的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>switch</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">switch(n)&#123;</span><br><span class="line">  case 1:</span><br><span class="line">      执行代码块1</span><br><span class="line">      break;</span><br><span class="line">  case 2:</span><br><span class="line">      执行代码块2</span><br><span class="line">      break;</span><br><span class="line">  default:</span><br><span class="line">      与case1和case2不同时执行的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><ul><li><p>for</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for(语句1; 语句2; 语句3)&#123;</span><br><span class="line">  被执行的代码块</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">语句1 （代码块）开始前执行。</span><br><span class="line">语句2 定义运行循环（代码块）的条件。</span><br><span class="line">语句3 在循环（代码块）已被执行之后执行。</span><br></pre></td></tr></table></figure></li><li><p>for/in</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">循环遍历对象 &quot;person&quot; 的属性:</span><br><span class="line">var x;</span><br><span class="line">var txt=&quot;&quot;;</span><br><span class="line">var person=&#123;fname:&quot;John&quot;,lname:&quot;Doe&quot;,age:25&#125;; </span><br><span class="line"> </span><br><span class="line">for (x in person)&#123;  // x为属性名</span><br><span class="line">  txt=txt + person[x];</span><br><span class="line">&#125;</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML=txt;</span><br></pre></td></tr></table></figure></li><li><p>while<br>while循环会在指定条件为真时循环执行代码块。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while (条件)&#123;</span><br><span class="line">  需要执行的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>do while<br>do/while 循环是while循环的变体。该循环会在检查条件是否为真之前执行一次代码块，然后如果条件为真的话，就会重复这个循环。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">do&#123;</span><br><span class="line">    需要执行的代码</span><br><span class="line">&#125;</span><br><span class="line">while (条件);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>流程图、思维导图、tcp/ip协议、qq安装以及nodejs安装</title>
      <link href="/2019/10/16/2019-08-28-liucehng-daotu/"/>
      <url>/2019/10/16/2019-08-28-liucehng-daotu/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><ul><li>流程图</li></ul><p><img src="https://raoweijiapng.github.io/static/img/liuchengtu.png" alt="流程图"></p><p>流程图是流经一个系统的信息流、观点流或部件流的图形代表。在企业中，流程图主要用来说明某一过程。这种过程既可以是生产线上的工艺流程，也可以是完成一项任务必需的管理过程。<br>流程图有时也称作输入-输出图。该图直观地描述一个工作过程的具体步骤。流程图对准确了解事情是如何进行的，以及决定应如何改进过程极有帮助</p><p><img src="https://raoweijiapng.github.io/static/img/kuangtuhanyi.jpg" alt="图框含义"></p><ul><li>思维导图</li></ul><p><img src="https://raoweijiapng.github.io/static/img/siweidaotu.jpg" alt="图框含义"></p><p>思维导图，英文是The-Mind-Map，又叫心智导图，是表达发散性思维的有效图形思维工具，它简单却又很有效，是一种实用性的思维工具。<br>思维导图又称脑图、心智地图、脑力激荡图、灵感触发图、概念地图、树状图、树枝图或思维地图，是一种图像式思维的工具以及一种利用图像式思考辅助工具。思维导图是使用一个中央关键词或想法引起形象化的构造和分类的想法；它用一个中央关键词或想法以辐射线形连接所有的代表字词、想法、任务或其它关联项目的图解方式。</p><h1 id="tcp-ip协议"><a href="#tcp-ip协议" class="headerlink" title="tcp/ip协议"></a>tcp/ip协议</h1><p>TCP/IP传输协议，即传输控制/网络协议，也叫作网络通讯协议。<br><img src="https://raoweijiapng.github.io/static/img/%E4%B8%83%E5%B1%82%E5%8D%8F%E8%AE%AE.png" alt="图框含义">  </p><p>TCP/IP协议是Internet最基本的协议,其中应用层的主要协议有Telnet、FTP、SMTP等，是用来接收来自传输层的数据或者按不同应用要求与方式将数据传输至传输层；传输层的主要协议有UDP、TCP，是使用者使用平台和计算机信息网内部数据结合的通道，可以实现数据传输与数据共享；网络层的主要协议有ICMP、IP、IGMP，主要负责网络中数据包的传送等；而网络访问层，也叫网路接口层或数据链路层，主要协议有ARP、RARP，主要功能是提供链路管理错误检测、对不同通信媒介有关信息细节问题进行有效处理等。</p><h2 id="tcp与udp"><a href="#tcp与udp" class="headerlink" title="tcp与udp"></a>tcp与udp</h2><ul><li><p>UDP协议定义了端口，同一个主机上的每个应用程序都需要指定唯一的端口号，并且规定网络中传输的数据包必须加上端口信息，当数据包到达主机以后，就可以根据端口号找到对应的应用程序了。UDP协议比较简单，实现容易，但它没有确认机制，数据包一旦发出，无法知道对方是否收到，因此可靠性较差，为了解决这个问题，提高网络可靠性，TCP协议就诞生了。</p></li><li><p>TCP即传输控制协议，是一种面向连接的、可靠的、基于字节流的通信协议。简单来说TCP就是有确认机制的UDP协议，每发出一个数据包都要求确认，如果有一个数据包丢失，就收不到确认，发送方就必须重发这个数据包。 </p></li></ul><h2 id="tcp优点"><a href="#tcp优点" class="headerlink" title="tcp优点"></a>tcp优点</h2><ol><li>协议标准是完全开放的，可以供用户免费使用，并且独立于特定的计算机硬件与操作系统。</li><li>独立于网络硬件系统，可以运行在广域网，更适合于互联网。</li><li>网络地址统一分配，网络中每一设备和终端都具有一个唯一地址。</li><li>高层协议标准化，可以提供多种多样可靠网络服务。</li></ol><h2 id="tcp缺点"><a href="#tcp缺点" class="headerlink" title="tcp缺点"></a>tcp缺点</h2><ol><li>该模型没有明显地区分服务、接口和协议的概念。因此，对于使用新技术来设计新网络，TCP/IP模型不是一个太好的模板。</li><li>TCP/IP模型完全不是通用的，并且不适合描述除TCP/IP模型之外的任何协议栈。</li><li>链路层并不是通常意义上的一层。它是一个接口，处于网络层和数据链路层之间。接口和层间的区别是很重要的。</li><li>TCP/IP模型不区分物理层和数据链路层。这两层完全不同，物理层必须处理铜缆、光纤和无线通信的传输特征；而数据链路层的工作是确定帧的开始和结束，并且按照所需的可靠程度把帧从一端发送到另一端。</li></ol><h1 id="QQ的安装"><a href="#QQ的安装" class="headerlink" title="QQ的安装"></a>QQ的安装</h1><ul><li><p>安装 wine</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu.git</span><br><span class="line">cd deepin-wine-for-ubuntu </span><br><span class="line">sudo sh install.sh</span><br></pre></td></tr></table></figure></li><li><p>安装 QQ</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.qq.im/deepin.com.qq.im_8.9.19983deepin23_i386.deb</span><br><span class="line">sudo dpkg -i deepin.com.qq.im_8.9.19983deepin23_i386.deb </span><br><span class="line">sudo apt-get install -f</span><br></pre></td></tr></table></figure></li></ul><h1 id="nodejs的安装"><a href="#nodejs的安装" class="headerlink" title="nodejs的安装"></a>nodejs的安装</h1><ul><li><p>方法一</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br></pre></td></tr></table></figure></li><li><p>方法二</p></li></ul><ol><li><p>下载压缩包<br>wget <a href="https://nodejs.org/dist/v8.1.0/node-v8.1.0-linux-x64.tar.xz" target="_blank" rel="noopener">https://nodejs.org/dist/v8.1.0/node-v8.1.0-linux-x64.tar.xz</a></p></li><li><p>解压<br>tar -xvf node-v8.1.0-linux-x64.tar.xz</p></li><li><p>切换并查看当前node所在路径<br>cd node-v8.1.0-linux-x64/bin<br>pwd</p></li><li><p>查看node版本<br>./node -v</p></li><li><p>将node和npm设置为全局<br>sudo ln /home/ubuntu/node-v8.1.0-linux-x64/bin/node /usr/local/bin/node<br>sudo ln /home/ubuntu/node-v8.1.0-linux-x64/bin/npm /usr/local/bin/npm<br>pwd</p></li></ol><p>推荐使用方法一，直接安装在系统环境/usr/bin目录下，之后使用npm -g安装其他插件也会安装到/usr/lib/node_modules’(需要使用sudo权限)‘。如果使用方法二，将nodejs路径链接到/usr/local/bin目录下，则每次npm-g安装插件都会安装在nodejs原路径下的node_modules(比如/home/ubuntu/node-v8.1.0-linux-x64/lib/node_modules)，每次代码中引用插件也需要到此目录下去找。</p>]]></content>
      
      
      <categories>
          
          <category> tcp ip </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tcp ip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux基础命令测试和wps字体设置</title>
      <link href="/2019/10/16/2019-08-27-linux-test/"/>
      <url>/2019/10/16/2019-08-27-linux-test/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h2 id="安装deb"><a href="#安装deb" class="headerlink" title="安装deb"></a>安装deb</h2><p>sudo dpkg -i deb文件</p><h2 id="管理文件和目录的命令"><a href="#管理文件和目录的命令" class="headerlink" title="管理文件和目录的命令"></a>管理文件和目录的命令</h2><ol><li><p>pwd<br>输出当前目录，即当前所在地址。</p></li><li><p>cd<br>改变所在目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /   转到根目录。</span><br><span class="line">cd ～  转到/home/user的用户目录中。</span><br><span class="line">cd /usr/test  转到根目录的usr的test目录下。</span><br></pre></td></tr></table></figure></li><li><p>ls<br>用来查看目录的内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-a  列举目录中的全部文件，包括隐藏文件。</span><br><span class="line">-l  列举目录中细节，包括权限、所有者、组群、大小、创建日期、文件是否链接。</span><br><span class="line">-f  列举的文件显示文件类型。</span><br><span class="line">-r  逆向，从后向前地列举目录中的内容。</span><br><span class="line">-s  按文件大小排序。</span><br><span class="line">-R  递归，列举当前目录下的所有子目录内的内容。</span><br><span class="line">-h  以人类可读的方式显示文件的大小，如k、M、G作单位。</span><br></pre></td></tr></table></figure></li><li><p>cat<br>可以用来合并文件，也可以在屏幕上显示整个文件的内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">把textfile1的文档内容加上行号后输入 textfile2 这个文档里：</span><br><span class="line">cat -n textfile1 &gt; textfile2</span><br><span class="line">把textfile1和textfile2的文档内容加上行号（空白行不加）之后将内容附加到 textfile3 文档里：</span><br><span class="line">cat -b textfile1 textfile2 &gt;&gt; textfile3</span><br></pre></td></tr></table></figure></li><li><p>grep<br>在文件中查找一个特定的字符串。默认区分大小写。</p></li></ol><p>-i 不区分大小写。</p><ol start="6"><li><p>touch<br>用来创建新文件。</p></li><li><p>cp<br>用来拷贝文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cp t.txt documnent/t </span><br><span class="line">把文件t.txt复制到document目录下。</span><br><span class="line">-i  如果文件覆盖目标中的文件，会提示确认。</span><br><span class="line">-r  会递归复制整个目录树、子目录以及其它。</span><br><span class="line">-v  显示文件的复制进度。</span><br></pre></td></tr></table></figure></li><li><p>mv<br>用来移动文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-i  如果文件覆盖目标中的文件，会提示确认。</span><br><span class="line">-f  不提示目标中是否有同名文件，直接强制移动。</span><br><span class="line">-v  显示文件的移动进度。</span><br></pre></td></tr></table></figure></li><li><p>rm<br>用来删除文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-i  提示是否删除。</span><br><span class="line">-f  不提示是否删除，直接删除。</span><br><span class="line">-v  显示问件的删除进度</span><br><span class="line">-r  递归删除某个目录以及其中所有文件和子目录。</span><br></pre></td></tr></table></figure></li><li><p>rmdir<br>用来删除空目录。</p></li></ol><h2 id="磁盘命令"><a href="#磁盘命令" class="headerlink" title="磁盘命令"></a>磁盘命令</h2><ol><li><p>mount<br>挂载文件系统。<br>不加任何参数，显示已挂载的文件系统和目录。</p></li><li><p>umount<br>卸载已挂上的文件系统。</p></li><li><p>df<br>用来检查硬盘分区和已挂载的文件件系统的磁盘空间。</p></li><li><p>du<br>用来显示文件目录或大小。</p></li><li><p>fsck<br>用来检查和修复linux文件系统。</p></li></ol><h2 id="文件备份和压缩命令"><a href="#文件备份和压缩命令" class="headerlink" title="文件备份和压缩命令"></a>文件备份和压缩命令</h2><ol><li><p>bzip2/bunzip2<br>扩展名为bz2的压缩/解压缩工具</p></li><li><p>gzip/gunzip<br>扩展名为gz的压缩/解压缩工具</p></li><li><p>zip/unzip<br>扩展名为zip的压缩/解压缩工具</p></li><li><p>tar<br>创建备份和归档。</p></li></ol><h2 id="关机和查看系统信息的命令"><a href="#关机和查看系统信息的命令" class="headerlink" title="关机和查看系统信息的命令"></a>关机和查看系统信息的命令</h2><ol><li><p>shutdown<br>正常关机。</p></li><li><p>reboot<br>重启计算机。</p></li><li><p>ps<br>查看在计算机中有哪些程序执行，及其执行的情况。</p></li><li><p>top<br>可以查看目前程序的执行情景和内存使用。</p></li><li><p>kill<br>用来终止一个正在执行中的进程。</p></li><li><p>date<br>用来显示、设定和修改现在的时间和日期。</p></li><li><p>cal<br>显示月历及年历。</p></li></ol><h2 id="管理使用者和设立权限的命令"><a href="#管理使用者和设立权限的命令" class="headerlink" title="管理使用者和设立权限的命令"></a>管理使用者和设立权限的命令</h2><ol><li><p>chmod<br>改变许可权限。</p></li><li><p>useradd<br>增加用户。</p></li><li><p>su<br>用来切换用户。</p></li></ol><h2 id="线上查询命令"><a href="#线上查询命令" class="headerlink" title="线上查询命令"></a>线上查询命令</h2><ol><li><p>man<br>查询和解释一个命令的使用方法，以及这个命令的说明事项。</p></li><li><p>locate<br>定位文件和目录。</p></li><li><p>whatis<br>用来查询某个命令的含义。</p></li></ol><h2 id="文件阅读的命令"><a href="#文件阅读的命令" class="headerlink" title="文件阅读的命令"></a>文件阅读的命令</h2><ol><li><p>head<br>查看文件的开头部分。</p></li><li><p>tail<br>查看文件的结尾。</p></li><li><p>less<br>可以一页一页地查看信息。</p></li><li><p>more<br>可以一页一页地查看信息。</p></li></ol><h2 id="网络操作命令"><a href="#网络操作命令" class="headerlink" title="网络操作命令"></a>网络操作命令</h2><ol><li><p>ftp<br>用来传输文件。</p></li><li><p>bye<br>结束连线并结束程序。<br>在ftp模式下，输入bye即可中断目前的连线作业，并结束ftp的执行。</p></li><li><p>ping<br>使用icmp传输协议，发出要求回应的信息，若远程主机的网络的没有什么问题，就会回应信息。</p></li><li><p>telne<br>进行远程登录。</p></li><li><p>rlogin<br>进行远程登录。与telne相似。</p></li><li><p>netstat<br>显示linux的网络情况。</p></li></ol><h2 id="定位、查找文件的命令"><a href="#定位、查找文件的命令" class="headerlink" title="定位、查找文件的命令"></a>定位、查找文件的命令</h2><ol><li><p>which<br>从path环境变量的目录中找出命令的位置，并显示完整的路径名称。</p></li><li><p>whereis<br>找出命令的位置以及它的可执行文件、源代码文件。</p></li><li><p>find<br>按条件搜索，并执行一定的动作。</p></li><li><p>locate<br>从索引库中查找文件。</p></li><li><p>updatedb<br>更新索引库。</p></li></ol><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><ol><li><p>echo<br>用来在显示器上输出一段文字，或者在文件上加上一段文字。</p></li><li><p>clear<br>清除显示器。</p></li><li><p>passwd<br>用来修改用户的密码。</p></li><li><p>lpr<br>把指定的文件发送到打印队列。</p></li><li><p>lprm<br>取消打印队列中的作业。</p></li></ol><h1 id="wps字体设置"><a href="#wps字体设置" class="headerlink" title="wps字体设置"></a>wps字体设置</h1><ol><li>到windows环境下将所需字体拷贝到Linux下（C:/Windows/fonts)</li><li>进入拷贝到Linux的目录中（cd 或直接进入右键“打开终端”）</li><li>进入目录中，执行(把字体放到“其他位置/计算机/usr/share/fonts”)<br>sudo cp * /usr/share/fonts</li><li>为字体赋予可执行权限<br>chmod 755 *</li><li>生成字体的索引信息<br>sudo mkfontscale（提示命令未找到：yum install mkfontscale）<br>sudo mkfontdir（提示命令未找到：yum install fontconfig）</li><li>更新字体缓存<br>sudo fc-cache</li><li>重启系统reboot</li></ol>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux wps </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux基础命令（下）</title>
      <link href="/2019/10/16/2019-08-26-linux-3/"/>
      <url>/2019/10/16/2019-08-26-linux-3/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="linux常用命令"><a href="#linux常用命令" class="headerlink" title="linux常用命令"></a>linux常用命令</h1><h2 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su（用户名）           -切换用户。</span><br><span class="line">sudo （）             -以超级用户的权限运行，不切换用户。</span><br><span class="line">sudo su              -切换到超级用户root。</span><br></pre></td></tr></table></figure><h2 id="用户组的管理"><a href="#用户组的管理" class="headerlink" title="用户组的管理"></a>用户组的管理</h2><ul><li><p>groupadd </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-g GID 指定新用户组的组标识号（GID）。</span><br><span class="line">-o 一般与-g选项同时使用，表示新用户组的GID可以与系统已有用户组的GID相同。</span><br><span class="line"></span><br><span class="line"># groupadd group1</span><br><span class="line">此命令向系统中增加了一个新组group1，新组的组标识号是在当前已有的最大组标识号的基础上加1。</span><br><span class="line"></span><br><span class="line"># groupadd -g 101 group2</span><br><span class="line">此命令向系统中增加了一个新组group2，同时指定新组的组标识号是101。</span><br></pre></td></tr></table></figure></li><li><p>groupdel</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># groupdel group1</span><br><span class="line">此命令从系统中删除组group1</span><br></pre></td></tr></table></figure></li><li><p>groupmod</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-g GID 为用户组指定新的组标识号。</span><br><span class="line">-o 与-g选项同时使用，用户组的新GID可以与系统已有用户组的GID相同。</span><br><span class="line">-n新用户组 将用户组的名字改为新名字</span><br><span class="line"></span><br><span class="line"># groupmod -g 102 group2</span><br><span class="line">此命令将组group2的组标识号修改为102。</span><br><span class="line"></span><br><span class="line"># groupmod –g 10000 -n group3 group2</span><br><span class="line">此命令将组group2的标识号改为10000，组名修改为group3。</span><br><span class="line"></span><br><span class="line">如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。</span><br><span class="line">用户可以在登录后，使用命令newgrp切换到其他用户组，这个命令的参数就是目的用户组。例如：</span><br><span class="line">$ newgrp root</span><br></pre></td></tr></table></figure></li></ul><h2 id="关机重启命令"><a href="#关机重启命令" class="headerlink" title="关机重启命令"></a>关机重启命令</h2><ul><li><p>shutdown</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  -r : 关机后重新开机。</span><br><span class="line">  -h : 关机后停机。</span><br><span class="line">  -c : 取消目前已经进行中的关机动作。</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">## 网络命令</span><br><span class="line">- write</span><br></pre></td></tr></table></figure><p>write 用户名<br>接下来就是将讯息打上去，结束请按ctrl+c</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- wall</span><br></pre></td></tr></table></figure><p>wall [ message ]<br>message是传讯息”hi” 给每一个使用者<br>wall hi</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- ping</span><br><span class="line">ping url(ip地址)</span><br><span class="line">- ifconfig</span><br><span class="line">查看当前的网卡信息</span><br><span class="line">- mail</span><br></pre></td></tr></table></figure><p>mail 用户名<br>按crl + D 保存发送<br>被发送的用户输入mail接收</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- last</span><br><span class="line">显示所有用户的登录信息</span><br><span class="line">- lastlog</span><br><span class="line">显示所有用户最后的登录信息,如果有从未登录的就显示从未登录。</span><br></pre></td></tr></table></figure><p>lastlog -u  502（uid）<br>显示某特定用户上次登录的时间。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- traceroute</span><br><span class="line">显示数据包到主机间的路径</span><br></pre></td></tr></table></figure><p>traceroute <a href="http://www.sina.com.cn" target="_blank" rel="noopener">www.sina.com.cn</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- netstat</span><br><span class="line">显示网络相关信息</span><br></pre></td></tr></table></figure><p>-t或–tcp显示TCP传输协议的连线状况。<br>-u或–udp显示UDP传输协议的连线状况。<br>-l或–listening显示监控中的服务器的Socket。<br>-n或–numeric直接使用IP地址，而不通过域名服务器，显示ip地址和端口号。<br>-r或–route显示路由表。<br>#netstat -tlun   查看本机监听的端口<br>#netstat -an  查看本机所有的网络连接<br>#netstat -rn  查看本机路由表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 文件系统命令</span><br><span class="line">- df</span><br><span class="line">用于显示目前在Linux系统上的文件系统的磁盘使用情况统计。</span><br></pre></td></tr></table></figure><p>-a： 显示所有的的文件系统信息，包括一些特殊的文件。<br>-h： 以人们较易阅读的GBytes，MBytes，KBytes等格式自行显示;<br>-T：显示文件系统类型，连同该分区的文件系统名称（例如ext3）也列出;<br>-m：以MBytes的容量显示各文件系统;<br>-k：以KBytes的容量显示各文件系统;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- du</span><br><span class="line">显示指定的目录或文件所占用的磁盘空间。</span><br></pre></td></tr></table></figure><p>-a：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。<br>-h：以人们较易读的容量格式（G / M）显示;<br>-s：列出总量而已，而不列出每个各别的目录占用容量;<br>-S：不包括子目录下的总计，与-s有点差别。<br>-k：以KBytes列出容量显示;<br>-m：以MBytes列出容量显示;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- fsck</span><br></pre></td></tr></table></figure><p>-a ： 不用显示用户提示，自动修复文件系统。<br>-y ： 自动修复，和-a一样，不过有些文件只支持-y。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- mount</span><br></pre></td></tr></table></figure><p>将/dev/hdc6挂载到/mnt/hdc6上面<br>[root @ www<del>] #mount / dev / hdc6 / mnt / hdc6<br>[root @ www</del>] #df<br>文件系统1K块使用可用使用％挂载<br>…..中间省略…..<br>/ dev / hdc6 1976312 42072 1833836 3％/ mnt / hdc6</p><p>-f：强制卸除！可用在类似网络文件系统（NFS）无法读取到的情况下;<br>-n：不升级/ etc / mtab情况下卸除。<br>卸载的/ dev / hdc6<br>[root @ www~] #umount /dev/ hdc6   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- fdisk</span><br><span class="line">Linux的磁盘分区表操作工具。</span><br></pre></td></tr></table></figure><p>fdisk [-l]装置名称<br>-l：输出后面接的装置所有的分区内容。若仅有fdisk -l时，则系统将会把整个系统内能够搜寻到的装置的分区均列出来。<br>fdisk /dev/sdb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- mkfs</span><br><span class="line">格式化分区，不能格式化扩展分区。</span><br></pre></td></tr></table></figure><p>mkfs -t ext4 /dev/sdb1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 挂载</span><br><span class="line"></span><br><span class="line">1. 挂载光盘</span><br></pre></td></tr></table></figure><p>mkdir /mnt/cdrom    建立挂载点<br>mount -t iso9660  /dev/cdrom  /mnt/cdrom/  挂载光盘<br>mount /dev/sr0  /mnt/cdrom/</p><p>umount 设备名件名或挂载点<br>umount /mnt/cdrom</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2. 挂载u盘</span><br></pre></td></tr></table></figure><p>fdisk -l        查看u盘设备文件名<br>mkdir /mnt/usb/<br>mount -t vfat  /dev/sdb1  /mst/usb/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3. 移动硬盘 </span><br><span class="line"> </span><br><span class="line">linux默认不支持NTFS文件系统，也就是说不能查看移动硬盘。</span><br></pre></td></tr></table></figure><p>下载ntfs-3g_ntfsprogs-2017.3.23.tgz，进入下载目录。</p><h1 id="tar-zxvf-ntfs-3g-ntfsprogs-2017-3-23-tgz-解压"><a href="#tar-zxvf-ntfs-3g-ntfsprogs-2017-3-23-tgz-解压" class="headerlink" title="tar -zxvf ntfs-3g_ntfsprogs-2017.3.23.tgz 解压"></a>tar -zxvf ntfs-3g_ntfsprogs-2017.3.23.tgz 解压</h1><h1 id="cd-ntfs-3g-ntfsprogs-2017-3-23"><a href="#cd-ntfs-3g-ntfsprogs-2017-3-23" class="headerlink" title="cd ntfs-3g_ntfsprogs-2017.3.23/"></a>cd ntfs-3g_ntfsprogs-2017.3.23/</h1><h1 id="configure-编译器准备"><a href="#configure-编译器准备" class="headerlink" title="./configure     编译器准备"></a>./configure     编译器准备</h1><h1 id="make-编译"><a href="#make-编译" class="headerlink" title="make            编译"></a>make            编译</h1><h1 id="make-install-编译安转"><a href="#make-install-编译安转" class="headerlink" title="make install    编译安转"></a>make install    编译安转</h1><h1 id="mount-t-ntfs-3g-分区设备文件名-挂载点"><a href="#mount-t-ntfs-3g-分区设备文件名-挂载点" class="headerlink" title="mount -t ntfs-3g  分区设备文件名 挂载点"></a>mount -t ntfs-3g  分区设备文件名 挂载点</h1><p>```</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux基础命令（中）</title>
      <link href="/2019/10/16/2019-08-24-linux-2/"/>
      <url>/2019/10/16/2019-08-24-linux-2/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="常见的命令（下）"><a href="#常见的命令（下）" class="headerlink" title="常见的命令（下）"></a>常见的命令（下）</h1><h2 id="用户管理命令"><a href="#用户管理命令" class="headerlink" title="用户管理命令"></a>用户管理命令</h2><ol><li><p>useradd  添加新的用户账号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># useradd –d  /home/sam -m sam</span><br><span class="line">此命令创建了一个用户sam，其中-d和-m选项用来为登录名sam产生一个主目录 /home/sam（/home为默认的用户主目录所在的父目录）。</span><br><span class="line"></span><br><span class="line"># useradd -s /bin/sh -g group –G adm,root gem</span><br><span class="line">此命令新建了一个用户gem，该用户的登录Shell是 /bin/sh，它属于group用户组，同时又属于adm和root用户组，其中group用户组是其主组。</span><br></pre></td></tr></table></figure></li><li><p>userdel  删除一个已有的用户账号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">userdel -r sam</span><br><span class="line">此命令删除用户sam在系统文件中（主要是/etc/passwd, /etc/shadow, /etc/group等）的记录，同时删除用户的主目录。</span><br></pre></td></tr></table></figure></li><li><p>usermod  修改一个已有的用户账号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">常用的选项包括-d,-m,-g,-G,-s,-u以及-o等，这些选项的意义与useradd命令中的选项一样，可以为用户指定新的资源值。</span><br><span class="line">另外，有些系统可以使用选项：-l 新用户名</span><br><span class="line"># usermod -s /bin/ksh -d /home/z –g developer sam</span><br><span class="line">此命令将用户sam的登录Shell修改为ksh，主目录改为/home/z，用户组改为developer。</span><br></pre></td></tr></table></figure></li><li><p>passwd   修改密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-l 锁定口令，即禁用账号。</span><br><span class="line">-u 口令解锁。</span><br><span class="line">-d 使账号无口令。</span><br><span class="line">-f 强迫用户下次登录时修改口令。</span><br><span class="line">假设当前用户是sam，则下面的命令修改该用户自己的口令：</span><br><span class="line">$ passwd </span><br><span class="line">如果是超级用户，可以用下列形式指定任何用户的口令：</span><br><span class="line"># passwd sam </span><br><span class="line">为用户指定空口令时，执行下列形式的命令：</span><br><span class="line">   # passwd -d sam</span><br></pre></td></tr></table></figure></li><li><p>who<br>显示用户信息。（登录用户名 登录终端-远程或本地  登录时间  登录主机的IP地址）</p></li><li><p>W<br>显示的用户信息更加详细。</p></li></ol><h2 id="文件搜索命令"><a href="#文件搜索命令" class="headerlink" title="文件搜索命令"></a>文件搜索命令</h2><ul><li>find  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">find / -name init </span><br><span class="line">在/目录下查找名字为init的文件或目录。名字必须相同。</span><br><span class="line">find / -name *init* </span><br><span class="line">在/目录下查找名字中存在init的文件或目录。</span><br><span class="line">find / -name init？？？</span><br><span class="line">在/目录下查找名字开头是init后面还有三字符的文件或目录。</span><br><span class="line">name 严格区分大小写， iname不区分。</span><br><span class="line"></span><br><span class="line">find / -size +204800</span><br><span class="line">— 小于  +大于  不写是等于</span><br><span class="line">在/目录下查找大小比100MB大的文件或目录，单位为0.5kB。</span><br><span class="line"></span><br><span class="line">find / -user  name</span><br><span class="line">在/目录下查找所有者为name的文件或目录。</span><br><span class="line"></span><br><span class="line">find / -cmin -5</span><br><span class="line">-amin 访问时间变化     +n 是超过n分钟的</span><br><span class="line">-mmin 修改过内容       -n 是在n分钟之内的</span><br><span class="line">在/目录下查找5分钟内修改过属性的文件或目录。</span><br><span class="line"></span><br><span class="line">find / -size +163840 -a -size -204800</span><br><span class="line">-a 并且的意思   -o或者</span><br><span class="line">在/目录下查找大于80MB小于100MB的文件或目录。</span><br><span class="line"></span><br><span class="line">find / -type f</span><br><span class="line">d  文件   l  软链接</span><br><span class="line">在/目录下查找的类型为目录。</span><br><span class="line">find / -type f -a -name init*</span><br><span class="line">在/目录下查找名字为init开头的目录。</span><br><span class="line"></span><br><span class="line">find / -type f -size 0 -exec ls -l &#123;&#125; \；</span><br><span class="line">-exec （ls -l） &#123;&#125; \；  对搜索的结果进行信息列表。</span><br><span class="line">-ok                    会询问是否继续执行。</span><br><span class="line">在/目录下查找大小为0的目录，并把这些目录的信息列表出来</span><br><span class="line"></span><br><span class="line">ls -i</span><br><span class="line">393370 markdown.md</span><br><span class="line">find / -inum 393370</span><br><span class="line">根据i节点进行查找。</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">- locate  </span><br><span class="line"></span><br><span class="line">它是建了一文件资料库，并且会定期更新。搜索时是在资料库里查找，不是实时全局查找。</span><br></pre></td></tr></table></figure><pre><code>locate 文件名   查找时也区分大小写。刚新建的文件和目录没有更新到资料库，因此查找不到。updatedb更新后才能查到。如果文件存放的目录并不会被资料库收集时，也是查不到哦。-i  加上时不区分大小写。</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- which  </span><br><span class="line"></span><br><span class="line">搜索命令所在目录及别名信息。  </span><br><span class="line"></span><br><span class="line">- whereis  </span><br><span class="line"></span><br><span class="line">搜索命令所在目录及帮助文档路径。</span><br></pre></td></tr></table></figure><pre><code>$ whereis cpcp: /bin/cp /usr/share/man/man1/cp.1.gz</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- grep  </span><br><span class="line"></span><br><span class="line">grep 字符串 文件</span><br><span class="line">在文件中搜索字串匹配的行并输出。</span><br></pre></td></tr></table></figure><pre><code>-i  不区分大小写grep -i mysql /root/install.log-v  排除指定字串grep -v ^# /root/install.log排除开头为#的行。</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 帮助命令  </span><br><span class="line"></span><br><span class="line">- man</span><br><span class="line">查看命令和配置文件的帮助信息。</span><br></pre></td></tr></table></figure><pre><code>man lsman  services  配置文件名称，不使用绝对路径。</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- whatis</span><br><span class="line">查看命令的简短信息，知道是什么。</span><br><span class="line"></span><br><span class="line">- apropos</span><br><span class="line">只查看配置文件的简短信息，知道是什么。</span><br><span class="line"></span><br><span class="line">- help</span><br><span class="line">命令  --help</span><br><span class="line">显示一些命令常见的用法。</span><br><span class="line">help 内置命令</span><br></pre></td></tr></table></figure><pre><code>查看shell内置命令的信息help umask</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- date</span><br><span class="line">查看系统的当前时间。</span><br></pre></td></tr></table></figure><pre><code>date 03 14 10 27 2014.18   -设置系统时间     月  日 时 分  年   秒</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 压缩解压命令</span><br><span class="line">- gzip</span><br></pre></td></tr></table></figure><pre><code>gzip 文件压缩后的文件为.gz   压缩后无源文件只压缩文件不压缩目录。</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- gunzip</span><br></pre></td></tr></table></figure><p>gunzip  压缩文件,压缩比较大</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- tar</span><br></pre></td></tr></table></figure><pre><code>压缩：-z  打包同时压缩-v  显示详细信息-f  指定文件名-c  打包tar -zcf japan.tar.gz japan打包压缩Japan文件生成japan.tar.gz解压：-z  解压缩-v  显示详细信息-f  指定压缩文件名-x  解包tar -zxvf japan.tar.gz</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- zip  压缩比较小</span><br></pre></td></tr></table></figure><pre><code>压缩：zip boduo.zip boduozip -r  japan.zip japan-r  加上可以压缩目录，不加压缩文件   压缩后有原文件解压缩：unzip boduo.zip</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- bzip2   压缩比较大</span><br></pre></td></tr></table></figure><pre><code>bzip2 -k  boduo   保留原有文件tar -cjf  japan.tar.bz2 japanbunzip2 -k  boduo.tar.bz2 解压缩后保留原文件tar -xjf  japan.tar.bz2</code></pre><pre><code></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux基础命令（上）</title>
      <link href="/2019/10/16/2019-08-23-linux-1/"/>
      <url>/2019/10/16/2019-08-23-linux-1/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="linux常用命令"><a href="#linux常用命令" class="headerlink" title="linux常用命令"></a>linux常用命令</h1><h2 id="文件基本属性"><a href="#文件基本属性" class="headerlink" title="文件基本属性"></a>文件基本属性</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls -l：</span><br><span class="line">dr-xr-xr-x   2 root root 4096 Dec 14  2012 bin</span><br><span class="line">dr-xr-xr-x   4 root root 4096 Apr 19  2012 boot</span><br></pre></td></tr></table></figure><p>[ d ]则是目录<br>[ - ]则是文件；<br>[ l ]则表示为链接文档(link file)；<br>[ b ]则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；<br>[ c ]则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。<br><img src="https://raoweijiapng.github.io/static/img/wenjianshuxin.png" alt="文件属性"><br>[ r ]代表可读(read)、[ w ]代表可写(write)、[ x ]代表可执行(execute)。要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号[ - ]而已。<br>从左至右用0-9这些数字来表示。第0位确定文件类型，第1-3位确定属主（该文件的所有者）拥有该文件的权限。s第4-6位确定属组（所有者的同组用户）拥有该文件的权限，第7-9位确定其他用户拥有该文件的权限。</p><h3 id="更改文件权限命令"><a href="#更改文件权限命令" class="headerlink" title="更改文件权限命令"></a>更改文件权限命令</h3><ol><li>chgrp：更改文件属组<br>chgrp [-R] 属组名 文件名</li></ol><p>  -R：递归更改文件属组，就是在更改某个目录文件的属组时，如果加上-R的参数，那么该目录下的所有文件的属组都会更改。<br>  2. chown：更改文件属主，也可以同时更改文件属组<br>    chown [–R] 属主名 文件名<br>    chown [-R] 属主名：属组名 文件名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">进入 /root 目录（~）将install.log的拥有者改为bin这个账号：</span><br><span class="line">[root@www ~]# chown bin install.log</span><br><span class="line">[root@www ~]# ls -l</span><br><span class="line">-rw-r--r--  1 bin  users 68495 Jun 25 08:53 install.log </span><br><span class="line">将install.log的拥有者与群组改回为root：</span><br><span class="line">[root@www ~]# chown root:root install.log</span><br><span class="line">[root@www ~]# ls -l</span><br><span class="line">-rw-r--r--  1 root root 68495 Jun 25 08:53 install.log</span><br></pre></td></tr></table></figure><ol start="3"><li><p>chmod：更改文件9个属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">r:4 w:2 x:1</span><br><span class="line">chmod [-R] xyz 文件或目录</span><br><span class="line">[root@www ~]# chmod 777 .bashrc</span><br><span class="line">[root@www ~]# ls -al .bashrc</span><br><span class="line">-rwxrwxrwx  1 root root 395 Jul  4 11:45 .bashrc</span><br><span class="line"># chmod u=rwx,g=rx,o=r  test1    // 修改 test1 权限</span><br><span class="line"># ls -al test1</span><br><span class="line">-rwxr-xr-- 1 root root 0 Nov 15 10:32 test1</span><br><span class="line">chmod  u    +(加入)     r       文件或目录</span><br><span class="line">       g    -(除去)     w </span><br><span class="line">       o    =(设定)     x</span><br><span class="line">       a  </span><br><span class="line">如果是要将权限去掉而不改变其他已存在的权限呢？例如要拿掉全部人的可执行权限：</span><br><span class="line">#  chmod  a-x test1</span><br><span class="line"># ls -al test1</span><br><span class="line">-rw-r--r-- 1 root root 0 Nov 15 10:32 test1</span><br></pre></td></tr></table></figure></li><li><p>权限管理命令umask </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">umask </span><br><span class="line">默认值  0022</span><br><span class="line">0 特殊权限  022   --- -w- -w-</span><br><span class="line">777    rwxrwxrwx</span><br><span class="line">022    ----w--w-</span><br><span class="line">-----------------</span><br><span class="line">755    rwxr-xr-x   目录默认权限</span><br><span class="line">       rw-r--r--   文件默认权限</span><br><span class="line">777    rwxrwxrwx</span><br><span class="line">077    ---rwxrwx    </span><br><span class="line">-----------------</span><br><span class="line">700    rwx------  </span><br><span class="line">       rw-------</span><br><span class="line">如果我们想要默认设置的目录和文件的权限是700，应该设置umask值为077</span><br><span class="line">umask 077</span><br><span class="line">umask -S    以rwx的形式显示文件的缺省权限。</span><br></pre></td></tr></table></figure></li></ol><h2 id="常见的命令"><a href="#常见的命令" class="headerlink" title="常见的命令"></a>常见的命令</h2><h3 id="目录处理命令"><a href="#目录处理命令" class="headerlink" title="目录处理命令"></a>目录处理命令</h3><ul><li><p>ls</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-a ：全部的文件，连同隐藏档( 开头为 . 的文件) 一起列出来(常用)</span><br><span class="line">-d ：仅列出指定目录本身，而不是列出目录内的文件数据(常用)</span><br><span class="line">-l ：长数据串列出，包含文件的属性与权限等等数据；(常用）</span><br><span class="line">-i ：查找文件的i节点。</span><br></pre></td></tr></table></figure></li><li><p>mkdir</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -m 711 test2</span><br><span class="line">-m ：配置文件的权限喔！直接配置，不需要看默认权限(umask)的脸色。</span><br><span class="line"># mkdir -p test1/test2/test3/test4</span><br><span class="line">-p ：帮助你直接将所需要的目录(包含上一级目录)递归创建起来！</span><br></pre></td></tr></table></figure></li><li><p>rmdir</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-p ：连同上一级『空的』目录也一起删除</span><br><span class="line">[root@www tmp]# rmdir -p test1/test2/test3/test4</span><br><span class="line">[root@www tmp]# ls -l        &lt;==您看看，底下的输出中test与test1不见了！</span><br><span class="line">drwx--x--x  2 root  root 4096 Jul 18 12:54 test2</span><br></pre></td></tr></table></figure></li><li><p>cd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#使用绝对路径切换到 runoob 目录</span><br><span class="line">[root@www ~]# cd /root/runoob/</span><br><span class="line">#使用相对路径切换到 runoob 目录</span><br><span class="line">[root@www ~]# cd ./runoob/</span><br><span class="line"># 表示回到自己的家目录，亦即是 /root 这个目录</span><br><span class="line">[root@www runoob]# cd ~</span><br><span class="line"># 表示去到目前的上一级目录，亦即是 /root 的上一级目录的意思</span><br><span class="line">[root@www ~]# cd ..</span><br></pre></td></tr></table></figure></li><li><p>cp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-p：连同文件的属性一起复制过去，而非使用默认属性(备份常用)</span><br><span class="line">-i：若目标档(destination)已经存在时，在覆盖时会先询问动作的进行(常用)</span><br><span class="line">-r：递归持续复制，用于目录的复制行为；可以拷贝多个文件到指定目录。也可以在拷贝的过程中更改名字(常用)</span><br></pre></td></tr></table></figure></li><li><p>mv (移动文件与目录，或修改名称)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-f ：force强制的意思，如果目标文件已经存在，不会询问而直接覆盖；</span><br><span class="line">-i ：若目标文件(destination)已经存在时，就会询问是否覆盖！</span><br><span class="line">-u ：若目标文件已经存在，且比较新，才会升级(update)</span><br></pre></td></tr></table></figure></li><li><p>rm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；</span><br><span class="line">-i ：互动模式，在删除前会询问使用者是否动作</span><br><span class="line">-r ：递归删除啊！最常用在目录的删除了！</span><br></pre></td></tr></table></figure></li></ul><h3 id="文件处理命令"><a href="#文件处理命令" class="headerlink" title="文件处理命令"></a>文件处理命令</h3><ul><li><p>cat<br>由第一行开始显示文件内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-b ：列出行号，仅针对非空白行做行号显示，空白行不标行号！</span><br><span class="line">-n ：列印出行号，连同空白行也会有行号，与-b的选项不同；</span><br></pre></td></tr></table></figure></li><li><p>tac<br>tac与cat命令刚好相反，文件内容从最后一行开始显示，可以看出tac是cat的倒着写。</p></li><li><p>more（一页一页翻动）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">空白键 (space)：代表向下翻一页；</span><br><span class="line">Enter         ：代表向下翻『一行』；</span><br><span class="line">/字串         ：代表在这个显示的内容当中，向下搜寻『字串』这个关键字；</span><br><span class="line">:f            ：立刻显示出档名以及目前显示的行数；</span><br><span class="line">q             ：代表立刻离开 more ，不再显示该文件内容。</span><br></pre></td></tr></table></figure></li><li><p>less（一页一页翻动）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">空白键    ：向下翻动一页；</span><br><span class="line">[pagedown]：向下翻动一页；</span><br><span class="line">[pageup]  ：向上翻动一页；</span><br><span class="line">/字串     ：向下搜寻『字串』的功能；</span><br><span class="line">?字串     ：向上搜寻『字串』的功能；</span><br><span class="line">n         ：重复前一个搜寻 (与/或?有关！)</span><br><span class="line">N         ：反向的重复前一个搜寻 (与/或?有关！)</span><br><span class="line">q      ：离开 less 这个程序；</span><br></pre></td></tr></table></figure></li><li><p>head（取出文件前面几行）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-n ：后面接数字，代表显示几行的意思。</span><br><span class="line">默认的情况中，显示前面10行！若要显示前20行，就得要这样：</span><br><span class="line">[root@www ~]# head -n 20 /etc/man.config</span><br></pre></td></tr></table></figure></li><li><p>tail（取出文件后面几行）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-n ：后面接数字，代表显示几行的意思。</span><br><span class="line"># 默认的情况中，显示最后的十行！若要显示最后的20行，就得要这样：</span><br><span class="line">[root@www ~]# tail -n 20 /etc/man.config</span><br><span class="line">-f : 动态显示文件内容的变化。</span><br></pre></td></tr></table></figure></li><li><p>nl（显示行号）</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-b ：指定行号指定的方式，主要有两种：</span><br><span class="line">-b a ：表示不论是否为空行，也同样列出行号(类似 cat -n)；</span><br><span class="line">-b t ：如果有空行，空的那一行不要列出行号(默认值)；</span><br><span class="line"></span><br><span class="line">-n ：列出行号表示的方法，主要有三种：</span><br><span class="line">-n ln ：行号在荧幕的最左方显示；</span><br><span class="line">-n rn ：行号在自己栏位的最右方显示，且不加 0 ；</span><br><span class="line">-n rz ：行号在自己栏位的最右方显示，且加 0 ；</span><br><span class="line">-w ：行号栏位的占用的位数。</span><br><span class="line">实例一：用 nl 列出 /etc/issue 的内容</span><br><span class="line">[root@www ~]# nl /etc/issue</span><br><span class="line">     1  CentOS release 6.4 (Final)</span><br><span class="line">     2  Kernel \r on an \m</span><br></pre></td></tr></table></figure><ul><li>ln（-s） 加上它为软链接，不加为硬链接。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">给文件创建软链接，为log2013.log文件创建软链接link2013，如果log2013.log丢失，link2013将失效：</span><br><span class="line">ln -s log2013.log link2013</span><br><span class="line">[root@localhost test]# ll</span><br><span class="line">lrwxrwxrwx 1 root root     11 12-07 16:01 link2013 -&gt; log2013.log</span><br><span class="line">-rw-r--r-- 1 root bin      61 11-13 06:03 log2013.log</span><br><span class="line">软链接的权限都是rwxrwxrwx。</span><br><span class="line">给文件创建硬链接，为log2013.log创建硬链接ln2013，log2013.log与ln2013的各项属性相同，两文件同步更新。</span><br><span class="line">ln log2013.log ln2013</span><br><span class="line">[root@localhost test]# ll</span><br><span class="line">lrwxrwxrwx 1 root root     11 12-07 16:01 link2013 -&gt; log2013.log</span><br><span class="line">-rw-r--r-- 2 root bin      61 11-13 06:03 ln2013</span><br><span class="line">-rw-r--r-- 2 root bin      61 11-13 06:03 log2013.log</span><br><span class="line">硬链接产生的文件的节点与源文件相同。</span><br><span class="line">硬链接不可以跨分区，也不可以操做目录，但是软链接都可以。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim基础命令</title>
      <link href="/2019/10/16/2019-08-22-vim/"/>
      <url>/2019/10/16/2019-08-22-vim/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><p>基本上 vi/vim 共分为三种模式，分别是命令模式（Command mode），输入模式（Insert mode）和底线命令模式（Last line mode）。 </p><h1 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h1><h2 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h2><p>   用户刚刚启动 vi/vim，便进入了命令模式。<br>   此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。<br>   以下是常用的几个命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i 切换到输入模式，以输入字符。</span><br><span class="line">x 删除当前光标所在处的字符。</span><br><span class="line">: 切换到底线命令模式，以在最底一行输入命令。</span><br></pre></td></tr></table></figure><h2 id="输入模式"><a href="#输入模式" class="headerlink" title="输入模式"></a>输入模式</h2><p>   在命令模式下按下i就进入了输入模式。<br>   在输入模式中，可以使用以下按键：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">字符按键以及Shift组合，输入字符。</span><br><span class="line">ENTER，回车键，换行。</span><br><span class="line">BACK SPACE，退格键，删除光标前一个字符。</span><br><span class="line">DEL，删除键，删除光标后一个字符。</span><br><span class="line">方向键，在文本中移动光标。</span><br><span class="line">HOME/END，移动光标到行首/行尾。</span><br><span class="line">Page Up/Page Down，上/下翻页。</span><br><span class="line">Insert，切换光标为输入/替换模式，光标将变成竖线/下划线。</span><br><span class="line">ESC，退出输入模式，切换到命令模式。</span><br></pre></td></tr></table></figure><h2 id="底线命令模式"><a href="#底线命令模式" class="headerlink" title="底线命令模式"></a>底线命令模式</h2><p>   在命令模式下按下:（英文冒号）就进入了底线命令模式。<br>   底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。<br>   在底线命令模式中，基本的命令有（已经省略了冒号）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">q 退出程序</span><br><span class="line">w 保存文件</span><br></pre></td></tr></table></figure><p>   按ESC键可随时退出底线命令模式。</p><h1 id="vim命令"><a href="#vim命令" class="headerlink" title="vim命令"></a>vim命令</h1><h2 id="命令模式下的基本命令"><a href="#命令模式下的基本命令" class="headerlink" title="命令模式下的基本命令"></a>命令模式下的基本命令</h2><h3 id="移动光标的方法"><a href="#移动光标的方法" class="headerlink" title="移动光标的方法"></a>移动光标的方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">h 或 向左箭头键(←)    -光标向左移动一个字符</span><br><span class="line">j 或 向下箭头键(↓)    -光标向下移动一个字符</span><br><span class="line">k 或 向上箭头键(↑)      -光标向上移动一个字符</span><br><span class="line">l 或 向右箭头键(→)    -光标向右移动一个字符</span><br></pre></td></tr></table></figure><p>如果想要进行多次移动的话，例如向下移动 30 行，可以使用 “30j” 或 “30↓” 的组合按键， 亦即加上想要进行的次数(数字)后，按下动作即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[Ctrl] + [f]         -屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)。</span><br><span class="line">[Ctrl] + [b]         -屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)。</span><br><span class="line">[Ctrl] + [d]         -屏幕『向下』移动半页。</span><br><span class="line">[Ctrl] + [u]         -屏幕『向上』移动半页。</span><br><span class="line">+                    -光标移动到非空格符的下一行。</span><br><span class="line">-                    -光标移动到非空格符的上一行。</span><br><span class="line">n&lt;space&gt;             -那个 n 表示『数字』，例如 20 。按下数字后再按空格键，光标会向右移动20个字符距离。</span><br><span class="line">0 或功能键[Home]      -这是数字『 0 』：移动到这一行的最前面字符处 (常用)。</span><br><span class="line">$ 或功能键[End]        -移动到这一行的最后面字符处(常用)。</span><br><span class="line"></span><br><span class="line">H        -光标移动到这个屏幕的最上方那一行的第一个字符。</span><br><span class="line">M        -光标移动到这个屏幕的中央那一行的第一个字符。</span><br><span class="line">L        -光标移动到这个屏幕的最下方那一行的第一个字符。</span><br><span class="line">G        -移动到这个文档的最后一行(常用)。</span><br><span class="line">nG       -n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)。</span><br><span class="line">gg       -移动到这个档案的第一行，相当于 1G 啊！ (常用)。</span><br><span class="line">n&lt;Enter&gt; -n 为数字。光标向下移动 n 行(常用)。</span><br></pre></td></tr></table></figure><h3 id="搜索替换"><a href="#搜索替换" class="headerlink" title="搜索替换"></a>搜索替换</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/word</span><br><span class="line">向光标之下寻找一个名称为word的字符串。例如要在档案内搜寻vbir 这个字符串，就输入/vbird即可！(常用)</span><br><span class="line">?word</span><br><span class="line">向光标之上寻找一个字符串名称为 word 的字符串。</span><br><span class="line">n  </span><br><span class="line">这个n是英文按键。代表重复前一个搜寻的动作。举例来说，如果刚刚我们执行/vbird去向下搜寻vbird这个字符串，则按下n后，会向下继续搜寻下一个名称为vbird的字符串。如果是执行?vbird的话，那么按下n则会向上继续搜寻名称为vbird的字符串！</span><br><span class="line">N    </span><br><span class="line">这个N是英文按键。与n刚好相反，为『反向』进行前一个搜寻动作。例如/vbird后，按下N则表示『向上』搜寻vbird。</span><br><span class="line">:n1,n2s/word1/word2/g</span><br><span class="line">n1与n2为数字。在第n1与n2行之间寻找word1这个字符串，并将该字符串取代为word2。(常用)</span><br><span class="line">:1,$s/word1/word2/g或:%s/word1/word2/g</span><br><span class="line">从第一行到最后一行寻找word1字符串，并将该字符串取代为word2。(常用）</span><br><span class="line">:1,$s/word1/word2/gc或:%s/word1/word2/gc</span><br><span class="line">从第一行到最后一行寻找word1字符串，并将该字符串取代为word2。且在取代前显示提示字符给用户确认(confirm)是否需要取代。(常用)</span><br></pre></td></tr></table></figure><h3 id="删除、复制与贴上"><a href="#删除、复制与贴上" class="headerlink" title="删除、复制与贴上"></a>删除、复制与贴上</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">x, X</span><br><span class="line">在一行字当中，x为向后删除一个字符(相当于[del]按键)，X为向前删除一个字符(相当于[backspace]亦即是退格键)。(常用)</span><br><span class="line">nx</span><br><span class="line">n 为数字，连续向后删除n个字符。举例来说，我要连续删除10个字符，『10x』。</span><br><span class="line">dd</span><br><span class="line">删除游标所在的那一整行(常用)。</span><br><span class="line">ndd</span><br><span class="line">n为数字。删除光标所在的向下n行，例如20dd则是删除20行(常用)。</span><br><span class="line">d1G</span><br><span class="line">删除光标所在到第一行的所有数据。</span><br><span class="line">dG</span><br><span class="line">删除光标所在到最后一行的所有数据。</span><br><span class="line">d$</span><br><span class="line">删除游标所在处，到该行的最后一个字符</span><br><span class="line">d0</span><br><span class="line">那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符。</span><br><span class="line">yy</span><br><span class="line">复制游标所在的那一行(常用)。</span><br><span class="line">nyy</span><br><span class="line">n为数字。复制光标所在的向下n行，例如20yy则是复制20行(常用)。</span><br><span class="line">y1G</span><br><span class="line">复制游标所在行到第一行的所有数据。</span><br><span class="line">yG</span><br><span class="line">复制游标所在行到最后一行的所有数据。</span><br><span class="line">y0</span><br><span class="line">复制光标所在的那个字符到该行行首的所有数据。</span><br><span class="line">y$</span><br><span class="line">复制光标所在的那个字符到该行行尾的所有数据。</span><br><span class="line">p, P</span><br><span class="line">p为将已复制的数据在光标下一行贴上，P则为贴在游标上一行！举例来说，我目前光标在第20行，且已经复制了10 行数据。则按下p后，那10行数据会贴在原本的20行之后，亦即由21行开始贴。但如果是按下P呢？那么原本的第20行会被推到变成30行。(常用)</span><br><span class="line">J</span><br><span class="line">将光标所在行与下一行的数据结合成同一行。</span><br><span class="line">c</span><br><span class="line">重复删除多个数据，例如向下删除 10 行，[ 10cj ]</span><br><span class="line">u</span><br><span class="line">复原前一个动作。(常用)</span><br><span class="line">[Ctrl]+r</span><br><span class="line">重做上一个动作。(常用)</span><br><span class="line">.</span><br><span class="line">不要怀疑！这就是小数点！意思是重复前一个动作的意思。如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！(常用)</span><br></pre></td></tr></table></figure><h2 id="进入编辑模式"><a href="#进入编辑模式" class="headerlink" title="进入编辑模式"></a>进入编辑模式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">i,I</span><br><span class="line">进入输入模式(Insert mode)：i为『从目前光标所在处输入』，I为『在目前所在行的第一个非空格符处开始输入』。(常用)</span><br><span class="line">a,A</span><br><span class="line">进入输入模式（Insertmode):a为『从目前光标所在的下一个字符处开始输入』，A为『从光标所在行的最后一个字符处开始输入』。(常用)|</span><br><span class="line">o,O</span><br><span class="line">进入输入模式(Insert mode):这是英文字母o的大小写。o为『在目前光标所在的下一行处输入新的一行』；O为在目前光标所在处的上一行输入新的一行！(常用)</span><br><span class="line">r, R</span><br><span class="line">进入取代模式(Replace mode)：r只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下ESC为止；(常用)</span><br><span class="line">[Esc]</span><br><span class="line">退出编辑模式，回到一般模式中(常用)。</span><br><span class="line">上面这些按键中，在 vi 画面的左下角处会出现『--INSERT--』或『--REPLACE--』的字样。</span><br></pre></td></tr></table></figure><h2 id="进入底线命令模式"><a href="#进入底线命令模式" class="headerlink" title="进入底线命令模式"></a>进入底线命令模式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">:w</span><br><span class="line">将编辑的数据写入硬盘档案中(常用)。</span><br><span class="line">:w!</span><br><span class="line">若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入，还是跟你对该档案的档案权限有关啊！</span><br><span class="line">:q</span><br><span class="line">离开vi(常用)</span><br><span class="line">:q!</span><br><span class="line">若曾修改过档案，又不想储存，使用!为强制离开不储存档案。</span><br><span class="line">:wq</span><br><span class="line">储存后离开，若为:wq!则为强制储存后离开(常用)。</span><br><span class="line">ZZ</span><br><span class="line">这是大写的Z喔！若档案没有更动，则不储存离开，若档案已经被更动过，则储存后离开！</span><br><span class="line">:w [filename]</span><br><span class="line">将编辑的数据储存成另一个档案（类似另存新档）。</span><br><span class="line">:r [filename]</span><br><span class="line">在编辑的数据中，读入另一个档案的数据。亦即将『filename』这个档案内容加到游标所在行后面。</span><br><span class="line">:n1,n2 w [filename]</span><br><span class="line">将 n1 到 n2 的内容储存成 filename 这个档案。</span><br><span class="line">:! command</span><br><span class="line">暂时离开vi到指令行模式下执行command的显示结果！例如『:! ls /home』即可在vi当中察看/home 底下以ls输出的档案信息！</span><br><span class="line">:set nu</span><br><span class="line">显示行号，设定之后，会在每一行的前缀显示该行的行号。</span><br><span class="line">:set nonu</span><br><span class="line">与set nu相反，为取消行号！</span><br><span class="line">注意一下啊，那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git测试与协议以及今日分享</title>
      <link href="/2019/10/16/2019-08-21-github-connect/"/>
      <url>/2019/10/16/2019-08-21-github-connect/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="和别人协同合作项目"><a href="#和别人协同合作项目" class="headerlink" title="和别人协同合作项目"></a>和别人协同合作项目</h1><ol><li><p>首先fork你要的项目<br>点击fork时，就会跳到自己的账号里，然后就把别人的一个库复制到成了自己的库。</p></li><li><p>git clone （<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:raoweijiapng/hellocountry.git）使用ssh类型的地址。</p></li><li><p>将别人的项目地址添加为远程仓库<br> 进入刚刚克隆的目录中：<br>git remote add upstream <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:17824909342/hellocountry.git（别人的项目地址）<br>使用git remote -v<br>可以看到我们有两个仓库一个origin，咱们自己的github仓库；一个upstream，原作者的远程仓库。当然也可以不用upstream这个名字。</p></li><li><p>新建分支，在分支上修改<br>git checkout -b test<br>然后就可以添加我们的修改了。</p></li><li><p>同步别人的项目仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git fetch orgin master:tmp //将远程仓库master分支获取最新，在本地建立tmp分支</span><br><span class="line">git diff tmp //将当前分支和tmp进行对比</span><br><span class="line">git merge origin/master //合并tmp分支到当前分支</span><br></pre></td></tr></table></figure></li></ol><p>​     git add和git commit 一下<br>  6. 将修改push到我们的github上<br>    git push origin test:test<br>  7. pull request<br>    修改已经push到了github下了，但是要向原作者请求合并到原项目中，如果原作者合并了，也就意味着你是此项目的贡献者了。<br>  到你的github上点击如下按钮 pull request<br>  当然你也可以选择test分支，，然后点击项目右边的创建一个pull request。提交完pull request，原作者就会看到你的合并请求，采不采纳就是他的事了。</p><h1 id="git的四种协议"><a href="#git的四种协议" class="headerlink" title="git的四种协议"></a>git的四种协议</h1><ul><li><p>本地协议<br>最基本的协议，其远程仓库其实就是硬盘内部的一个目录（例如D:\project）。常见于团队内的人对一个共享的文件系统（例如NFS）具有访问权限，或者多人共用一台电脑的情况。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以使用git clone /d/project来克隆本地的远程仓库。还可以使用带file协议的路径：git clone file:///d/project克隆本地远程仓库。</span><br></pre></td></tr></table></figure><p>本地协议的优点：搭建简单。直接使用了现有的文件权限和网络访问权限，如果已经有了共享文件系统，建立版本库会十分容易，只需要像设置其他共享目录一样，将一个Git仓库放在大家都能够访问到的路径并设置好读写权限就可以了。<br>缺点：不方便从多个位置访问，例如你在公司的电脑上搭建了本地仓库，你想在家里访问就有点困难了。不能保证Git仓库的安全，由于每一个人都具有仓库目录完整的shell权限，没有方法可以阻止他们删除或者破坏仓库。</p></li><li><p>HTTP协议<br>（DUMP）HTTP协议（旧，很少使用了）：只支持只读模式。<br>智能（smart）HTTP协议（新，GitHub目前就使用了这种协议）：支持读写模式。既可以像git://协议一样设置匿名服务，又可以像SSH一样提供传输时的授权和加密，而且只用一个URL就可以。<br>得到git://和SSH的功能，省去了为不同的需求设置不同的URL。 HTTP协议推送(push)以及拉取（pull），服务器都会询问你的用户名和密码。<br>HTTP协议的优点：不同的访问方式只需要一个URL，服务器只在需要授权时提示输入授权信息。<br>相对于SSH而言，不需要生成SSH秘钥对再把秘钥上传到服务器上。<br>HTTP/S被广泛采用，一般的企业防火墙都会允许这些端口的数据通过。<br>缺点：在一些服务器上，架设HTTP/S协议会比SSH协议棘手一些；每次需要输入用户名和密码，管理这些凭证会比较麻烦一些（当然你可以使用凭证存储工具，keychain（OSX））。</p></li><li><p>SSH协议<br>　　架设Git服务器时常用SSH协议作为传输协议，因为大多数环境都支持SSH访问，即使不支持也比较容易搭建。<br>$ git clone ssh://user@server/project.git //使用ssh协议clone一个仓库<br>优点：1.架设简单；2.数据传输时是安全的（所有数据传输时都经过授权和加密）；3.高效，和其他3种协议一样，在传输数据时也会尽量压缩数据。<br>缺点：不能通过它实现匿名访问。即使使用者只需要读取数据，使用者也要有通过SSH访问你主机的权限，不利于开源项目。</p></li><li><p>Git协议<br>包含在Git里的一个特殊的守护进程中，监听一个特定的端口9418（类似于SSH服务，但是无需任何访问授权）。<br>优点：目前是Git所使用的协议里面最快的。如果你的项目不需要为写进行用户授权，可以使用Git协议。<br>缺点：1.缺乏授权机制，一旦放开推送操作，意味着网络上的任何人都能向你的项目推送代码；2.架设难。</p></li></ul><h1 id="git测试"><a href="#git测试" class="headerlink" title="git测试"></a>git测试</h1><p>  考试内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line">raoweijia@raoweijia-ThinkPad-E580:~$ mkdir xiongdihui</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~$ cd xiongdihui/</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git init</span><br><span class="line">已初始化空的 Git 仓库于 /home/raoweijia/xiongdihui/.git/</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ touch 2019-08-21-git.md</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ vim 2019-08-21-git.md </span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git add 2019-08-21-git.md </span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git commit -m&quot;diyicitijiao&quot;</span><br><span class="line">[master（根提交） 8622081] diyicitijiao</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 2019-08-21-git.md</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git remote add xiongdihui git@github.com:raoweijiapng/github.git</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git branch test</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git checkout test</span><br><span class="line">切换到分支 &apos;test&apos;</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git mv 2019-08-21-git.md 2019-08-21-git-test.md</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git push -u xiongdihui test</span><br><span class="line">枚举对象: 3, 完成.</span><br><span class="line">对象计数中: 100% (3/3), 完成.</span><br><span class="line">写入对象中: 100% (3/3), 230 bytes | 230.00 KiB/s, 完成.</span><br><span class="line">总共 3 （差异 0），复用 0 （差异 0）</span><br><span class="line">To github.com:raoweijiapng/github.git</span><br><span class="line"> * [new branch]      test -&gt; test</span><br><span class="line">分支 &apos;test&apos; 设置为跟踪来自 &apos;xiongdihui&apos; 的远程分支 &apos;test&apos;。</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git checkout master</span><br><span class="line">A 2019-08-21-git-test.md</span><br><span class="line">D 2019-08-21-git.md</span><br><span class="line">切换到分支 &apos;master&apos;</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git fetch xiongdihui test</span><br><span class="line">来自 github.com:raoweijiapng/github</span><br><span class="line"> * branch            test       -&gt; FETCH_HEAD</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git diff xiongdiui/test</span><br><span class="line">fatal: 有歧义的参数 &apos;xiongdiui/test&apos;：未知的版本或路径不存在于工作区中。</span><br><span class="line">使用 &apos;--&apos; 来分隔版本和路径，例如：</span><br><span class="line">&apos;git &lt;命令&gt; [&lt;版本&gt;...] -- [&lt;文件&gt;...]&apos;</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git diff xiongdihui/test</span><br><span class="line">diff --git a/2019-08-21-git.md b/2019-08-21-git-test.md</span><br><span class="line">similarity index 100%</span><br><span class="line">rename from 2019-08-21-git.md</span><br><span class="line">rename to 2019-08-21-git-test.md</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git merge xiongdihui/test</span><br><span class="line">已经是最新的。</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git push xiongdihui</span><br><span class="line">fatal: 当前分支 master 没有对应的上游分支。</span><br><span class="line">为推送当前分支并建立与远程上游的跟踪，使用</span><br><span class="line"></span><br><span class="line">    git push --set-upstream xiongdihui master</span><br><span class="line"></span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git push xiongdihui master</span><br><span class="line">总共 0 （差异 0），复用 0 （差异 0）</span><br><span class="line">remote: </span><br><span class="line">remote: Create a pull request for &apos;master&apos; on GitHub by visiting:</span><br><span class="line">remote:      https://github.com/raoweijiapng/github/pull/new/master</span><br><span class="line">remote: </span><br><span class="line">To github.com:raoweijiapng/github.git</span><br><span class="line"> * [new branch]      master -&gt; master</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git tag -a v1.0</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git push xiongdihui v1.0</span><br><span class="line">枚举对象: 1, 完成.</span><br><span class="line">对象计数中: 100% (1/1), 完成.</span><br><span class="line">写入对象中: 100% (1/1), 157 bytes | 157.00 KiB/s, 完成.</span><br><span class="line">总共 1 （差异 0），复用 0 （差异 0）</span><br><span class="line">To github.com:raoweijiapng/github.git</span><br><span class="line"> * [new tag]         v1.0 -&gt; v1.0</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git remote -v</span><br><span class="line">xiongdihui  git@github.com:raoweijiapng/github.git (fetch)</span><br><span class="line">xiongdihui  git@github.com:raoweijiapng/github.git (push)</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git checkout -b test2</span><br><span class="line">A 2019-08-21-git-test.md</span><br><span class="line">D 2019-08-21-git.md</span><br><span class="line">切换到一个新分支 &apos;test2&apos;</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ vim 2019-08-21-git-test.md </span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git tag -a v2.0 -m&quot;dewd&quot;</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git push xiongdihui master</span><br><span class="line">Everything up-to-date</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git push xiongdihui v2.0</span><br><span class="line">枚举对象: 1, 完成.</span><br><span class="line">对象计数中: 100% (1/1), 完成.</span><br><span class="line">写入对象中: 100% (1/1), 157 bytes | 157.00 KiB/s, 完成.</span><br><span class="line">总共 1 （差异 0），复用 0 （差异 0）</span><br><span class="line">To github.com:raoweijiapng/github.git</span><br><span class="line"> * [new tag]         v2.0 -&gt; v2.0</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git checkout master</span><br><span class="line">A 2019-08-21-git-test.md</span><br><span class="line">D 2019-08-21-git.md</span><br><span class="line">切换到分支 &apos;master&apos;</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ vim 2019-08-21-git-test.md </span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git push xiongdihui test3</span><br><span class="line">error: 源引用表达式 test3 没有匹配</span><br><span class="line">error: 推送一些引用到 &apos;git@github.com:raoweijiapng/github.git&apos; 失败</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git push -f -u xiongdihui test3</span><br><span class="line">error: 源引用表达式 test3 没有匹配</span><br><span class="line">error: 推送一些引用到 &apos;git@github.com:raoweijiapng/github.git&apos; 失败</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git push xiongdihui master:test3</span><br><span class="line">总共 0 （差异 0），复用 0 （差异 0）</span><br><span class="line">remote: </span><br><span class="line">remote: Create a pull request for &apos;test3&apos; on GitHub by visiting:</span><br><span class="line">remote:      https://github.com/raoweijiapng/github/pull/new/test3</span><br><span class="line">remote: </span><br><span class="line">To github.com:raoweijiapng/github.git</span><br><span class="line"> * [new branch]      master -&gt; test3</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git checkout test3</span><br><span class="line">A 2019-08-21-git-test.md</span><br><span class="line">D 2019-08-21-git.md</span><br><span class="line">分支 &apos;test3&apos; 设置为跟踪来自 &apos;xiongdihui&apos; 的远程分支 &apos;test3&apos;。</span><br><span class="line">切换到一个新分支 &apos;test3&apos;</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ vim 2019-08-21-git-test.md </span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git push xiongdihui test3</span><br><span class="line">Everything up-to-date</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git log</span><br><span class="line">commit 86220815cf1000aafaa913e2542dbb3d0332a228 (HEAD -&gt; test3, tag: v2.0, tag: v1.0, xiongdihui/test3, xiongdihui/test, xiongdihui/master, test2, test, master)</span><br><span class="line">Author: raoweijia-png &lt;raoweijia@outlook.com&gt;</span><br><span class="line">Date:   Wed Aug 21 19:35:48 2019 +0800</span><br><span class="line"></span><br><span class="line">    diyicitijiao</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git reset --hard e580356   版本回退</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git checkout test2</span><br><span class="line">A 2019-08-21-git-test.md</span><br><span class="line">D 2019-08-21-git.md</span><br><span class="line">切换到分支 &apos;test2&apos;</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ touch test2.md</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ vim test2.md </span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git add test2.md </span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git commit -m&quot;abc&quot;</span><br><span class="line">[test2 142c544] abc</span><br><span class="line"> 2 files changed, 1 insertion(+)</span><br><span class="line"> rename 2019-08-21-git.md =&gt; 2019-08-21-git-test.md (100%)</span><br><span class="line"> create mode 100644 test2.md</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git commit -amend</span><br><span class="line">error: 你的意思是 `--amend`（有两个短线？）</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git commit --amend</span><br><span class="line">[test2 e580356] abcdd</span><br><span class="line"> Date: Wed Aug 21 20:00:56 2019 +0800</span><br><span class="line"> 2 files changed, 1 insertion(+)</span><br><span class="line"> rename 2019-08-21-git.md =&gt; 2019-08-21-git-test.md (100%)</span><br><span class="line"> create mode 100644 test2.md</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git revert （e580356）   撤消指定的提交</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git remote rm xiongdihui</span><br><span class="line">raoweijia@raoweijia-ThinkPad-E580:~/xiongdihui$ git log</span><br></pre></td></tr></table></figure><p>  错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git revert （哈希值）   撤消指定的提交。</span><br><span class="line">git reset --hard （哈希值或标签名）  -回退版本  要进行强行提交，使用git push -f -u (主机名) (分支名)</span><br><span class="line">git push （主机名）（标签名）  提交标签到远程库</span><br><span class="line">git remote rm （主机名）  删除远程库地址</span><br><span class="line">git push （主机名）（本地分支）：（远程分支） 把某个本地分支提交到远程分支。</span><br><span class="line">git reset HEAD (file)  不想提交的缓存文件，用上一次提交的树替换缓存区。</span><br><span class="line">git checkout --（file）</span><br><span class="line">git checkout HEAD（file）用master的树替换工作区和缓存区。</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/shimazhuge/article/details/52759429" target="_blank" rel="noopener">相关的命令博客</a></p><p><img src="https://raoweijiapng.github.io/static/img/git.png" alt="git命令速查表"></p><h1 id="Python与人工智能"><a href="#Python与人工智能" class="headerlink" title="Python与人工智能"></a>Python与人工智能</h1><p>  人工智能包含常用机器学习和深度学习两个很重要的模块，而python拥有matplotlib、Numpy、sklearn、keras等大量的库，像pandas、sklearn、matplotlib这些库都是做数据处理、数据分析、数据建模和绘图的库，基本上机器学习中对数据的爬取（scrapy）、对数据的处理和分析（pandas）、对数据的绘图（matplotlib）和对数据的建模（sklearn）在python中全都能找到对应的库来进行处理。</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git基础命令分享</title>
      <link href="/2019/10/16/2019-08-20-git-opreation/"/>
      <url>/2019/10/16/2019-08-20-git-opreation/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><h1 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h1><pre><code>1. 在当前目录下创建一个名libgit2的目录,并在这个目录下初始化一个.git文件夹,从远程仓库拉取下所有数据放入.git文件夹,然后从中读取最新版本的文件的拷贝。 $ git clone https://github.com/libgit2/libgit22. 与上一个命令相同的操作,不过在本地创建的仓库名字变为mylibgit。$ git clone https://github.com/libgit2/libgit2 mylibgit3. 获取指定分支的代码。$ git clone -b 分支名称 --single-branch git仓库的地址</code></pre><h1 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a>git init</h1><pre><code>1. 该命令创建一个空的Git仓库，基本上是创建一个具有objects，refs/head，refs/tags和模板文件的.git目录。2. 现有存储库中运行git init命令是安全的，它不会覆盖已经存在的东西。</code></pre><h1 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h1><pre><code>1. git add (file)通常是通过git add 把某个file添加到索引库中，可以是文件也可以是目录。2. git add .把所有文件和目录添加到索引库中。</code></pre><h1 id="git-mv"><a href="#git-mv" class="headerlink" title="git mv"></a>git mv</h1><pre><code>1. git mv rename rename.md把文件rename重命名为rename.md。2. git mv text.txt mydir把文件text.txt转移道mydir文件夹。</code></pre><h1 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h1><pre><code>1. git reset HEAD &lt;file&gt;如果我们暂存的文件不想提交，可以用这条命令让暂存区的目录树会被重写，被master分支指向的目录树所替换，但是工作区不受影响。2. git reset --hard重设（重置）索引和工作目录，自从&lt;commit&gt;以来在工作目录中的任何改变都被丢弃，并把HEAD指向&lt;commit&gt;,回退版本。</code></pre><h1 id="git-clean"><a href="#git-clean" class="headerlink" title="git clean"></a>git clean</h1><pre><code>1. git clean -n是一次clean的演习，告诉你哪些文件会被删除。记住他不会真正的删除文件,只是一个提醒。2. git clean -f删除当前目录下所有没有track过的文件。他不会删除.gitignore文件里面指定的文件夹和文件,不管这些文件有没有被track过。3. git clean -df删除当前目录下没有被track过的文件和文件夹。4. git clean - xf删除当前目录下所有没有track过的文件。不管他是否是.gitignore文件里面指定的文件夹和文件。</code></pre><h1 id="git-rm"><a href="#git-rm" class="headerlink" title="git rm"></a>git rm</h1><pre><code>1. git rm删除未缓存的文件，与rm是不一样的，git rm要提交删除记录给远程库，让它也删除。2. git rm -r 删除目录，并从git的仓库管理系统中移除。3. git rm -f强制删除文件。4. git rm -cached从索引中删除文件，但是本地文件还存在。</code></pre><h1 id="git-log-回顾提交历史"><a href="#git-log-回顾提交历史" class="headerlink" title="git log   回顾提交历史"></a>git log   回顾提交历史</h1><pre><code>1. git log --oneline  查看历史记录的简洁的版本。 2. git log --graph查看历史中什么时候出现了分支，合并。以下为相同的命令，开启了拓扑图选项。3. git log --author = Linus --oneline -5查看五条Git源码中Linus提交的历史。4. git log --before = {3.weeks.ago} --after = {2010-04-18}                                    --until看Git项目中三周前且在四月十八日之后的所有提交。5. git log --no-merges查看历史，隐藏合并提交。</code></pre><h1 id="git-show"><a href="#git-show" class="headerlink" title="git show"></a>git show</h1><pre><code>1. git show v1.0.0显示标签v1.0.0的消息，以及标签指向的对象2. git show v1.0.0^{tree}显示标签v1.0.0指向的树，即commit是的文件及文件夹。3.  git show next~10:/README显示分支next第十次提交中的RENAME.md的内容，RENAME必须存在分支中。</code></pre><h1 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h1><pre><code>用于显示工作目录和暂存区的状态。使用此命令能看到那些修改被暂存到了, 哪些没有,哪些文件没有被Git tracked到。git status不显示已经commit到项目历史中去的信息。git status -s   显示简洁的状态。</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">On branch master</span><br><span class="line">Changes to be committed:  (已经在stage区, 等待添加到HEAD中的文件)</span><br><span class="line">(use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line">modified: hello.py</span><br><span class="line"></span><br><span class="line">Changes not staged for commit: (有修改, 但是没有被添加到stage区的文件)</span><br><span class="line">(use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">(use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line">modified: main.py</span><br><span class="line"></span><br><span class="line">Untracked files:(没有tracked过的文件, 即从没有add过的文件)</span><br><span class="line">(use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br></pre></td></tr></table></figure><h1 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h1><pre><code>查看当前有哪些分支:$ git branchmaster* wchar_support上面显示结果中，当前有两个分支：master和wchar_support，当前在wchar_support分支上，它前面有个星号（*）1. git branch dev2下面命令将创建一个分支：dev2。2. git checkout dev2切换到指定分支：dev2。3.  git branch -a   git branch -r  查看远程分支查看本地和远程分支。4. git branch -m dev2 dev3修改分支dev2的名字为dev3。5. git push origin --delete dev2删除远程分支dev2。6. git merge dev2合并分支：dev2到当前分支（master）。7. git branch -d abc删除本地分支abc。</code></pre><h1 id="git-checkout"><a href="#git-checkout" class="headerlink" title="git checkout"></a>git checkout</h1><pre><code>1. git checkout dev2切换到分支dev2 或从暂存区把dev2文件替换工作区内的dev2（如果工作区中没有相应的文件，就复制到工作区中）。2. git checkout -b abc创建分支abc 并切换到abc中。3. git checkout HEAD会用HEAD指向的master分支中的全部或者部分文件替换暂存区和以及工作区中的文件。4. git checkout -b mywork origin/master基于远程库分支”origin/master“，创建一个叫”mywork“的分支，并进入mywork分支。</code></pre><h1 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h1><pre><code>将索引的当前内容与描述更改的用户和日志消息一起存储在新的提交中。1. git commit （-a -m）或 （-am）跳过提交缓存的流程，直接进行提交。2. git commit --amend如果commit注释写错了，可以用此命令改一下注释。</code></pre><h1 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h1><pre><code>比较的是工作目录(Working tree)和暂存区域快照(index)之间的差异，即修改之后还没有暂存起来的变化内容。1. git diff --stat查看简单的diff结果。2. git diff --cached查看已经暂存起来的文件(staged)和上次提交时的差异，即暂存区与最新提交的改动。3. git diff HEAD查看已缓存的与未缓存的所有改动。4. git diff topic..master输出自topic和master分别开发以来，master分支上的变更。5. git diff test查看当前目录和另外一个分支(test)的差别。6. git diff SHA1 SHA2比较两个历史版本之间的差异，SHA1，SHA2是类似 COMMIT ID 的32位长度的值。</code></pre><h1 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h1><pre><code>将分支dev合并到当前分支中，自动进行新的提交。1. git merge --no-commit dev将分支dev合并到当前分支中，自动进行新的提交。</code></pre><h1 id="git-rebase"><a href="#git-rebase" class="headerlink" title="git rebase"></a>git rebase</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout mywork</span><br><span class="line">$ git rebase origin</span><br><span class="line">这些命令会把你的”mywork“分支里的每个提交(commit)取消掉，并且把它们临时保存为补丁(patch)(这些补丁放到”.git/rebase“目录中),然后把”mywork“分支更新到最新的”origin“分支，最后把保存的这些补丁应用到”mywork“分支上。</span><br><span class="line">在另一个分支基础之上重新应用，用于把一个分支的修改合并到当前分支。</span><br><span class="line">之后用”git add“命令去更新这些内容的索引(index), 然后不需要执行git commit,只要执行：</span><br><span class="line">$ git rebase --continue</span><br><span class="line">在任何时候，可以用--abort参数来终止rebase的操作，并且”mywork“ 分支会回到rebase开始前的状态。</span><br><span class="line">$ git rebase --abort</span><br></pre></td></tr></table></figure><h1 id="git-tag"><a href="#git-tag" class="headerlink" title="git tag"></a>git tag</h1><pre><code>列出现有的所有标签。1. git tag -a v1.4 -m&apos;my version 1.4&apos;创建一个含附注类型的标签。用-a指定标签名字，而-m选项则指定了对应的标签说明。2. git tag -s v1.5 -m &apos;my signed 1.5 tag&apos;如果有自己的私钥，还可以用GPG来签署标签，再运行git show会看到对应的GPG签名也附在其内。3. git tag -d v1.0删除名称为：v1.0的标签。4. git tag v1.4-lw创建轻量级标签，这种标签实际上就是一个保存着对应提交对象的校验和信息的文件。5. git tag -a v1.2 9fceb02在提交之前忘记设标签，就可以使用此命令，后面的9fceb02 是版本的哈希值。6. git push origin v1.5git push origin --tags （分享所有标签）分享标签，发送到远程库中，其他人在使用这个远程库就可以看到标签。</code></pre><h1 id="git-fetch"><a href="#git-fetch" class="headerlink" title="git fetch"></a>git fetch</h1><pre><code>1. git fetch （主机名 如origin）将某个远程主机的更新，全部取回本地。默认情况下，git fetch取回所有分支的更新。2. git fetch origin master取回origin主机下的master分支的更新。所取回的更新，在本地主机上要用”远程主机名/分支名”的形式读取。以上就用origin/master读取。2. git fetch origin +pu:pu maint:tmp此更新(或根据需要创建)通过从远程存储库的分支(分别)pu和maint提取来分支本地存储库中的pu和tmp。即使没有快进，pu分支将被更新，因为它的前缀是加号; tmp不会。</code></pre><h1 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h1><pre><code>1. git pull origin next取回origin/next分支，再与当前分支合并。</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">等同于</span><br><span class="line">$ git fetch origin</span><br><span class="line">$ git merge origin/next</span><br></pre></td></tr></table></figure><pre><code>2. git pull origin next:master要取回origin主机的next分支，与本地的master分支合并。在某些场合，Git会自动在本地分支与远程分支之间，建立一种追踪关系(tracking)。比如，在git clone的时候，所有本地分支默认与远程主机的同名分支，建立追踪关系，也就是说，本地的master分支自动”追踪”origin/master分支。3. git branch --set-upstream master origin/next上面命令指定master分支追踪origin/next分支。4. git pull origin上面命令表示，本地的当前分支自动与对应的origin主机”追踪分支”(remote-tracking branch)进行合并。如果当前分支只有一个追踪分支，连远程主机名都可以省略。</code></pre><h1 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h1><pre><code>用于将本地分支的更新，推送到远程主机。1. git push origin master上面命令表示，将本地的master分支推送到origin主机的master分支。如果master不存在，则会被新建。2. git push origin --delete master上面命令表示删除origin主机的master分支。3. git push --all origin上面命令表示，将所有本地分支都推送到origin主机。4. git push origin --tags向远程库推送标签(tag)。</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">推送tag</span><br><span class="line">$ git push origin tag_name</span><br><span class="line">删除远程标签</span><br><span class="line">$ git push origin:tag_name</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh连接远程库和一些命令分享</title>
      <link href="/2019/10/16/2019-08-19-share-and-git/"/>
      <url>/2019/10/16/2019-08-19-share-and-git/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><p>​今天主要学习markdown和git语言，</p><h1 id="Git-退回以前的仓库版本"><a href="#Git-退回以前的仓库版本" class="headerlink" title="Git 退回以前的仓库版本"></a>Git 退回以前的仓库版本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 本地新建old_master分支做备份  </span><br><span class="line">$ git branch old_master  </span><br><span class="line">// 将备份分支push到远程仓库  </span><br><span class="line">$ git push origin old_master:old_master  </span><br><span class="line">// 本地仓库回退到某个版本如 bae168  </span><br><span class="line">$ git reset –-hard bae168  </span><br><span class="line">// 删除远程仓库的master分支  </span><br><span class="line">$ git push origin :master  </span><br><span class="line">// 重新创建远程仓库master分支  </span><br><span class="line">git push origin master</span><br><span class="line">强制提交</span><br><span class="line">git push -f -u origin master</span><br><span class="line">最后，要求所有成员删除本地仓库master分支，重新抓取避免执行 git push 后，又将远程版本更新。</span><br></pre></td></tr></table></figure><h1 id="生成记事本快捷方式"><a href="#生成记事本快捷方式" class="headerlink" title="生成记事本快捷方式"></a>生成记事本快捷方式</h1><p>在终端中：sudo degit<br>然后在“模板”中加入某种格式的空白文档</p><h1 id="使用SSH方式连接远程仓库"><a href="#使用SSH方式连接远程仓库" class="headerlink" title="使用SSH方式连接远程仓库"></a>使用SSH方式连接远程仓库</h1><pre><code>1. 生成SSH公钥ssh-keygen -t rsa -C &quot;raoweijiapng&quot; 2. 输入密码，如果为空代表以后提交信息到仓库的时候，不用再次输入密码，那当然为空最好。验证是否设置成功：ssh -T git@github.com3. 将id_rsa.pub数据复制到github设置SSH设置中，登录后一次点击settings-&gt;SSH and GPG keys-&gt;New SSHkey，然后将填写key的名称，将id_rsa.pub文件的内容全部复制到填写公钥的输入框中即可。4. 设置全局的user.name user.email $ git config user.name &quot;dadi&quot; $ git config user.email &quot;123123123@qq.com&quot;5. 添加别名，别名绑定的远程仓库地址是SSH方式的地址如果别名已经存在，我们要先删除,再重新添加。git remote rm mystoregit remote add mystore &quot;git@github.com:18357136930/chenycstore.git&quot;最后就可以使用git命令和远程仓库进行交互。</code></pre><h1 id="markdown语法测试"><a href="#markdown语法测试" class="headerlink" title="markdown语法测试"></a>markdown语法测试</h1><pre><code> # fewfew   一级标题### 饶唯甲   三级标题### 2019-08-19   三级标题### 今天任务     三级标题1. markdown语法    有序列表2. git命令3. 博客加了音乐#### 明日计划      三级标题1. 复习git        有序列表2. 复习markdown#### 今天学习了markdown语言，和git的语言          三级标题#### markdown事例                             三级标题**shili**            粗体*shili*              斜体***shili***          粗斜体|dsds|dsad|da|       列表|--:|:--:|--||dwqd|dqwd|dqwd|![baidu](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1690699292,1481547313&amp;fm=26&amp;gp=0.jpg)        网络图片![baidu](/home/raoweijia/图片/1.png)            本地图片\`\`\`dfqwjdwemdw            代码块dwqdwqdwdqdwqddwed\`\`\`</code></pre>]]></content>
      
      
      <categories>
          
          <category> ssh git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于jekyll使用git连接githut搭建个人博客</title>
      <link href="/2019/10/16/2019-08-15-github-git/"/>
      <url>/2019/10/16/2019-08-15-github-git/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><p>​        首先install Git ，注册GitHub账号，创建公共库，然后进入jekyll官网下载个人博客的主题，最后使用git指令在终端上传到github，这时可以登陆raoweijiapng.github.io进入个人博客。</p><ul><li>终端安装Git指令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><ul><li>注册一个github</li></ul><p><img src="https://img-blog.csdn.net/20180101101023382?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvSGFuZ2hhbmdf/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>新建一个公共库，库名为账号名.github.</p><h1 id="用git连接Github"><a href="#用git连接Github" class="headerlink" title="用git连接Github"></a>用git连接Github</h1><ul><li><p>生成SSH秘钥</p><p>​        在终端输入：ssh-keygen -t rsa -C “<a href="mailto:raoweijia@outlook.com" target="_blank" rel="noopener">raoweijia@outlook.com</a>”，其中“<a href="mailto:raoweijia@outlook.com" target="_blank" rel="noopener">raoweijia@outlook.com</a>”是你的邮箱地址。<br>​                                    <img src="http://s8.sinaimg.cn/mw690/0060N6Yozy7greAPlzh87&690" alt="æç¨ï¼ç¬¬ä¸æ¬¡ä»linuxä¸­ä¸ä¼ æä»¶å°GitHub"></p><p>逐行分析：</p></li></ul><p><a href="http://album.sina.com.cn/pic/0060N6Yozy7greEfyxBb3" target="_blank" rel="noopener"><img src="http://s4.sinaimg.cn/mw690/0060N6Yozy7greEfyxBb3&690" alt="教程：第一次从linux中上传文件到GitHub"> </a></p><p>​        第3行：询问用户，创建的SSH-Key要保存在哪一个文件（默认/root/.ssh/id_rsa），按Enter确定，</p><p><a href="http://album.sina.com.cn/pic/0060N6Yozy7greG2SUq12" target="_blank" rel="noopener"><img src="http://s3.sinaimg.cn/mw690/0060N6Yozy7greG2SUq12&690" alt="教程：第一次从linux中上传文件到GitHub"></a></p><p>​        第4行：因为我实在根用户下操作，根用户的家目录没有.ssh文件夹，所以创建一个.ssh/id_rsa 来保 存SSh-Key。</p><p><a href="http://album.sina.com.cn/pic/0060N6Yozy7greHTJT1ff" target="_blank" rel="noopener"><img src="http://s16.sinaimg.cn/mw690/0060N6Yozy7greHTJT1ff&690" alt="教程：第一次从linux中上传文件到GitHub"></a></p><p>​        第5、6行：提示你设置密码，密码长度要求不少于五位，否则密码设置失败。</p><p><a href="http://album.sina.com.cn/pic/0060N6Yozy7greKojRa4c" target="_blank" rel="noopener"><img src="http://s13.sinaimg.cn/mw690/0060N6Yozy7greKojRa4c&690" alt="教程：第一次从linux中上传文件到GitHub"></a></p><p>​        后面的只是生成的一些SSH-Key信息，不用理会。</p><p>添加SSH Key到GitHub</p><p>在网页上打开你的GitHub：</p><p><a href="http://album.sina.com.cn/pic/0060N6Yozy7greRphyf17" target="_blank" rel="noopener"><img src="http://s8.sinaimg.cn/mw690/0060N6Yozy7greRphyf17&690" alt="教程：第一次从linux中上传文件到GitHub"></a><br><img src="http://s16.sinaimg.cn/mw690/0060N6Yozy7greMvPXh2f&690" alt="教程：第一次从linux中上传文件到GitHub"></p><p>​         点击“SSH and GPG keys”，会出现（因为我的已经有一个了，所以在这里有显示；但是如果之前没有设置 的话，会提示“There are no SSH keys associated with your account.”）：</p><p><a href="http://album.sina.com.cn/pic/0060N6Yozy7greUfMGZ31" target="_blank" rel="noopener"><img src="http://s2.sinaimg.cn/mw690/0060N6Yozy7greUfMGZ31&690" alt="教程：第一次从linux中上传文件到GitHub"></a><br><a href="http://album.sina.com.cn/pic/0060N6Yozy7greW4q5826" target="_blank" rel="noopener"><img src="http://s7.sinaimg.cn/bmiddle/0060N6Yozy7greW4q5826&690" alt="教程：第一次从linux中上传文件到GitHub"></a></p><p>​         其中：“Title”块自己随便填，如果你有多台Linux，建议Title能体现你的SSH-key指的是哪一台Linux。</p><p>“Key”里面填的就是SSH-Key：在“一、  Linux上操作，生成SSH秘钥”中，我把SSH-key保存在Linux的 路径为/root/.ssh/id_rsa.pub 的文件里。所以，输入命令：vi /root/.ssh/id_rsa.pub。</p><p><a href="http://album.sina.com.cn/pic/0060N6Yozy7greZFzcp15" target="_blank" rel="noopener"><img src="http://s6.sinaimg.cn/mw690/0060N6Yozy7greZFzcp15&690" alt="教程：第一次从linux中上传文件到GitHub"></a></p><p>​        就可以看到SSH-key，它是以“ssh-rsa”开头  以邮箱结尾，把“ssh-rsa ……LI7x”即邮箱前的全部字符复制。将它们复制到GitHub上的“Key”栏中：</p><p><img src="http://s7.sinaimg.cn/mw690/0060N6Yozy7greZJaxEb6&690" alt="教程：第一次从linux中上传文件到GitHub"></p><p>​        点击“Add SSH key”，会提示输入GitHub用户密码，输入后，即可完成。</p><ul><li><p>测试密钥是否可行</p><p>​    逐行解释：</p></li></ul><p><img src="http://s7.sinaimg.cn/mw690/0060N6Yozy7greZOtOCf6&690" alt="教程：第一次从linux中上传文件到GitHub"></p><p>​            在linux终端输入ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>     出现警告：</p><p><img src="http://s2.sinaimg.cn/mw690/0060N6Yozy7greZRSw1c1&690" alt="教程：第一次从linux中上传文件到GitHub"></p><p>​            直接输入  yes    出现提示：</p><p><img src="http://s1.sinaimg.cn/mw690/0060N6Yozy7greZWy3u60&690" alt="教程：第一次从linux中上传文件到GitHub"></p><p>​            输入设置SSH-key时的密码（步骤一的step2设置的密码），出现：</p><p><img src="http://s12.sinaimg.cn/bmiddle/0060N6Yozy7greZZgPFab&690" alt="教程：第一次从linux中上传文件到GitHub"></p><p>​            算是成功了。</p><ul><li><p>创建本地库</p><p>​    第一种方法:在本地某个文件中增加后缀为.github.io的文件夹 然后在此文件中执行git init。</p><p>​    第二种方法：克隆github的空白库到指定的位置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/ *用户名* / *用户名* .github.io</span><br></pre></td></tr></table></figure></li><li><p>下载jekyll主题</p><p>​    去官网<a href="http://jekyllthemes.org/" target="_blank" rel="noopener">http://jekyllthemes.org/</a> ，下载压缩包。</p></li><li><p>拷贝主题文件到克隆的库文件</p><p>​    把压缩包进行解压，然后把解压下的文件拷贝到本地库中，然后通过git指令把本地库的文件上传到GitHub的相应后缀为账户名.github.io的公共库中。</p></li><li><p>连接GitHub</p></li></ul><p><img src="http://s14.sinaimg.cn/bmiddle/0060N6Yozy7grf057EFad&690" alt="教程：第一次从linux中上传文件到GitHub"></p><p>​            git config –global user.name “raoweijiapng”</p><p>​            git config –global user.email <a href="mailto:raoweijia@outlook.com" target="_blank" rel="noopener">raoweijia@outlook.com</a></p><p><img src="http://s9.sinaimg.cn/mw690/0060N6Yozy7grf0cjNeb8&690" alt="教程：第一次从linux中上传文件到GitHub"></p><p>​            git init</p><p>​            git add . （注意：git add 后面有一个小数点）</p><p>​            git status  （查看状态，可选）</p><p><img src="http://s15.sinaimg.cn/bmiddle/0060N6Yozy7grf0pOlU2e&690" alt="教程：第一次从linux中上传文件到GitHub"></p><p>​            git commit -m “It’s my first time to send documents to GitHub in Linux.”  （双引号里内容必须要 写，但内容不限）。</p><p><img src="http://s10.sinaimg.cn/mw690/0060N6Yozy7grf0xAN349&690" alt="教程：第一次从linux中上传文件到GitHub"></p><p>​            git remote add origin <a href="https://github.com/Chenzhiyong47/pyflask.git" target="_blank" rel="noopener">https://github.com/Chenzhiyong47/pyflask.git</a></p><p>​            git push origin master   （如果第一次上传失败，在末尾的加  -f   参数是强制性上传，若GitHub 上面没有文    件与Linux上冲突，可不要这个参数；若GitHub上面有文件与这个冲突，则加上这 个参数。加上这个参数的作     用：删掉GitHub上原有的文件，再上传Linux上的文件）。</p><p>​            按提示输入GitHub的账号和密码。</p><p>​            那么现在就可以上GitHub查看自己刚上传的文件了。</p><p>​          最后启动浏览器并转到https：// 账户名.github.io，就进入到自己的blog。</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git github jekyll </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RTL8821CE无线网卡驱动以及linux命令</title>
      <link href="/2019/10/16/2019-08-16-wif-linux-opratei/"/>
      <url>/2019/10/16/2019-08-16-wif-linux-opratei/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><p>​        安装Ubuntu系统后发现wifi的适配器不能发现，所以要下载相应的驱动并安装。</p><ul><li>查找相应的网卡的信息</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">lspci      -查看系统中所有PCI总线以及连接到该总线上的设备的工具</span><br><span class="line">电脑lspci显示结果为：</span><br><span class="line">00:00.0 Host bridge: Intel Corporation Xeon E3-1200 v6/7th Gen Core Processor Host Bridge/DRAM Registers (rev 08) //主桥</span><br><span class="line">00:02.0 VGA compatible controller: Intel Corporation UHD Graphics 620 (rev 07)            //显卡兼容控制器</span><br><span class="line">00:08.0 System peripheral: Intel Corporation Xeon E3-1200 v5/v6 / E3-1500 v5 / 6th/7th Gen Core Processor Gaussian Mixture Model</span><br><span class="line">00:14.0 USB controller: Intel Corporation Sunrise Point-LP USB 3.0 xHCI Controller (rev 21)       //USB控制器</span><br><span class="line">00:14.2 Signal processing controller: Intel Corporation Sunrise Point-LP Thermal subsystem (rev 21)</span><br><span class="line">00:16.0 Communication controller: Intel Corporation Sunrise Point-LP CSME HECI #1 (rev 21)         //通信控制器</span><br><span class="line">00:17.0 SATA controller: Intel Corporation Sunrise Point-LP SATA Controller [AHCI mode] (rev 21) //硬盘模式</span><br><span class="line">00:1c.0 PCI bridge: Intel Corporation Sunrise Point-LP PCI Express Root Port #1 (rev f1)</span><br><span class="line">00:1c.4 PCI bridge: Intel Corporation Sunrise Point-LP PCI Express Root Port #5 (rev f1)                        //PCI桥</span><br><span class="line">00:1d.0 PCI bridge: Intel Corporation Sunrise Point-LP PCI Express Root Port #9 (rev f1)</span><br><span class="line">00:1d.2 PCI bridge: Intel Corporation Device 9d1a (rev f1)</span><br><span class="line">00:1d.3 PCI bridge: Intel Corporation Device 9d1b (rev f1)</span><br><span class="line">00:1f.0 ISA bridge: Intel Corporation Intel(R) 100 Series Chipset Family LPC Controller/eSPI Controller - 9D4E (rev 21)    //数据局部总线</span><br><span class="line">00:1f.2 Memory controller: Intel Corporation Sunrise Point-LP PMC (rev 21)</span><br><span class="line">00:1f.3 Audio device: Intel Corporation Sunrise Point-LP HD Audio (rev 21)                    //声卡</span><br><span class="line">00:1f.4 SMBus: Intel Corporation Sunrise Point-LP SMBus (rev 21）  //系统管理总线</span><br><span class="line">02:00.0 Display controller: Advanced Micro Devices, Inc. [AMD/ATI] Lexa PRO [Radeon RX 550/550X] (rev c0 ）                //显示控制器</span><br><span class="line">03:00.0 Ethernet controller: Realtek Semiconductor Co., Ltd. RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller (rev 10)</span><br><span class="line">04:00.0 Non-Volatile memory controller: Toshiba America Info Systems Device 0113 (rev 01)</span><br><span class="line">05:00.0 Network controller: Realtek Semiconductor Co., Ltd. RTL8821CE 802.11ac PCIe Wireless Network        //网卡</span><br><span class="line">06:00.0 SD Host controller: O2 Micro, Inc. SD/MMC Card Reader Controller (rev 01)</span><br></pre></td></tr></table></figure><h1 id="安装8821CE无线网卡驱动"><a href="#安装8821CE无线网卡驱动" class="headerlink" title="安装8821CE无线网卡驱动"></a>安装8821CE无线网卡驱动</h1><ul><li><p>升级ubuntu内核到4.14</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ uname -sr</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">*若内核不是*4.14,则进行以下两个操作，否则跳过。</span><br><span class="line">- 安装Kernel4.14</span><br><span class="line">  对于64位操作系统,依次安装三个文件：</span><br><span class="line"> ​$ cd /tmp/</span><br><span class="line">    ​$ wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.14/linux-headers-4.14.0-041400_4.14.0-041400.201711122031_all.deb</span><br><span class="line">    ​$ wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.14/linux-headers-4.14.0-041400-generic_4.14.0-041400.201711122031_amd64.deb</span><br><span class="line">    ​$ wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.14/linux-image-4.14.0-041400-generic_4.14.0-041400.201711122031_amd64.deb</span><br><span class="line">    ​$ sudo dpkg -i *.deb</span><br><span class="line">    ​ $ sudo reboot</span><br><span class="line">    ​安装这些.debs后，重新启动即可。</span><br><span class="line">      -     卸载之前版本的内核</span><br><span class="line">     *   使用如下命令可以自动移除*Ubuntu 16.04 *系统不再需要的旧版内核和软件包：*</span><br></pre></td></tr></table></figure><p>​         $ sudo apt autoremove –purge<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> -    安装gcc，后续make需要</span><br><span class="line">  $  sudo apt-get  install  gcc                --安装完了可以执行</span><br><span class="line">    $  gcc--version                                        --查看版本</span><br><span class="line">  -    下载RTL8821CE驱动</span><br><span class="line"> ​      打开https://github.com/hlcool/rtl8821ce，选择克隆和下载，然后解压。</span><br><span class="line">   -       关闭Secure Boot</span><br><span class="line">关机重启时，连按F12 进入 bios，Tab 切换到管理界面，找到 Secure Boot 选项并关闭。</span><br><span class="line">-      安装RTL8821CE驱动</span><br><span class="line">更改Makefile*文件中*&quot;exportTopDIR ?= ...&quot; *为*&quot;TopDIR ?= PATH TO EXTRACTED DIRECTORY&quot;(填写当前路径地址)。cd 到驱动的文件地址，在当前目录中执行命令。</span><br></pre></td></tr></table></figure></p><pre><code>makesudo make installsudo modprobe -a 8821ce</code></pre><h1 id="初识Linux命令"><a href="#初识Linux命令" class="headerlink" title="初识Linux命令"></a>初识Linux命令</h1><ul><li><p>ls   查看指定目录的目录与文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls  -a         显示指定目录下所有目录与文件，包括隐藏文件。</span><br><span class="line">      -l          以列表的方式显示文件的详细信息(如创建时间,大小)。</span><br><span class="line">      -l  -h   以列表的方式的方式显示文件大小 。</span><br><span class="line">注意：隐藏文件和隐藏文件夹是用来配置应用的。</span><br></pre></td></tr></table></figure></li><li><p>通配符的使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*    -----代表任意个数个字符。</span><br><span class="line">？ -----代表任意一个字符，至少一个。</span><br><span class="line">[]   ----- 表示可以匹配字符族中的任意一个 。</span><br><span class="line">[abc]  -----匹配a、b、c中的任意一个。</span><br><span class="line">[a-f]    -----匹配从a到f范围内的任意一个字符。</span><br></pre></td></tr></table></figure></li><li><p>cd    其功能为更改当前的工作目录，也是用户最常用的命令之一</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd        回到家目录（/home/用户目录）。</span><br><span class="line">cd~     回到家目录（/home/用户目录）。</span><br><span class="line">cd /     回到根目录（/即本地c盘）。</span><br><span class="line">cd ..    回到上级目录。</span><br><span class="line">cd -    显示当前目录的地址。</span><br></pre></td></tr></table></figure></li><li><p>touch （文件名）  创建文件或修改文件时间</p><p>如果文件不存在，可以创建一个空白文件。</p><p>如果已经存在，可以修改文件的末次修改日期。</p></li><li><p>mkdir  （文件夹名） 新建目录、文件夹</p><p>mkdir -p  （文件夹名1   文件夹名2  … ）    递归创建目录 。</p><p>注意：新建目录的名称不能与当前目录中已有的目录或文件同名。</p></li><li><p>rm   （文件名或目录名） 删除文件或目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-f  强制删除，忽略不存在的文件，无需提示 。   </span><br><span class="line">-r  递归地删除目录下的内容，删除文件夹时必须加此参数。</span><br><span class="line">注意：使用rm命令要小心，因为文件删除后不能恢复。</span><br></pre></td></tr></table></figure></li><li><p>tree （目录名）以树状图列出文件目录结构</p><p>tree-d    只显示目录。</p></li><li><p>cp （要拷贝的文件     拷贝到的地址）默认只拷贝文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp   -f    已经存在的文件直接覆盖。</span><br><span class="line">        -i    覆盖前提示。</span><br><span class="line">        -r   递归复制文件和文件夹（也可只复制文件或文件夹）。</span><br></pre></td></tr></table></figure></li><li><p>mv  用来为文件或目录改名、或将文件或目录移入其它位置。</p><table><thead><tr><th>mv 文件名 文件名</th><th>将源文件名改为目标文件名。</th></tr></thead><tbody><tr><td>mv 文件名 目录名</td><td>将文件移动到目标目录。</td></tr><tr><td>mv 目录名 目录名</td><td>目标目录已存在，将源目录移动到目标目录；目标目录不存在则改名。</td></tr></tbody></table><p>​        -i     若指定目录已有同名文件，则先询问是否覆盖旧文件。</p><p>​        -f    在mv操作要覆盖某已有的目标文件时不给任何指示。</p></li><li><p>cat   （文件名） 查看文件内容</p><p>cat   file1   file2  &gt; file      将几个文件合并为一个文件。</p><p>cat  &gt;  filename      只能创建新文件,不能编辑已有文件。</p></li><li><p>echo    用于字符串的输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo string     显示普通字符串。</span><br><span class="line">echo &quot;It is a test&quot; &gt; myfile       显示结果定向到文件，会覆盖原有的内容。</span><br><span class="line">       &gt;&gt;                    表示追加，会将内容追加到已有文件的末尾。</span><br></pre></td></tr></table></figure></li><li><p>more   分屏显示文件内容分页显示</p><p>more 命令类似 cat ，不过会以一页一页的形式显示，更方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示，而且还有搜寻字串的功能（与 vi 相似），使用中的说明文件，请按 h 。</p></li><li><p>ifconfig       查看或配置网卡信息  </p></li><li><p>ping（url） 测试网络是否正常</p></li><li><p>关机</p><p>shutdown -r now  立刻重启。<br>shutdown now      立刻关机。<br>shutdown 20:25    20：25关机。<br>shutdown +10  系统再过十分钟后关机。</p></li><li><p>sudo命令用来以其他身份来执行命令，预设的身份为root。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su - 用户名   切换用户，并且切换目录，-可以切换到用户家目录，否则保持位置不变。</span><br><span class="line">su 不接用户名，可以切换到root。</span><br></pre></td></tr></table></figure></li><li><p>tar  -czvf test.tar.gz  a.c   //压缩 a.c文件为test.tar.gz</p><p>tar  -czvf test.tar.gz           //解压</p></li><li><p>安装<br>sudo apt install 软件包。</p></li><li><p>卸载</p><p>sudo apt remove 软件名。</p></li><li><p>在终端修改图片</p><p>下载imagemagick      –  sudo apt-get install imagemagick。</p><p>转换图片的大小            – convert example.png -resize 200×100 example.png</p><p>转换图片的格式            –convert example.png  example.jpg</p><p>旋转图片90度                –convert howtogeek.jpg -rotate 90 howtogeek-rotating.jpg</p><p>然后加入head.html中。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> gatework  linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RTL8821CE linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识git命令</title>
      <link href="/2019/10/16/2019-08-17-git/"/>
      <url>/2019/10/16/2019-08-17-git/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}</li></ul><p>​今天学习了一些git的相关命令和一些基础的信息。<br>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目，它与svn有很大的不同。</p><ul><li>SVN<br>svn有一个公共的资源库，这个资源库的资源是对所有用户开放的，单个用户可以远程获取它，如果用户对它进行一些修改然后提交，那么这个资源库发生更新，那么其他的用户也可以在连接资源库时，得到更新后的内容。</li><li>Git<br>  用户拥有单独的资源库，这些库之间是连同的，如果一个用户想要更新别人的资源库，可以在修改、更新后连接别人的资源库，然后进行提交。那么别人的资源库就发生改变，对项目的协同合作有很大的便利性。</li></ul><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="Git-工作区、暂存区和版本库"><a href="#Git-工作区、暂存区和版本库" class="headerlink" title="Git 工作区、暂存区和版本库"></a>Git 工作区、暂存区和版本库</h2><p><img src="https://raoweijiapng.github.io/static/img/gitku.png" alt="git工作流程"></p><ul><li>工作区：就是你在电脑里能看到的目录。</li><li>暂存区：英文叫stage, 或index。一般存放在 “.git目录下”下的index文件（.git/ index）中，所以我们把暂存区有时也叫作索引（index）。</li><li>版本库：工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。</li></ul><p>图中的 objects 标识的区域为 Git 的对象库，实际位于 “.git/objects” 目录下，里面包含了创建的各种对象及内容。<br>当对工作区修改（或新增）的文件执行”gitadd”命令时，暂存区的目录树被更新，同时工作区修改（或新增）的文件内容被写入到对象库中的一个新的对象中，而该对象的ID被记录在暂存区的文件索引中。<br>当执行提交操作（git commit）时，暂存区的目录树写到版本库（对象库）中，master 分支会做相应的更新。即 master 指向的目录树就是提交时暂存区的目录树。<br>当执行 “git reset HEAD” 命令时，暂存区的目录树会被重写，被 master 分支指向的目录树所替换，但是工作区不受影响。<br>当执行 “git rm –cached <file>“ 命令时，会直接从暂存区删除文件，工作区则不做出改变。<br>当执行 “git checkout .” 或者 “git checkout –file的指令，会用暂存区全部或指定的文件替换工作区的文件。这个操作很危险，会清除工作区中未添加到暂存区的改动。<br>当执行 “git checkout HEAD .” 或者 “git checkout HEAD <file>“ 命令时，会用HEAD指向的master分支中的全部或者部分文件替换暂存区和以及工作区中的文件。这个命令也是极具危险性的，因为不但会清除工作区中未提交的改动，也会清除暂存区中未提交的改动。</file></file></p><h2 id="Git命令"><a href="#Git命令" class="headerlink" title="Git命令"></a>Git命令</h2><ul><li><p>git init<br>该命令执行完后会在当前目录生成一个 .git目录,这就是你的Git仓库。</p></li><li><p>git init newrepo<br>使用我们指定目录作为Git仓库。</p></li><li><p>git clone </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git://github.com/schacon/grit.git</span><br><span class="line">执行该命令后，会在当前目录下创建一个名为grit的目录，其中包含一个 .git 的目录，用于保存下载下来的所有版本记录。</span><br><span class="line">git clone git@github.com:fsliurujie/test.git        --SSH协议</span><br><span class="line">git clone git://github.com/fsliurujie/test.git      --GIT协议</span><br><span class="line">git clone https://github.com/fsliurujie/test.git    --HTTPS协议</span><br></pre></td></tr></table></figure></li><li><p>git add<br>git add 命令可将该文件添加到缓存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git add README hello.php </span><br><span class="line">我们再执行git status，就可以看到这两个文件已经加上去了。</span><br><span class="line">$ git status -s</span><br><span class="line">A  README</span><br><span class="line">A  hello.php</span><br><span class="line">在 README 添加以下内容：# Runoob Git 测试，然后保存退出。</span><br><span class="line">$ git status -s</span><br><span class="line">AM README</span><br><span class="line">A  hello.php</span><br><span class="line">&quot;AM&quot; 状态的意思是，这个文件在我们将它添加到缓存之后又有改动。</span><br></pre></td></tr></table></figure></li></ul><p>git add . 命令来添加当前项目的所有文件。</p><ul><li><p>git status<br>git status 查看在你上次提交之后是否有修改，该命令的后面加了 -s 参数，可以获得简短的结果输出。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line"></span><br><span class="line">Initial commit</span><br><span class="line"></span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use &quot;git rm --cached &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">    new file:   README</span><br><span class="line">    new file:   hello.php</span><br></pre></td></tr></table></figure></li><li><p>git diff<br>尚未缓存的改动：git diff<br>查看已缓存的改动： git diff –cached<br>查看已缓存的与未缓存的所有改动：git diff HEAD<br>显示摘要而非整个 diff：git diff –stat<br>1.git diff</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hello.php 文件中输入以下内容&lt;?php echo &apos;菜鸟教程：www.runoob.com&apos;;</span><br><span class="line">?&gt;</span><br><span class="line">$ git diff</span><br><span class="line">diff --git a/hello.php b/hello.php</span><br><span class="line">index e69de29..69b5711 100644</span><br><span class="line">--- a/hello.php</span><br><span class="line">+++ b/hello.php</span><br><span class="line">@@ -0,0 +1,3 @@</span><br><span class="line">+&lt;?php</span><br><span class="line">+echo &apos;菜鸟教程：www.runoob.com&apos;;</span><br><span class="line">+?&gt;</span><br></pre></td></tr></table></figure><p>2.git diff –cacheds</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">把hello.php 、rename 写入缓存。</span><br><span class="line">$ git diff --cached</span><br><span class="line">diff --git a/README b/README</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..8f87495</span><br><span class="line">--- /dev/null</span><br><span class="line">+++ b/README</span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line">+# Runoob Git 测试</span><br><span class="line">diff --git a/hello.php b/hello.php</span><br><span class="line">new file mode 100644</span><br><span class="line">index 0000000..69b5711</span><br><span class="line">--- /dev/null</span><br><span class="line">+++ b/hello.php</span><br><span class="line">@@ -0,0 +1,3 @@</span><br><span class="line">+&lt;?php</span><br><span class="line">+echo &apos;菜鸟教程：www.runoob.com&apos;;</span><br><span class="line">+?&gt;</span><br></pre></td></tr></table></figure></li><li><p>git commit</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &apos;第一次版本提交&apos;</span><br><span class="line">[master (root-commit) d32cf1f] 第一次版本提交</span><br><span class="line">2 files changed, 4 insertions(+)</span><br><span class="line">create mode 100644 README</span><br><span class="line">create mode 100644 hello.php</span><br></pre></td></tr></table></figure></li></ul><p>如果你觉得git add提交缓存的流程太过繁琐，Git也允许你用-a选项跳过这一步<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git commit -am &apos;修改 hello.php 文件&apos;</span><br><span class="line">[master 71ee2cb] 修改 hello.php 文件</span><br><span class="line">1 file changed, 1 insertion(+)</span><br></pre></td></tr></table></figure></p><ul><li><p>git reset HEAD  用于取消已缓存的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">修改rename、hello.php后,提交到缓存区,然后取消hello.php的缓存。</span><br><span class="line">$ git add .</span><br><span class="line">$ git status -s</span><br><span class="line">M  README</span><br><span class="line">M  hello.php</span><br><span class="line">$ git reset HEAD hello.php </span><br><span class="line">Unstaged changes after reset:</span><br><span class="line">M    hello.php</span><br><span class="line">现在执行git commit，只会将README文件的改动提交，而hello.php是没有的。</span><br><span class="line">$ git commit -m &apos;修改&apos;</span><br><span class="line">[master f50cfda] 修改</span><br><span class="line">1 file changed, 1 insertion(+)</span><br><span class="line">$ git status -s</span><br><span class="line">M hello.php</span><br><span class="line">简而言之，执行gitresetHEAD以取消之前gitadd添加，但不希望包含在下一提交快照中的缓存。</span><br><span class="line">注意：红色‘M’是修改但未缓存，绿色‘M’是修改后缓存了。</span><br></pre></td></tr></table></figure></li><li><p>git rm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git rm &lt;file&gt;            从Git中移除某个文件，这个文件未被放到缓存去。</span><br><span class="line">git rm -f &lt;file&gt;         之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f。</span><br><span class="line">git rm --cached &lt;file&gt;   只把文件从暂存区域移除，当前工作目录中保留有它。</span><br><span class="line">git rm –r *              可以递归删除，即如果后面跟的是一个目录做为参数，则会递归删除整个目录中的所有子目录和文件。</span><br></pre></td></tr></table></figure></li><li><p>git mv<br>用于移动或重命名一个文件、目录、软连接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git mv README  README.md</span><br><span class="line">$ ls</span><br><span class="line">README.md</span><br></pre></td></tr></table></figure></li></ul><h2 id="Git-分支管理"><a href="#Git-分支管理" class="headerlink" title="Git 分支管理"></a>Git 分支管理</h2><ul><li><p>git branch (branchname)  创建分支命令</p></li><li><p>git checkout (branchname)切换分支命令</p></li><li><p>git merge                合并分支命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">git branch   没有参数时，git branch会列出你在本地的分支。</span><br><span class="line">$ git branch testing</span><br><span class="line">$ git branch</span><br><span class="line">* master</span><br><span class="line">  testing</span><br><span class="line">此时创建的新分支和之前的master内容是一样的。</span><br><span class="line">$ git checkout testing</span><br><span class="line">Switched to branch &apos;testing&apos;</span><br><span class="line">$ ls</span><br><span class="line">README</span><br><span class="line">此时切换到testing分支。</span><br><span class="line">$ git checkout -b newtest</span><br><span class="line">Switched to a new branch &apos;newtest&apos;</span><br><span class="line">$ git rm test.txt </span><br><span class="line">rm &apos;test.txt&apos;</span><br><span class="line">$ ls</span><br><span class="line">README</span><br><span class="line">可以使用 git checkout -b (branchname) 命令来创建新分支并立即切换到该分支下，从而在该分支中操作。</span><br><span class="line">使用分支将工作切分开来，从而让我们能够在不同开发环境中做事，并来回切换。</span><br></pre></td></tr></table></figure></li><li><p>删除分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch -d (branchname)  删除分支命令。</span><br><span class="line">$ git branch -d testing</span><br><span class="line">Deleted branch testing (was 85fc7e7).</span><br><span class="line">$ git branch</span><br><span class="line">* master</span><br></pre></td></tr></table></figure></li><li><p>分支合并</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git merge</span><br><span class="line">某分支有了独立内容,可以使用这个命令将任何分支合并到当前分支中。</span><br><span class="line">$ git merge newtest</span><br><span class="line">Updating 3e92c19..c1501a2</span><br><span class="line">Fast-forward</span><br><span class="line"> runoob.php | 0</span><br><span class="line"> test.txt   | 1 -</span><br><span class="line"> 2 files changed, 1 deletion(-)</span><br><span class="line"> create mode 100644 runoob.php</span><br><span class="line"> delete mode 100644 test.txt</span><br><span class="line">合并，就是把分支中的修改的操作放到主分支中。合并结束后，可以删除分支。</span><br></pre></td></tr></table></figure></li><li><p>合并冲突<br>我们创建两个及以上的分支时，在两个不同的分支上进行不同的操作，然后把两个分支合并到一起时，直接使用git merge命令进行合并时会发生合并冲突。<br>接下来我们需要手动去修改它。<br>要去把其中一个分支病机上另一个，即补上另一个分支的不同操作。<br>最后可以用git add写入缓存，告诉Git文件冲突已经解决，然后提交结果。</p></li><li><p>Git 查看提交历史<br>想回顾下提交历史，我们可以使用git log命令查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ git log</span><br><span class="line">commit d5e9fc2c811e0ca2b2d28506ef7dc14171a207d9 (HEAD -&gt; master)</span><br><span class="line">Merge: c68142b 7774248</span><br><span class="line">Author: runoob &lt;test@runoob.com&gt;</span><br><span class="line">Date:   Fri May 3 15:55:58 2019 +0800</span><br><span class="line"></span><br><span class="line">    Merge branch &apos;change_site&apos;</span><br><span class="line"></span><br><span class="line">commit c68142b562c260c3071754623b08e2657b4c6d5b</span><br><span class="line">Author: runoob &lt;test@runoob.com&gt;</span><br><span class="line">Date:   Fri May 3 15:52:12 2019 +0800</span><br><span class="line"></span><br><span class="line">此命令得到历史提交记录是非常详细的。</span><br></pre></td></tr></table></figure></li></ul><p>oneline 选项是用来查看历史记录的简洁的版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline</span><br><span class="line">d5e9fc2 (HEAD -&gt; master) Merge branch &apos;change_site&apos;</span><br><span class="line">c68142b 修改代码</span><br><span class="line">7774248 (change_site) changed the runoob.php</span><br><span class="line">c1501a2 removed test.txt、add runoob.php</span><br><span class="line">3e92c19 add test.txt</span><br><span class="line">3b58100 第一次版本提交</span><br></pre></td></tr></table></figure><p>还可以用 –graph 选项，查看历史中什么时候出现了分支、合并</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git log --graph --oneline</span><br><span class="line">*   d5e9fc2 (HEAD -&gt; master) Merge branch &apos;change_site&apos;</span><br><span class="line">|\  </span><br><span class="line">| * 7774248 (change_site) changed the runoob.php</span><br><span class="line">* | c68142b 修改代码</span><br><span class="line">|/  </span><br><span class="line">* c1501a2 removed test.txt、add runoob.php</span><br><span class="line">* 3e92c19 add test.txt</span><br><span class="line">* 3b58100 第一次版本提交</span><br></pre></td></tr></table></figure><p>也可以用 –reverse 参数来逆向显示所有日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git log --reverse --oneline</span><br><span class="line">3b58100 第一次版本提交</span><br><span class="line">3e92c19 add test.txt</span><br><span class="line">c1501a2 removed test.txt、add runoob.php</span><br><span class="line">7774248 (change_site) changed the runoob.php</span><br><span class="line">c68142b 修改代码</span><br><span class="line">d5e9fc2 (HEAD -&gt; master) Merge branch &apos;change_site</span><br></pre></td></tr></table></figure><p>查找指定用户的提交日志：git log –author , 例如，比方说我们要找Git源码中Linus提交五个的记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git log --author=Linus --oneline -5</span><br><span class="line">81b50f3 Move &apos;builtin-*&apos; into a &apos;builtin/&apos; subdirectory</span><br><span class="line">3bb7256 make &quot;index-pack&quot; a built-in</span><br><span class="line">377d027 make &quot;git pack-redundant&quot; a built-in</span><br><span class="line">b532581 make &quot;git unpack-file&quot; a built-in</span><br><span class="line">112dd51 make &quot;mktag&quot; a built-in</span><br></pre></td></tr></table></figure><p>如果要指定日期，可以执行几个选项：–since 和 –before，但是你也可以用 –until 和 –after。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git log --oneline --before=&#123;3.weeks.ago&#125; --after=&#123;2010-04-18&#125; --no-merges</span><br></pre></td></tr></table></figure><ul><li>Git 标签<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a v1.0  </span><br><span class="line">a 选项意为&quot;创建一个带注解的标签&quot;。</span><br><span class="line">如果我们忘了给某个提交打标签，又将它发布了，我们可以给它追加标签。</span><br><span class="line">获取日志记录，选取85fc7e7(上面实例最后一行)</span><br><span class="line">$ git tag -a v0.9 85fc7e7</span><br><span class="line">$ git log --oneline --decorate --graph</span><br><span class="line">*   d5e9fc2 (HEAD -&gt; master) Merge branch &apos;change_site&apos;</span><br><span class="line">|\  </span><br><span class="line">| * 7774248 (change_site) changed the runoob.php</span><br><span class="line">* | c68142b 修改代码</span><br><span class="line">|/  </span><br><span class="line">* c1501a2 removed test.txt、add runoob.php</span><br><span class="line">* 3e92c19 add test.txt</span><br><span class="line">* 3b58100 (tag: v0.9) 第一次版本提交</span><br></pre></td></tr></table></figure></li></ul><p>查看所有标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git tag</span><br><span class="line">v0.9</span><br><span class="line">v1.0</span><br><span class="line">指定标签信息命令</span><br><span class="line">git tag -a &lt;tagname&gt; -m &quot;runoob.com标签&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Ubuntu操作系统</title>
      <link href="/2019/10/16/2019-08-14-ubuntu-markdown/"/>
      <url>/2019/10/16/2019-08-14-ubuntu-markdown/</url>
      
        <content type="html"><![CDATA[<ul><li>TOC<br>{:toc}<br>​        主流的Linux发行版　Ubuntu， DebianGNU/Linux ，Fedora，Gentoo，MandrivaLinux ，PCLinuxOS，SlackwareLinux ，openSUSE，ArchLinux，Puppylinux，Mint,CentOS,Red Hat等Ubuntu是一个以桌面应用为主的Linux操作系统。</li></ul><h1 id="安装Ubuntu操作系统"><a href="#安装Ubuntu操作系统" class="headerlink" title="安装Ubuntu操作系统"></a>安装Ubuntu操作系统</h1><ul><li><p>下载ubuntu的ISO文件</p><p>到ubuntu的官方网站，去下载到ubuntu 16.04的iso文件。</p></li><li><p>下载ultraiso工具</p></li></ul><p>​         ultraiso工具可以用来制作U盘启动盘，打开ultraiso软件，在菜单栏【文件】-【打开】，选择下载的ISO文件。然后菜单栏里【启动】-【写入硬盘映像】，选择了写入硬盘映像后，弹出窗口。在窗口中的硬盘驱动器选择你插入的U盘，点击【写入】开始制作U盘的启动盘，U盘里面以前的东西都会被格式化了。需要经过几分钟，进度条到100%，那就是启动盘制作成功了。</p><ul><li>装系统</li></ul><p>​        把制作好的U盘启动盘插入需要安装操作系统的那台电脑上面之后，重新启动或者开机。在电脑重新开启或关机时，按F12或者F2键进入BIOS系统设置启动项目为USB。装完之后$sudo apt-get update。如果网卡不好使，就重启网卡，sudo ifconfig eth0 down（关闭）、sudo ifconfig eth0 up。</p><h1 id="了解Makdown语言"><a href="#了解Makdown语言" class="headerlink" title="了解Makdown语言"></a>了解Makdown语言</h1><ul><li><p>使用<strong>=</strong> 和 <strong>-</strong>，标记<strong>一级</strong>和<strong>二级</strong> 标题。</p><p>示例md代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">一级标题</span><br><span class="line">=</span><br><span class="line">二级标题</span><br><span class="line">-</span><br></pre></td></tr></table></figure></li></ul><p>​        示例效果：</p><p><img src="https://upload-images.jianshu.io/upload_images/1293430-53ab03e9817c324b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/385/format/webp" alt="img"></p><ul><li><p>使用 <strong>#</strong>,可以表示 <strong>1-6级</strong> 标题。</p><p>示例md代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 第一级标题 `&lt;h1&gt;` </span><br><span class="line"></span><br><span class="line">## 第二级标题 `&lt;h2&gt;` </span><br><span class="line"></span><br><span class="line">### 第三级标题 `&lt;h3&gt;` </span><br><span class="line"></span><br><span class="line">#### 第二四级标题 `&lt;h4&gt;` </span><br><span class="line"></span><br><span class="line">##### 第五级标题 `&lt;h5&gt;` </span><br><span class="line"></span><br><span class="line">###### 第六级标题 `&lt;h6&gt;`</span><br></pre></td></tr></table></figure><p>示例效果：</p></li></ul><p>  <img src="https://upload-images.jianshu.io/upload_images/1293430-53e892b81b908d00.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/475/format/webp" alt="img"></p><ul><li><p>段落：段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车。</p></li><li><p>在段落的每行或者只在第一行使用符号 <strong>&gt;</strong> ,还可使用多个嵌套引用。</p><p>示例md代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 区块引用</span><br><span class="line">&gt; &gt; 嵌套引用</span><br><span class="line">&gt; &gt; &gt;三嵌套引用</span><br><span class="line">&gt; &gt; &gt; &gt; 四嵌套引用</span><br></pre></td></tr></table></figure><p>示例效果：</p></li></ul><p>  <img src="https://upload-images.jianshu.io/upload_images/1293430-aa265ce53d458695.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/393/format/webp" alt="img"></p><ul><li><p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。</p></li><li><p>使用 <strong>.</strong> 、<strong>+</strong>、或<strong>-</strong> 标记无序列表。</p></li><li><p>分割线最常使用就是三个或以上的 <code>*</code> ， <code>======</code>还可以使用 <code>-</code> 和 <code>_</code>。</p></li><li><p>链接可以由两种形式生成，<strong>行内式</strong> 和 <strong>参考式</strong>。</p><p>行内式：</p><p>示例md代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[GitHub](http://github.com)</span><br><span class="line">自动生成连接  &lt;http://www.github.com/&gt;</span><br></pre></td></tr></table></figure><p>示例效果:</p></li></ul><p>  <img src="https:////upload-images.jianshu.io/upload_images/1293430-aad2a0468efc03a1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/669/format/webp" alt="img"></p><p>  参考试：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[GitHub][1]</span><br><span class="line">[1]:http://github.com</span><br><span class="line">自动生成连接  &lt;http://www.github.com/&gt;</span><br></pre></td></tr></table></figure><p>  示例效果:</p><p>  <img src="https:////upload-images.jianshu.io/upload_images/1293430-58c89b40f71f6079.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/684/format/webp" alt="img"></p><ul><li><p>添加图片形式和链接相似，只需要在链接的基础上前方加一个 <strong>！</strong>号。</p><p>示例md代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![blockchain](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/</span><br><span class="line">u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg &quot;区块链&quot;)</span><br></pre></td></tr></table></figure></li></ul><h1 id="安装typora"><a href="#安装typora" class="headerlink" title="安装typora"></a>安装typora</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget  -qO  -  https://typora.io/linux/public-key.asc | sudo apt-key add -</span><br><span class="line"></span><br><span class="line">sudo add-apt-repository&apos;deb https://typora.io/linux ./&apos;</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install typora</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/10/15/hello-world/"/>
      <url>/2019/10/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
